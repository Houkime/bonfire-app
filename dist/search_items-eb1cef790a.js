searchNodes=[{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.DataCase.html","title":"Bonfire.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.DataCase.html#errors_on/1","title":"Bonfire.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.DataHelpers.html","title":"Bonfire.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Access.html","title":"Bonfire.Data.AccessControl.Access","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Access.html#changeset/2","title":"Bonfire.Data.AccessControl.Access.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Access.Migration.html","title":"Bonfire.Data.AccessControl.Access.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Access.Migration.html#create_access_table/0","title":"Bonfire.Data.AccessControl.Access.Migration.create_access_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Access.Migration.html#create_access_table/1","title":"Bonfire.Data.AccessControl.Access.Migration.create_access_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Access.Migration.html#drop_access_table/0","title":"Bonfire.Data.AccessControl.Access.Migration.drop_access_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Access.Migration.html#migrate_access/0","title":"Bonfire.Data.AccessControl.Access.Migration.migrate_access/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Access.Migration.html#migrate_access/1","title":"Bonfire.Data.AccessControl.Access.Migration.migrate_access/1","type":"macro"},{"doc":"A Global cache of known accesses to be queried by their (Pointer) IDs or name strings. Use of the Accesses Service requires: Exporting accesses/0 in relevant modules, returning a keylist of name and (pointer) id. Start Bonfire.Data.AccessControl.Accesses before querying. To populate :bonfire_data_access_control, :search_path in config the list of OTP applications where acceses are declared. OTP 21.2 or greater, though we recommend using the most recent release available. While this module is a GenServer, it is only responsible for setup of the cache and then exits with :ignore having done so. It is not recommended to restart the service as this will lead to a stop the world garbage collection of all processes and the copying of the entire cache to each process that has queried it since its last local garbage collection.","ref":"Bonfire.Data.AccessControl.Accesses.html","title":"Bonfire.Data.AccessControl.Accesses","type":"module"},{"doc":"Look up a Access by name or id, throw :not_found if not found.","ref":"Bonfire.Data.AccessControl.Accesses.html#access!/1","title":"Bonfire.Data.AccessControl.Accesses.access!/1","type":"function"},{"doc":"Get a Access identified by name or id.","ref":"Bonfire.Data.AccessControl.Accesses.html#access/1","title":"Bonfire.Data.AccessControl.Accesses.access/1","type":"function"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Bonfire.Data.AccessControl.Accesses.html#child_spec/1","title":"Bonfire.Data.AccessControl.Accesses.child_spec/1","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Accesses.html#data/0","title":"Bonfire.Data.AccessControl.Accesses.data/0","type":"function"},{"doc":"Look up a access id by id, name or schema, throw :not_found if not found.","ref":"Bonfire.Data.AccessControl.Accesses.html#id!/1","title":"Bonfire.Data.AccessControl.Accesses.id!/1","type":"function"},{"doc":"Look up a access id by id, name or schema.","ref":"Bonfire.Data.AccessControl.Accesses.html#id/1","title":"Bonfire.Data.AccessControl.Accesses.id/1","type":"function"},{"doc":"Look up many ids at once, throw :not_found if any of them are not found","ref":"Bonfire.Data.AccessControl.Accesses.html#ids!/1","title":"Bonfire.Data.AccessControl.Accesses.ids!/1","type":"function"},{"doc":"Populates the global cache with access data via introspection.","ref":"Bonfire.Data.AccessControl.Accesses.html#start_link/1","title":"Bonfire.Data.AccessControl.Accesses.start_link/1","type":"function"},{"doc":"A query is either a access name atom or (Pointer) id binary","ref":"Bonfire.Data.AccessControl.Accesses.html#t:query/0","title":"Bonfire.Data.AccessControl.Accesses.query/0","type":"type"},{"doc":"Conceptually, a complete list of all permissions for everybody. In practice, it's a partial specification, and anything not explicitly granted is assumed to be denied. Can be reused to secure multiple objects, thus exists independently of any object.","ref":"Bonfire.Data.AccessControl.Acl.html","title":"Bonfire.Data.AccessControl.Acl","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Acl.html#changeset/2","title":"Bonfire.Data.AccessControl.Acl.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Acl.Migration.html","title":"Bonfire.Data.AccessControl.Acl.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Acl.Migration.html#create_acl_table/0","title":"Bonfire.Data.AccessControl.Acl.Migration.create_acl_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Acl.Migration.html#create_acl_table/1","title":"Bonfire.Data.AccessControl.Acl.Migration.create_acl_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Acl.Migration.html#drop_acl_table/0","title":"Bonfire.Data.AccessControl.Acl.Migration.drop_acl_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Acl.Migration.html#migrate_acl/0","title":"Bonfire.Data.AccessControl.Acl.Migration.migrate_acl/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Acl.Migration.html#migrate_acl/1","title":"Bonfire.Data.AccessControl.Acl.Migration.migrate_acl/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Circle.html","title":"Bonfire.Data.AccessControl.Circle","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Circle.html#changeset/2","title":"Bonfire.Data.AccessControl.Circle.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Circle.Migration.html","title":"Bonfire.Data.AccessControl.Circle.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Circle.Migration.html#migrate_circle/0","title":"Bonfire.Data.AccessControl.Circle.Migration.migrate_circle/0","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Controlled.html","title":"Bonfire.Data.AccessControl.Controlled","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Controlled.html#changeset/2","title":"Bonfire.Data.AccessControl.Controlled.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Controlled.Migration.html","title":"Bonfire.Data.AccessControl.Controlled.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Controlled.Migration.html#create_controlled_acl_index/1","title":"Bonfire.Data.AccessControl.Controlled.Migration.create_controlled_acl_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Controlled.Migration.html#create_controlled_table/0","title":"Bonfire.Data.AccessControl.Controlled.Migration.create_controlled_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Controlled.Migration.html#create_controlled_table/1","title":"Bonfire.Data.AccessControl.Controlled.Migration.create_controlled_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Controlled.Migration.html#drop_controlled_acl_index/1","title":"Bonfire.Data.AccessControl.Controlled.Migration.drop_controlled_acl_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Controlled.Migration.html#drop_controlled_table/0","title":"Bonfire.Data.AccessControl.Controlled.Migration.drop_controlled_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Controlled.Migration.html#migrate_controlled/0","title":"Bonfire.Data.AccessControl.Controlled.Migration.migrate_controlled/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Controlled.Migration.html#migrate_controlled/1","title":"Bonfire.Data.AccessControl.Controlled.Migration.migrate_controlled/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Encircle.html","title":"Bonfire.Data.AccessControl.Encircle","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Encircle.html#changeset/2","title":"Bonfire.Data.AccessControl.Encircle.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Encircle.Migration.html","title":"Bonfire.Data.AccessControl.Encircle.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Encircle.Migration.html#create_encircle_table/0","title":"Bonfire.Data.AccessControl.Encircle.Migration.create_encircle_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Encircle.Migration.html#create_encircle_table/1","title":"Bonfire.Data.AccessControl.Encircle.Migration.create_encircle_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Encircle.Migration.html#drop_encircle_table/0","title":"Bonfire.Data.AccessControl.Encircle.Migration.drop_encircle_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Encircle.Migration.html#migrate_encircle/0","title":"Bonfire.Data.AccessControl.Encircle.Migration.migrate_encircle/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Encircle.Migration.html#migrate_encircle/1","title":"Bonfire.Data.AccessControl.Encircle.Migration.migrate_encircle/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Encircle.Migration.html#migrate_encircle_circle_index/2","title":"Bonfire.Data.AccessControl.Encircle.Migration.migrate_encircle_circle_index/2","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Encircle.Migration.html#migrate_encircle_unique_index/2","title":"Bonfire.Data.AccessControl.Encircle.Migration.migrate_encircle_unique_index/2","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Grant.html","title":"Bonfire.Data.AccessControl.Grant","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Grant.html#changeset/2","title":"Bonfire.Data.AccessControl.Grant.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Grant.Migration.html","title":"Bonfire.Data.AccessControl.Grant.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Grant.Migration.html#create_grant_table/0","title":"Bonfire.Data.AccessControl.Grant.Migration.create_grant_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Grant.Migration.html#create_grant_table/1","title":"Bonfire.Data.AccessControl.Grant.Migration.create_grant_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Grant.Migration.html#create_grant_unique_index/1","title":"Bonfire.Data.AccessControl.Grant.Migration.create_grant_unique_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Grant.Migration.html#drop_grant_table/0","title":"Bonfire.Data.AccessControl.Grant.Migration.drop_grant_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Grant.Migration.html#drop_grant_unique_index/1","title":"Bonfire.Data.AccessControl.Grant.Migration.drop_grant_unique_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Grant.Migration.html#migrate_grant/0","title":"Bonfire.Data.AccessControl.Grant.Migration.migrate_grant/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Grant.Migration.html#migrate_grant/1","title":"Bonfire.Data.AccessControl.Grant.Migration.migrate_grant/1","type":"macro"},{"doc":"A mixin for superpowers","ref":"Bonfire.Data.AccessControl.InstanceAdmin.html","title":"Bonfire.Data.AccessControl.InstanceAdmin","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.InstanceAdmin.html#changeset/3","title":"Bonfire.Data.AccessControl.InstanceAdmin.changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.InstanceAdmin.Migration.html","title":"Bonfire.Data.AccessControl.InstanceAdmin.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.InstanceAdmin.Migration.html#create_instance_admin_table/0","title":"Bonfire.Data.AccessControl.InstanceAdmin.Migration.create_instance_admin_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.InstanceAdmin.Migration.html#create_instance_admin_table/1","title":"Bonfire.Data.AccessControl.InstanceAdmin.Migration.create_instance_admin_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.InstanceAdmin.Migration.html#drop_instance_admin_table/0","title":"Bonfire.Data.AccessControl.InstanceAdmin.Migration.drop_instance_admin_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.InstanceAdmin.Migration.html#migrate_instance_admin/0","title":"Bonfire.Data.AccessControl.InstanceAdmin.Migration.migrate_instance_admin/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.InstanceAdmin.Migration.html#migrate_instance_admin/1","title":"Bonfire.Data.AccessControl.InstanceAdmin.Migration.migrate_instance_admin/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Verb.html","title":"Bonfire.Data.AccessControl.Verb","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Verb.html#changeset/2","title":"Bonfire.Data.AccessControl.Verb.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Verb.Migration.html","title":"Bonfire.Data.AccessControl.Verb.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.AccessControl.Verb.Migration.html#create_verb_table/0","title":"Bonfire.Data.AccessControl.Verb.Migration.create_verb_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Verb.Migration.html#create_verb_table/1","title":"Bonfire.Data.AccessControl.Verb.Migration.create_verb_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Verb.Migration.html#create_verb_verb_index/1","title":"Bonfire.Data.AccessControl.Verb.Migration.create_verb_verb_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Verb.Migration.html#drop_verb_table/0","title":"Bonfire.Data.AccessControl.Verb.Migration.drop_verb_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Verb.Migration.html#drop_verb_verb_index/1","title":"Bonfire.Data.AccessControl.Verb.Migration.drop_verb_verb_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.AccessControl.Verb.Migration.html#migrate_verb/0","title":"Bonfire.Data.AccessControl.Verb.Migration.migrate_verb/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.AccessControl.Verb.Migration.html#migrate_verb/1","title":"Bonfire.Data.AccessControl.Verb.Migration.migrate_verb/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Actor.html","title":"Bonfire.Data.ActivityPub.Actor","type":"module"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Actor.html#changeset/2","title":"Bonfire.Data.ActivityPub.Actor.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Actor.Migration.html","title":"Bonfire.Data.ActivityPub.Actor.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Actor.Migration.html#create_actor_table/0","title":"Bonfire.Data.ActivityPub.Actor.Migration.create_actor_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Actor.Migration.html#create_actor_table/1","title":"Bonfire.Data.ActivityPub.Actor.Migration.create_actor_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Actor.Migration.html#drop_actor_table/0","title":"Bonfire.Data.ActivityPub.Actor.Migration.drop_actor_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Actor.Migration.html#migrate_actor/0","title":"Bonfire.Data.ActivityPub.Actor.Migration.migrate_actor/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Actor.Migration.html#migrate_actor/1","title":"Bonfire.Data.ActivityPub.Actor.Migration.migrate_actor/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peer.html","title":"Bonfire.Data.ActivityPub.Peer","type":"module"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peer.html#changeset/3","title":"Bonfire.Data.ActivityPub.Peer.changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peer.Migration.html","title":"Bonfire.Data.ActivityPub.Peer.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peer.Migration.html#create_peer_ap_base_uri_index/1","title":"Bonfire.Data.ActivityPub.Peer.Migration.create_peer_ap_base_uri_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peer.Migration.html#create_peer_display_hostname_index/1","title":"Bonfire.Data.ActivityPub.Peer.Migration.create_peer_display_hostname_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peer.Migration.html#create_peer_table/0","title":"Bonfire.Data.ActivityPub.Peer.Migration.create_peer_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peer.Migration.html#create_peer_table/1","title":"Bonfire.Data.ActivityPub.Peer.Migration.create_peer_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peer.Migration.html#drop_peer_ap_base_uri_index/1","title":"Bonfire.Data.ActivityPub.Peer.Migration.drop_peer_ap_base_uri_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peer.Migration.html#drop_peer_display_hostname_index/1","title":"Bonfire.Data.ActivityPub.Peer.Migration.drop_peer_display_hostname_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peer.Migration.html#drop_peer_table/0","title":"Bonfire.Data.ActivityPub.Peer.Migration.drop_peer_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peer.Migration.html#migrate_peer/0","title":"Bonfire.Data.ActivityPub.Peer.Migration.migrate_peer/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peer.Migration.html#migrate_peer/1","title":"Bonfire.Data.ActivityPub.Peer.Migration.migrate_peer/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peered.html","title":"Bonfire.Data.ActivityPub.Peered","type":"module"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peered.html#changeset/3","title":"Bonfire.Data.ActivityPub.Peered.changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peered.Migration.html","title":"Bonfire.Data.ActivityPub.Peered.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peered.Migration.html#create_peered_peer_index/1","title":"Bonfire.Data.ActivityPub.Peered.Migration.create_peered_peer_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peered.Migration.html#create_peered_table/0","title":"Bonfire.Data.ActivityPub.Peered.Migration.create_peered_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peered.Migration.html#create_peered_table/1","title":"Bonfire.Data.ActivityPub.Peered.Migration.create_peered_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peered.Migration.html#drop_peered_peer_index/1","title":"Bonfire.Data.ActivityPub.Peered.Migration.drop_peered_peer_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peered.Migration.html#drop_peered_table/0","title":"Bonfire.Data.ActivityPub.Peered.Migration.drop_peered_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peered.Migration.html#migrate_peered/0","title":"Bonfire.Data.ActivityPub.Peered.Migration.migrate_peered/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.ActivityPub.Peered.Migration.html#migrate_peered/1","title":"Bonfire.Data.ActivityPub.Peered.Migration.migrate_peered/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Edges.Edge.html","title":"Bonfire.Data.Edges.Edge","type":"module"},{"doc":"","ref":"Bonfire.Data.Edges.Edge.html#changeset/2","title":"Bonfire.Data.Edges.Edge.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Edges.Edge.Migration.html","title":"Bonfire.Data.Edges.Edge.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Edges.Edge.Migration.html#create_edge_table/0","title":"Bonfire.Data.Edges.Edge.Migration.create_edge_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Edges.Edge.Migration.html#create_edge_table/1","title":"Bonfire.Data.Edges.Edge.Migration.create_edge_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Edges.Edge.Migration.html#drop_edge_table/0","title":"Bonfire.Data.Edges.Edge.Migration.drop_edge_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Edges.Edge.Migration.html#migrate_edge/0","title":"Bonfire.Data.Edges.Edge.Migration.migrate_edge/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Edges.Edge.Migration.html#migrate_edge/1","title":"Bonfire.Data.Edges.Edge.Migration.migrate_edge/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Edges.Edge.Migration.html#migrate_edge_object_index/2","title":"Bonfire.Data.Edges.Edge.Migration.migrate_edge_object_index/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Edges.Edge.Migration.html#migrate_edge_subject_index/2","title":"Bonfire.Data.Edges.Edge.Migration.migrate_edge_subject_index/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Edges.Edge.Migration.html#migrate_edge_table_index/2","title":"Bonfire.Data.Edges.Edge.Migration.migrate_edge_table_index/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Edges.Edge.Migration.html#migrate_type_unique_index/2","title":"Bonfire.Data.Edges.Edge.Migration.migrate_type_unique_index/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Edges.EdgeTotal.html","title":"Bonfire.Data.Edges.EdgeTotal","type":"module"},{"doc":"","ref":"Bonfire.Data.Edges.EdgeTotal.html#changeset/2","title":"Bonfire.Data.Edges.EdgeTotal.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Edges.EdgeTotal.Migration.html","title":"Bonfire.Data.Edges.EdgeTotal.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Edges.EdgeTotal.Migration.html#create_edge_total_object_count_index/1","title":"Bonfire.Data.Edges.EdgeTotal.Migration.create_edge_total_object_count_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Edges.EdgeTotal.Migration.html#create_edge_total_subject_count_index/1","title":"Bonfire.Data.Edges.EdgeTotal.Migration.create_edge_total_subject_count_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Edges.EdgeTotal.Migration.html#create_edge_total_table/0","title":"Bonfire.Data.Edges.EdgeTotal.Migration.create_edge_total_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Edges.EdgeTotal.Migration.html#create_edge_total_table/1","title":"Bonfire.Data.Edges.EdgeTotal.Migration.create_edge_total_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Edges.EdgeTotal.Migration.html#create_edge_total_table_index/1","title":"Bonfire.Data.Edges.EdgeTotal.Migration.create_edge_total_table_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Edges.EdgeTotal.Migration.html#drop_edge_total_object_count_index/1","title":"Bonfire.Data.Edges.EdgeTotal.Migration.drop_edge_total_object_count_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Edges.EdgeTotal.Migration.html#drop_edge_total_subject_count_index/1","title":"Bonfire.Data.Edges.EdgeTotal.Migration.drop_edge_total_subject_count_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Edges.EdgeTotal.Migration.html#drop_edge_total_table/0","title":"Bonfire.Data.Edges.EdgeTotal.Migration.drop_edge_total_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Edges.EdgeTotal.Migration.html#drop_edge_total_table_index/1","title":"Bonfire.Data.Edges.EdgeTotal.Migration.drop_edge_total_table_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Edges.EdgeTotal.Migration.html#migrate_edge_total/0","title":"Bonfire.Data.Edges.EdgeTotal.Migration.migrate_edge_total/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Edges.EdgeTotal.Migration.html#migrate_edge_total/1","title":"Bonfire.Data.Edges.EdgeTotal.Migration.migrate_edge_total/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Edges.EdgeTotal.Migration.html#migrate_edge_total_trigger/0","title":"Bonfire.Data.Edges.EdgeTotal.Migration.migrate_edge_total_trigger/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Edges.Migration.html","title":"Bonfire.Data.Edges.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Edges.Migration.html#down/0","title":"Bonfire.Data.Edges.Migration.down/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Edges.Migration.html#up/0","title":"Bonfire.Data.Edges.Migration.up/0","type":"function"},{"doc":"An account is an identity for authentication purposes. An account has one or more credentials with which it may identify.","ref":"Bonfire.Data.Identity.Account.html","title":"Bonfire.Data.Identity.Account","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Account.html#changeset/2","title":"Bonfire.Data.Identity.Account.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Account.Migration.html","title":"Bonfire.Data.Identity.Account.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Account.Migration.html#create_account_view/0","title":"Bonfire.Data.Identity.Account.Migration.create_account_view/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Account.Migration.html#drop_account_view/0","title":"Bonfire.Data.Identity.Account.Migration.drop_account_view/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Account.Migration.html#migrate_account/0","title":"Bonfire.Data.Identity.Account.Migration.migrate_account/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Account.Migration.html#migrate_account/1","title":"Bonfire.Data.Identity.Account.Migration.migrate_account/1","type":"macro"},{"doc":"A mixin for an account ID, indicating ownership Primarily used for Users.","ref":"Bonfire.Data.Identity.Accounted.html","title":"Bonfire.Data.Identity.Accounted","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Accounted.html#changeset/2","title":"Bonfire.Data.Identity.Accounted.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Accounted.Migration.html","title":"Bonfire.Data.Identity.Accounted.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Accounted.Migration.html#create_accounted_account_index/1","title":"Bonfire.Data.Identity.Accounted.Migration.create_accounted_account_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Accounted.Migration.html#create_accounted_table/0","title":"Bonfire.Data.Identity.Accounted.Migration.create_accounted_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Accounted.Migration.html#create_accounted_table/1","title":"Bonfire.Data.Identity.Accounted.Migration.create_accounted_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Accounted.Migration.html#drop_accounted_account_index/1","title":"Bonfire.Data.Identity.Accounted.Migration.drop_accounted_account_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Accounted.Migration.html#drop_accounted_table/0","title":"Bonfire.Data.Identity.Accounted.Migration.drop_accounted_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Accounted.Migration.html#migrate_accounted/0","title":"Bonfire.Data.Identity.Accounted.Migration.migrate_accounted/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Accounted.Migration.html#migrate_accounted/1","title":"Bonfire.Data.Identity.Accounted.Migration.migrate_accounted/1","type":"macro"},{"doc":"A mixin that stores a second factor secret to authenticate an account.","ref":"Bonfire.Data.Identity.AuthSecondFactor.html","title":"Bonfire.Data.Identity.AuthSecondFactor","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.AuthSecondFactor.html#changeset/2","title":"Bonfire.Data.Identity.AuthSecondFactor.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.AuthSecondFactor.html#valid_totp?/2","title":"Bonfire.Data.Identity.AuthSecondFactor.valid_totp?/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.AuthSecondFactor.Migration.html","title":"Bonfire.Data.Identity.AuthSecondFactor.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.AuthSecondFactor.Migration.html#create_auth_second_factor_table/0","title":"Bonfire.Data.Identity.AuthSecondFactor.Migration.create_auth_second_factor_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.AuthSecondFactor.Migration.html#create_auth_second_factor_table/1","title":"Bonfire.Data.Identity.AuthSecondFactor.Migration.create_auth_second_factor_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.AuthSecondFactor.Migration.html#drop_auth_second_factor_table/0","title":"Bonfire.Data.Identity.AuthSecondFactor.Migration.drop_auth_second_factor_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.AuthSecondFactor.Migration.html#migrate_auth_second_factor/0","title":"Bonfire.Data.Identity.AuthSecondFactor.Migration.migrate_auth_second_factor/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.AuthSecondFactor.Migration.html#migrate_auth_second_factor/1","title":"Bonfire.Data.Identity.AuthSecondFactor.Migration.migrate_auth_second_factor/1","type":"macro"},{"doc":"A recursive view of all entities taken care of by their root entities. Really, really do not query this without providing a branch_id.","ref":"Bonfire.Data.Identity.CareClosure.html","title":"Bonfire.Data.Identity.CareClosure","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.CareClosure.html#by_branch/1","title":"Bonfire.Data.Identity.CareClosure.by_branch/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.CareClosure.Migration.html","title":"Bonfire.Data.Identity.CareClosure.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.CareClosure.Migration.html#migrate_care_closure_view/0","title":"Bonfire.Data.Identity.CareClosure.Migration.migrate_care_closure_view/0","type":"function"},{"doc":"The entity responsible for something. In practice, it means that something is deleted when its caretaker is deleted. You can think of it as being like the creator, except: a) You can give it away. b) Objects can take care of arbitrary objects, such as e.g. custom ACLs created to permit people mentioned special permissions","ref":"Bonfire.Data.Identity.Caretaker.html","title":"Bonfire.Data.Identity.Caretaker","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Caretaker.html#changeset/3","title":"Bonfire.Data.Identity.Caretaker.changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Caretaker.Migration.html","title":"Bonfire.Data.Identity.Caretaker.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Caretaker.Migration.html#create_caretaker_caretaker_index/1","title":"Bonfire.Data.Identity.Caretaker.Migration.create_caretaker_caretaker_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Caretaker.Migration.html#create_caretaker_table/0","title":"Bonfire.Data.Identity.Caretaker.Migration.create_caretaker_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Caretaker.Migration.html#create_caretaker_table/1","title":"Bonfire.Data.Identity.Caretaker.Migration.create_caretaker_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Caretaker.Migration.html#drop_caretaker_caretaker_index/1","title":"Bonfire.Data.Identity.Caretaker.Migration.drop_caretaker_caretaker_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Caretaker.Migration.html#drop_caretaker_table/0","title":"Bonfire.Data.Identity.Caretaker.Migration.drop_caretaker_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Caretaker.Migration.html#migrate_caretaker/0","title":"Bonfire.Data.Identity.Caretaker.Migration.migrate_caretaker/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Caretaker.Migration.html#migrate_caretaker/1","title":"Bonfire.Data.Identity.Caretaker.Migration.migrate_caretaker/1","type":"macro"},{"doc":"A username mixin that denies reuse of the same or similar usernames even when the username has been deleted.","ref":"Bonfire.Data.Identity.Character.html","title":"Bonfire.Data.Identity.Character","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Character.html#changeset/3","title":"Bonfire.Data.Identity.Character.changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Character.html#hash/1","title":"Bonfire.Data.Identity.Character.hash/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Character.html#uniform/1","title":"Bonfire.Data.Identity.Character.uniform/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html","title":"Bonfire.Data.Identity.Character.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html#create_character_table/0","title":"Bonfire.Data.Identity.Character.Migration.create_character_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html#create_character_table/1","title":"Bonfire.Data.Identity.Character.Migration.create_character_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html#create_character_trigger/1","title":"Bonfire.Data.Identity.Character.Migration.create_character_trigger/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html#create_character_trigger_function/1","title":"Bonfire.Data.Identity.Character.Migration.create_character_trigger_function/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html#create_character_username_hash_index/1","title":"Bonfire.Data.Identity.Character.Migration.create_character_username_hash_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html#create_character_username_index/1","title":"Bonfire.Data.Identity.Character.Migration.create_character_username_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html#drop_character_table/0","title":"Bonfire.Data.Identity.Character.Migration.drop_character_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html#drop_character_trigger/1","title":"Bonfire.Data.Identity.Character.Migration.drop_character_trigger/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html#drop_character_trigger_function/1","title":"Bonfire.Data.Identity.Character.Migration.drop_character_trigger_function/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html#drop_character_username_hash_index/1","title":"Bonfire.Data.Identity.Character.Migration.drop_character_username_hash_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html#drop_character_username_index/1","title":"Bonfire.Data.Identity.Character.Migration.drop_character_username_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html#migrate_character/0","title":"Bonfire.Data.Identity.Character.Migration.migrate_character/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Character.Migration.html#migrate_character/1","title":"Bonfire.Data.Identity.Character.Migration.migrate_character/1","type":"macro"},{"doc":"A Mixin that provides a password for local login.","ref":"Bonfire.Data.Identity.Credential.html","title":"Bonfire.Data.Identity.Credential","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Credential.html#changeset/2","title":"Bonfire.Data.Identity.Credential.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Credential.html#check_password/2","title":"Bonfire.Data.Identity.Credential.check_password/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Credential.html#confirmation_changeset/2","title":"Bonfire.Data.Identity.Credential.confirmation_changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Credential.html#dummy_check/0","title":"Bonfire.Data.Identity.Credential.dummy_check/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Credential.html#hash_password/1","title":"Bonfire.Data.Identity.Credential.hash_password/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Credential.Migration.html","title":"Bonfire.Data.Identity.Credential.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Credential.Migration.html#create_credential_table/0","title":"Bonfire.Data.Identity.Credential.Migration.create_credential_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Credential.Migration.html#create_credential_table/1","title":"Bonfire.Data.Identity.Credential.Migration.create_credential_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Credential.Migration.html#drop_credential_table/0","title":"Bonfire.Data.Identity.Credential.Migration.drop_credential_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Credential.Migration.html#migrate_credential/0","title":"Bonfire.Data.Identity.Credential.Migration.migrate_credential/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Credential.Migration.html#migrate_credential/1","title":"Bonfire.Data.Identity.Credential.Migration.migrate_credential/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Email.html","title":"Bonfire.Data.Identity.Email","type":"module"},{"doc":"Options: email_regex: Regexp.t (default very minimal validation) must_confirm?: bool (default true)","ref":"Bonfire.Data.Identity.Email.html#changeset/3","title":"Bonfire.Data.Identity.Email.changeset/3","type":"function"},{"doc":"Changeset function. Marks the user's email as confirmed and removes their confirmation token.","ref":"Bonfire.Data.Identity.Email.html#confirm/1","title":"Bonfire.Data.Identity.Email.confirm/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Email.html#may_confirm?/2","title":"Bonfire.Data.Identity.Email.may_confirm?/2","type":"function"},{"doc":"Checks whether the user should be able to request a confirm email","ref":"Bonfire.Data.Identity.Email.html#may_request_confirm_email?/2","title":"Bonfire.Data.Identity.Email.may_request_confirm_email?/2","type":"function"},{"doc":"Changeset function. Unconditionally sets the user as unconfirmed, generates a confirmation token and puts an expiry on it determined by the :confirm_duration config key (default one day).","ref":"Bonfire.Data.Identity.Email.html#put_token/1","title":"Bonfire.Data.Identity.Email.put_token/1","type":"function"},{"doc":"Checks whether the user should request a new confirmation token or refresh it","ref":"Bonfire.Data.Identity.Email.html#should_request_or_refresh?/2","title":"Bonfire.Data.Identity.Email.should_request_or_refresh?/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Email.html#t:t/0","title":"Bonfire.Data.Identity.Email.t/0","type":"type"},{"doc":"","ref":"Bonfire.Data.Identity.Email.Migration.html","title":"Bonfire.Data.Identity.Email.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Email.Migration.html#create_email_address_index/1","title":"Bonfire.Data.Identity.Email.Migration.create_email_address_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Email.Migration.html#create_email_confirm_token_index/1","title":"Bonfire.Data.Identity.Email.Migration.create_email_confirm_token_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Email.Migration.html#create_email_table/0","title":"Bonfire.Data.Identity.Email.Migration.create_email_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Email.Migration.html#create_email_table/1","title":"Bonfire.Data.Identity.Email.Migration.create_email_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Email.Migration.html#drop_email_address_index/1","title":"Bonfire.Data.Identity.Email.Migration.drop_email_address_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Email.Migration.html#drop_email_confirm_token_index/1","title":"Bonfire.Data.Identity.Email.Migration.drop_email_confirm_token_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Email.Migration.html#drop_email_table/0","title":"Bonfire.Data.Identity.Email.Migration.drop_email_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Email.Migration.html#migrate_email/0","title":"Bonfire.Data.Identity.Email.Migration.migrate_email/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Email.Migration.html#migrate_email/1","title":"Bonfire.Data.Identity.Email.Migration.migrate_email/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.ExtraInfo.html","title":"Bonfire.Data.Identity.ExtraInfo","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.ExtraInfo.html#changeset/3","title":"Bonfire.Data.Identity.ExtraInfo.changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.ExtraInfo.Migration.html","title":"Bonfire.Data.Identity.ExtraInfo.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.ExtraInfo.Migration.html#create_extra_info_table/0","title":"Bonfire.Data.Identity.ExtraInfo.Migration.create_extra_info_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.ExtraInfo.Migration.html#create_extra_info_table/1","title":"Bonfire.Data.Identity.ExtraInfo.Migration.create_extra_info_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.ExtraInfo.Migration.html#drop_extra_info_table/0","title":"Bonfire.Data.Identity.ExtraInfo.Migration.drop_extra_info_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.ExtraInfo.Migration.html#migrate_extra_info/0","title":"Bonfire.Data.Identity.ExtraInfo.Migration.migrate_extra_info/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.ExtraInfo.Migration.html#migrate_extra_info/1","title":"Bonfire.Data.Identity.ExtraInfo.Migration.migrate_extra_info/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Named.html","title":"Bonfire.Data.Identity.Named","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Named.html#changeset/3","title":"Bonfire.Data.Identity.Named.changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Named.Migration.html","title":"Bonfire.Data.Identity.Named.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Named.Migration.html#create_named_table/0","title":"Bonfire.Data.Identity.Named.Migration.create_named_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Named.Migration.html#create_named_table/1","title":"Bonfire.Data.Identity.Named.Migration.create_named_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Named.Migration.html#drop_named_table/0","title":"Bonfire.Data.Identity.Named.Migration.drop_named_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Named.Migration.html#migrate_named/0","title":"Bonfire.Data.Identity.Named.Migration.migrate_named/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Named.Migration.html#migrate_named/1","title":"Bonfire.Data.Identity.Named.Migration.migrate_named/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Self.html","title":"Bonfire.Data.Identity.Self","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Self.html#changeset/2","title":"Bonfire.Data.Identity.Self.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Self.Migration.html","title":"Bonfire.Data.Identity.Self.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Self.Migration.html#create_self_table/0","title":"Bonfire.Data.Identity.Self.Migration.create_self_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Self.Migration.html#create_self_table/1","title":"Bonfire.Data.Identity.Self.Migration.create_self_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Self.Migration.html#drop_self_table/0","title":"Bonfire.Data.Identity.Self.Migration.drop_self_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Self.Migration.html#migrate_self/0","title":"Bonfire.Data.Identity.Self.Migration.migrate_self/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Self.Migration.html#migrate_self/1","title":"Bonfire.Data.Identity.Self.Migration.migrate_self/1","type":"macro"},{"doc":"A mixin that stores settings (of the instance, account, user, etc) as an Erlang Term (typically a map or keyword list) encoded to binary.","ref":"Bonfire.Data.Identity.Settings.html","title":"Bonfire.Data.Identity.Settings","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Settings.html#changeset/3","title":"Bonfire.Data.Identity.Settings.changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Settings.Migration.html","title":"Bonfire.Data.Identity.Settings.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.Settings.Migration.html#create_settings_table/0","title":"Bonfire.Data.Identity.Settings.Migration.create_settings_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Settings.Migration.html#create_settings_table/1","title":"Bonfire.Data.Identity.Settings.Migration.create_settings_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Settings.Migration.html#drop_settings_table/0","title":"Bonfire.Data.Identity.Settings.Migration.drop_settings_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.Settings.Migration.html#migrate_settings/0","title":"Bonfire.Data.Identity.Settings.Migration.migrate_settings/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.Settings.Migration.html#migrate_settings/1","title":"Bonfire.Data.Identity.Settings.Migration.migrate_settings/1","type":"macro"},{"doc":"A persona. A person (account) may have more than one user, but this is not exposed publicly (except to local instance administrators), so it is as if they are different people.","ref":"Bonfire.Data.Identity.User.html","title":"Bonfire.Data.Identity.User","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.User.html#changeset/2","title":"Bonfire.Data.Identity.User.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.User.Migration.html","title":"Bonfire.Data.Identity.User.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Identity.User.Migration.html#create_user_view/0","title":"Bonfire.Data.Identity.User.Migration.create_user_view/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.User.Migration.html#drop_user_view/0","title":"Bonfire.Data.Identity.User.Migration.drop_user_view/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Identity.User.Migration.html#migrate_user/0","title":"Bonfire.Data.Identity.User.Migration.migrate_user/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Identity.User.Migration.html#migrate_user/1","title":"Bonfire.Data.Identity.User.Migration.migrate_user/1","type":"macro"},{"doc":"A mixin for shared user personas (which multiple accounts can use)","ref":"Bonfire.Data.SharedUser.html","title":"Bonfire.Data.SharedUser","type":"module"},{"doc":"","ref":"Bonfire.Data.SharedUser.html#changeset/2","title":"Bonfire.Data.SharedUser.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.SharedUser.Migration.html","title":"Bonfire.Data.SharedUser.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.SharedUser.Migration.html#create_shared_user_table/0","title":"Bonfire.Data.SharedUser.Migration.create_shared_user_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.SharedUser.Migration.html#create_shared_user_table/1","title":"Bonfire.Data.SharedUser.Migration.create_shared_user_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.SharedUser.Migration.html#drop_shared_user_table/0","title":"Bonfire.Data.SharedUser.Migration.drop_shared_user_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.SharedUser.Migration.html#migrate_shared_user/0","title":"Bonfire.Data.SharedUser.Migration.migrate_shared_user/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.SharedUser.Migration.html#migrate_shared_user/1","title":"Bonfire.Data.SharedUser.Migration.migrate_shared_user/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.APActivity.html","title":"Bonfire.Data.Social.APActivity","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.APActivity.html#changeset/2","title":"Bonfire.Data.Social.APActivity.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.APActivity.Migration.html","title":"Bonfire.Data.Social.APActivity.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.APActivity.Migration.html#create_apactivity_table/0","title":"Bonfire.Data.Social.APActivity.Migration.create_apactivity_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.APActivity.Migration.html#create_apactivity_table/1","title":"Bonfire.Data.Social.APActivity.Migration.create_apactivity_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.APActivity.Migration.html#drop_apactivity_table/0","title":"Bonfire.Data.Social.APActivity.Migration.drop_apactivity_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.APActivity.Migration.html#migrate_apactivity/0","title":"Bonfire.Data.Social.APActivity.Migration.migrate_apactivity/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.APActivity.Migration.html#migrate_apactivity/1","title":"Bonfire.Data.Social.APActivity.Migration.migrate_apactivity/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Activity.html","title":"Bonfire.Data.Social.Activity","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Activity.html#changeset/2","title":"Bonfire.Data.Social.Activity.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Activity.Migration.html","title":"Bonfire.Data.Social.Activity.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Activity.Migration.html#create_activity_object_index/1","title":"Bonfire.Data.Social.Activity.Migration.create_activity_object_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Activity.Migration.html#create_activity_subject_index/1","title":"Bonfire.Data.Social.Activity.Migration.create_activity_subject_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Activity.Migration.html#create_activity_table/0","title":"Bonfire.Data.Social.Activity.Migration.create_activity_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Activity.Migration.html#create_activity_table/1","title":"Bonfire.Data.Social.Activity.Migration.create_activity_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Activity.Migration.html#create_activity_verb_index/1","title":"Bonfire.Data.Social.Activity.Migration.create_activity_verb_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Activity.Migration.html#drop_activity_object_index/1","title":"Bonfire.Data.Social.Activity.Migration.drop_activity_object_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Activity.Migration.html#drop_activity_subject_index/1","title":"Bonfire.Data.Social.Activity.Migration.drop_activity_subject_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Activity.Migration.html#drop_activity_table/0","title":"Bonfire.Data.Social.Activity.Migration.drop_activity_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Activity.Migration.html#drop_activity_verb_index/1","title":"Bonfire.Data.Social.Activity.Migration.drop_activity_verb_index/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Activity.Migration.html#migrate_activity/0","title":"Bonfire.Data.Social.Activity.Migration.migrate_activity/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Activity.Migration.html#migrate_activity/1","title":"Bonfire.Data.Social.Activity.Migration.migrate_activity/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Block.html","title":"Bonfire.Data.Social.Block","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Block.html#changeset/2","title":"Bonfire.Data.Social.Block.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Block.Migration.html","title":"Bonfire.Data.Social.Block.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Block.Migration.html#migrate_block/1","title":"Bonfire.Data.Social.Block.Migration.migrate_block/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Block.Migration.html#migrate_block_unique_index/0","title":"Bonfire.Data.Social.Block.Migration.migrate_block_unique_index/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Block.Migration.html#migrate_block_view/0","title":"Bonfire.Data.Social.Block.Migration.migrate_block_view/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Bookmark.html","title":"Bonfire.Data.Social.Bookmark","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Bookmark.html#changeset/2","title":"Bonfire.Data.Social.Bookmark.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Bookmark.Migration.html","title":"Bonfire.Data.Social.Bookmark.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Bookmark.Migration.html#migrate_bookmark/1","title":"Bonfire.Data.Social.Bookmark.Migration.migrate_bookmark/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Bookmark.Migration.html#migrate_bookmark_total_view/0","title":"Bonfire.Data.Social.Bookmark.Migration.migrate_bookmark_total_view/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Bookmark.Migration.html#migrate_bookmark_view/0","title":"Bonfire.Data.Social.Bookmark.Migration.migrate_bookmark_view/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Boost.html","title":"Bonfire.Data.Social.Boost","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Boost.html#changeset/2","title":"Bonfire.Data.Social.Boost.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Boost.Migration.html","title":"Bonfire.Data.Social.Boost.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Boost.Migration.html#migrate_boost/1","title":"Bonfire.Data.Social.Boost.Migration.migrate_boost/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Boost.Migration.html#migrate_boost_total_view/0","title":"Bonfire.Data.Social.Boost.Migration.migrate_boost_total_view/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Boost.Migration.html#migrate_boost_view/0","title":"Bonfire.Data.Social.Boost.Migration.migrate_boost_view/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Created.html","title":"Bonfire.Data.Social.Created","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Created.html#changeset/2","title":"Bonfire.Data.Social.Created.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Created.Migration.html","title":"Bonfire.Data.Social.Created.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Created.Migration.html#create_created_table/0","title":"Bonfire.Data.Social.Created.Migration.create_created_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Created.Migration.html#create_created_table/1","title":"Bonfire.Data.Social.Created.Migration.create_created_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Created.Migration.html#drop_created_table/0","title":"Bonfire.Data.Social.Created.Migration.drop_created_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Created.Migration.html#migrate_created/0","title":"Bonfire.Data.Social.Created.Migration.migrate_created/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Created.Migration.html#migrate_created/1","title":"Bonfire.Data.Social.Created.Migration.migrate_created/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Feed.html","title":"Bonfire.Data.Social.Feed","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Feed.html#changeset/2","title":"Bonfire.Data.Social.Feed.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Feed.Migration.html","title":"Bonfire.Data.Social.Feed.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Feed.Migration.html#migrate_feed/0","title":"Bonfire.Data.Social.Feed.Migration.migrate_feed/0","type":"function"},{"doc":"A multimixin for an activity/object appearing in a feed. A quite interesting thing about this model is that feed references Pointer , so it isn't only things of type Feed that it can appear in, they are just an obvious choice.","ref":"Bonfire.Data.Social.FeedPublish.html","title":"Bonfire.Data.Social.FeedPublish","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.FeedPublish.html#changeset/2","title":"Bonfire.Data.Social.FeedPublish.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.FeedPublish.Migration.html","title":"Bonfire.Data.Social.FeedPublish.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.FeedPublish.Migration.html#create_feed_publish_table/0","title":"Bonfire.Data.Social.FeedPublish.Migration.create_feed_publish_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.FeedPublish.Migration.html#create_feed_publish_table/1","title":"Bonfire.Data.Social.FeedPublish.Migration.create_feed_publish_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.FeedPublish.Migration.html#drop_feed_publish_table/0","title":"Bonfire.Data.Social.FeedPublish.Migration.drop_feed_publish_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.FeedPublish.Migration.html#migrate_feed_publish/0","title":"Bonfire.Data.Social.FeedPublish.Migration.migrate_feed_publish/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.FeedPublish.Migration.html#migrate_feed_publish/1","title":"Bonfire.Data.Social.FeedPublish.Migration.migrate_feed_publish/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.FeedPublish.Migration.html#migrate_feed_publish_feed_index/2","title":"Bonfire.Data.Social.FeedPublish.Migration.migrate_feed_publish_feed_index/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Flag.html","title":"Bonfire.Data.Social.Flag","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Flag.html#changeset/2","title":"Bonfire.Data.Social.Flag.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Flag.Migration.html","title":"Bonfire.Data.Social.Flag.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Flag.Migration.html#migrate_flag/1","title":"Bonfire.Data.Social.Flag.Migration.migrate_flag/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Flag.Migration.html#migrate_flag_unique_index/0","title":"Bonfire.Data.Social.Flag.Migration.migrate_flag_unique_index/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Flag.Migration.html#migrate_flag_view/0","title":"Bonfire.Data.Social.Flag.Migration.migrate_flag_view/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Follow.html","title":"Bonfire.Data.Social.Follow","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Follow.html#changeset/2","title":"Bonfire.Data.Social.Follow.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Follow.Migration.html","title":"Bonfire.Data.Social.Follow.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Follow.Migration.html#migrate_follow/1","title":"Bonfire.Data.Social.Follow.Migration.migrate_follow/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Follow.Migration.html#migrate_follow_total_view/0","title":"Bonfire.Data.Social.Follow.Migration.migrate_follow_total_view/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Follow.Migration.html#migrate_follow_unique_index/0","title":"Bonfire.Data.Social.Follow.Migration.migrate_follow_unique_index/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Follow.Migration.html#migrate_follow_view/0","title":"Bonfire.Data.Social.Follow.Migration.migrate_follow_view/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Inbox.html","title":"Bonfire.Data.Social.Inbox","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Inbox.html#changeset/2","title":"Bonfire.Data.Social.Inbox.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Inbox.Migration.html","title":"Bonfire.Data.Social.Inbox.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Inbox.Migration.html#create_inbox_table/0","title":"Bonfire.Data.Social.Inbox.Migration.create_inbox_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Inbox.Migration.html#create_inbox_table/1","title":"Bonfire.Data.Social.Inbox.Migration.create_inbox_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Inbox.Migration.html#drop_inbox_table/0","title":"Bonfire.Data.Social.Inbox.Migration.drop_inbox_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Inbox.Migration.html#migrate_inbox/0","title":"Bonfire.Data.Social.Inbox.Migration.migrate_inbox/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Inbox.Migration.html#migrate_inbox/1","title":"Bonfire.Data.Social.Inbox.Migration.migrate_inbox/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Like.html","title":"Bonfire.Data.Social.Like","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Like.html#changeset/2","title":"Bonfire.Data.Social.Like.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Like.Migration.html","title":"Bonfire.Data.Social.Like.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Like.Migration.html#migrate_like/1","title":"Bonfire.Data.Social.Like.Migration.migrate_like/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Like.Migration.html#migrate_like_total_view/0","title":"Bonfire.Data.Social.Like.Migration.migrate_like_total_view/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Like.Migration.html#migrate_like_unique_index/0","title":"Bonfire.Data.Social.Like.Migration.migrate_like_unique_index/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Like.Migration.html#migrate_like_view/0","title":"Bonfire.Data.Social.Like.Migration.migrate_like_view/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Message.html","title":"Bonfire.Data.Social.Message","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Message.html#changeset/2","title":"Bonfire.Data.Social.Message.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Message.Migration.html","title":"Bonfire.Data.Social.Message.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Message.Migration.html#migrate_message/0","title":"Bonfire.Data.Social.Message.Migration.migrate_message/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Post.html","title":"Bonfire.Data.Social.Post","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Post.html#changeset/2","title":"Bonfire.Data.Social.Post.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Post.Migration.html","title":"Bonfire.Data.Social.Post.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Post.Migration.html#migrate_post/0","title":"Bonfire.Data.Social.Post.Migration.migrate_post/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.PostContent.html","title":"Bonfire.Data.Social.PostContent","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.PostContent.html#changeset/2","title":"Bonfire.Data.Social.PostContent.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.PostContent.Migration.html","title":"Bonfire.Data.Social.PostContent.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.PostContent.Migration.html#create_post_content_table/0","title":"Bonfire.Data.Social.PostContent.Migration.create_post_content_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.PostContent.Migration.html#create_post_content_table/1","title":"Bonfire.Data.Social.PostContent.Migration.create_post_content_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.PostContent.Migration.html#drop_post_content_table/0","title":"Bonfire.Data.Social.PostContent.Migration.drop_post_content_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.PostContent.Migration.html#migrate_post_content/0","title":"Bonfire.Data.Social.PostContent.Migration.migrate_post_content/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.PostContent.Migration.html#migrate_post_content/1","title":"Bonfire.Data.Social.PostContent.Migration.migrate_post_content/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Profile.html","title":"Bonfire.Data.Social.Profile","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Profile.html#changeset/2","title":"Bonfire.Data.Social.Profile.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Profile.Migration.html","title":"Bonfire.Data.Social.Profile.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Profile.Migration.html#create_profile_table/0","title":"Bonfire.Data.Social.Profile.Migration.create_profile_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Profile.Migration.html#create_profile_table/1","title":"Bonfire.Data.Social.Profile.Migration.create_profile_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Profile.Migration.html#drop_profile_table/0","title":"Bonfire.Data.Social.Profile.Migration.drop_profile_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Profile.Migration.html#migrate_profile/0","title":"Bonfire.Data.Social.Profile.Migration.migrate_profile/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Profile.Migration.html#migrate_profile/1","title":"Bonfire.Data.Social.Profile.Migration.migrate_profile/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html","title":"Bonfire.Data.Social.Replied","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#ancestor_ids/1","title":"Bonfire.Data.Social.Replied.ancestor_ids/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#ancestors/1","title":"Bonfire.Data.Social.Replied.ancestors/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#arrange/1","title":"Bonfire.Data.Social.Replied.arrange/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#build_child/1","title":"Bonfire.Data.Social.Replied.build_child/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#changeset/2","title":"Bonfire.Data.Social.Replied.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#children/1","title":"Bonfire.Data.Social.Replied.children/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#depth/1","title":"Bonfire.Data.Social.Replied.depth/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#descendants/1","title":"Bonfire.Data.Social.Replied.descendants/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#make_child_of/2","title":"Bonfire.Data.Social.Replied.make_child_of/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#parent/1","title":"Bonfire.Data.Social.Replied.parent/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#parent_id/1","title":"Bonfire.Data.Social.Replied.parent_id/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#path/1","title":"Bonfire.Data.Social.Replied.path/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#path_ids/1","title":"Bonfire.Data.Social.Replied.path_ids/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#root/1","title":"Bonfire.Data.Social.Replied.root/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#root_id/1","title":"Bonfire.Data.Social.Replied.root_id/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#root?/1","title":"Bonfire.Data.Social.Replied.root?/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#siblings/1","title":"Bonfire.Data.Social.Replied.siblings/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#subtree/1","title":"Bonfire.Data.Social.Replied.subtree/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.html#where_depth/2","title":"Bonfire.Data.Social.Replied.where_depth/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.Migration.html","title":"Bonfire.Data.Social.Replied.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Replied.Migration.html#create_fun/0","title":"Bonfire.Data.Social.Replied.Migration.create_fun/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.Migration.html#create_replied_table/0","title":"Bonfire.Data.Social.Replied.Migration.create_replied_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Replied.Migration.html#create_replied_table/1","title":"Bonfire.Data.Social.Replied.Migration.create_replied_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Replied.Migration.html#create_trigger/0","title":"Bonfire.Data.Social.Replied.Migration.create_trigger/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.Migration.html#drop_replied_table/0","title":"Bonfire.Data.Social.Replied.Migration.drop_replied_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.Migration.html#migrate_functions/0","title":"Bonfire.Data.Social.Replied.Migration.migrate_functions/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Replied.Migration.html#migrate_replied/0","title":"Bonfire.Data.Social.Replied.Migration.migrate_replied/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Replied.Migration.html#migrate_replied/1","title":"Bonfire.Data.Social.Replied.Migration.migrate_replied/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Request.html","title":"Bonfire.Data.Social.Request","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Request.html#changeset/2","title":"Bonfire.Data.Social.Request.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Request.Migration.html","title":"Bonfire.Data.Social.Request.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Request.Migration.html#create_request_table/0","title":"Bonfire.Data.Social.Request.Migration.create_request_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Request.Migration.html#create_request_table/1","title":"Bonfire.Data.Social.Request.Migration.create_request_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Request.Migration.html#drop_request_table/0","title":"Bonfire.Data.Social.Request.Migration.drop_request_table/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Request.Migration.html#migrate_request/0","title":"Bonfire.Data.Social.Request.Migration.migrate_request/0","type":"macro"},{"doc":"","ref":"Bonfire.Data.Social.Request.Migration.html#migrate_request/1","title":"Bonfire.Data.Social.Request.Migration.migrate_request/1","type":"macro"},{"doc":"Track seen/unseen (similar to read/unread, but only indicates that it was displayed in a feed or other listing for the user, not that they actually read it) status of things (usually an Activity )","ref":"Bonfire.Data.Social.Seen.html","title":"Bonfire.Data.Social.Seen","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Seen.html#changeset/2","title":"Bonfire.Data.Social.Seen.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Seen.Migration.html","title":"Bonfire.Data.Social.Seen.Migration","type":"module"},{"doc":"","ref":"Bonfire.Data.Social.Seen.Migration.html#migrate_seen/1","title":"Bonfire.Data.Social.Seen.Migration.migrate_seen/1","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Seen.Migration.html#migrate_seen_total_view/0","title":"Bonfire.Data.Social.Seen.Migration.migrate_seen_total_view/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Seen.Migration.html#migrate_seen_unique_index/0","title":"Bonfire.Data.Social.Seen.Migration.migrate_seen_unique_index/0","type":"function"},{"doc":"","ref":"Bonfire.Data.Social.Seen.Migration.html#migrate_seen_view/0","title":"Bonfire.Data.Social.Seen.Migration.migrate_seen_view/0","type":"function"},{"doc":"A library of common utils and helpers used across Bonfire extensions","ref":"Bonfire.UI.Common.html","title":"Bonfire.UI.Common","type":"module"},{"doc":"","ref":"Bonfire.UI.Common.html#assign_error/2","title":"Bonfire.UI.Common.assign_error/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#assign_flash/4","title":"Bonfire.UI.Common.assign_flash/4","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#assign_generic/2","title":"Bonfire.UI.Common.assign_generic/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#assign_generic/3","title":"Bonfire.UI.Common.assign_generic/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#assign_global/2","title":"Bonfire.UI.Common.assign_global/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#assign_global/3","title":"Bonfire.UI.Common.assign_global/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#assigns_clean/1","title":"Bonfire.UI.Common.assigns_clean/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#assigns_merge/2","title":"Bonfire.UI.Common.assigns_merge/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#assigns_merge/3","title":"Bonfire.UI.Common.assigns_merge/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#assigns_minimal/1","title":"Bonfire.UI.Common.assigns_minimal/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#assigns_subscribe/2","title":"Bonfire.UI.Common.assigns_subscribe/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#boundaries_or_default/2","title":"Bonfire.UI.Common.boundaries_or_default/2","type":"function"},{"doc":"Warning: this will set assigns for any/all users who subscribe to them. You want to cast_self/2 instead if dealing with user-specific actions or private data.","ref":"Bonfire.UI.Common.html#cast_public/2","title":"Bonfire.UI.Common.cast_public/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#cast_self/2","title":"Bonfire.UI.Common.cast_self/2","type":"function"},{"doc":"copies the go param into a query string, if any","ref":"Bonfire.UI.Common.html#copy_go/1","title":"Bonfire.UI.Common.copy_go/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#current_url/2","title":"Bonfire.UI.Common.current_url/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#default_boundaries/1","title":"Bonfire.UI.Common.default_boundaries/1","type":"function"},{"doc":"Generate a query string adding a go redirection path to the URI (for redirecting somewhere after auth flows). It is recommended to use set_go_after/2 where possible instead.","ref":"Bonfire.UI.Common.html#go_query/1","title":"Bonfire.UI.Common.go_query/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#hero_icons_list/0","title":"Bonfire.UI.Common.hero_icons_list/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#is_messaging?/1","title":"Bonfire.UI.Common.is_messaging?/1","type":"function"},{"doc":"Special LiveView helper function which allows loading LiveComponents in regular Phoenix views: live_render_component(@conn, MyLiveComponent)","ref":"Bonfire.UI.Common.html#live_render_component/2","title":"Bonfire.UI.Common.live_render_component/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#live_render_with_conn/2","title":"Bonfire.UI.Common.live_render_with_conn/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#markdown/1","title":"Bonfire.UI.Common.markdown/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#maybe_assign/3","title":"Bonfire.UI.Common.maybe_assign/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#maybe_consume_uploaded_entries/3","title":"Bonfire.UI.Common.maybe_consume_uploaded_entries/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#maybe_consume_uploaded_entry/3","title":"Bonfire.UI.Common.maybe_consume_uploaded_entry/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#maybe_cute_gif/0","title":"Bonfire.UI.Common.maybe_cute_gif/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#maybe_last_sentry_event_id/0","title":"Bonfire.UI.Common.maybe_last_sentry_event_id/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#patch_to/3","title":"Bonfire.UI.Common.patch_to/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#path_fallback/1","title":"Bonfire.UI.Common.path_fallback/1","type":"function"},{"doc":"Broadcast some data for realtime updates, for example to a feed or thread","ref":"Bonfire.UI.Common.html#pubsub_broadcast/2","title":"Bonfire.UI.Common.pubsub_broadcast/2","type":"function"},{"doc":"Subscribe to something for realtime updates, like a feed or thread","ref":"Bonfire.UI.Common.html#pubsub_subscribe/2","title":"Bonfire.UI.Common.pubsub_subscribe/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#redirect_to/3","title":"Bonfire.UI.Common.redirect_to/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#redirect_to_previous_go/4","title":"Bonfire.UI.Common.redirect_to_previous_go/4","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#rich/1","title":"Bonfire.UI.Common.rich/1","type":"function"},{"doc":"Subscribe to assigns targeted at the current account/user","ref":"Bonfire.UI.Common.html#self_subscribe/2","title":"Bonfire.UI.Common.self_subscribe/2","type":"function"},{"doc":"Save a go redirection path in the session (for redirecting somewhere after auth flows)","ref":"Bonfire.UI.Common.html#set_go_after/2","title":"Bonfire.UI.Common.set_go_after/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#templated/2","title":"Bonfire.UI.Common.templated/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#templated_or_remote_markdown/2","title":"Bonfire.UI.Common.templated_or_remote_markdown/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#undead/3","title":"Bonfire.UI.Common.undead/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#undead_error/3","title":"Bonfire.UI.Common.undead_error/3","type":"function"},{"doc":"Run a function and expects tuple. If anything else is returned, like an error, a flash message is shown to the user.","ref":"Bonfire.UI.Common.html#undead_mount/2","title":"Bonfire.UI.Common.undead_mount/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.html#undead_params/2","title":"Bonfire.UI.Common.undead_params/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.AppsLive.html","title":"Bonfire.UI.Common.AppsLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Common.AppsLive.html#render/1","title":"Bonfire.UI.Common.AppsLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any user :any, default: nil src :any, default: nil viewing_main_object :boolean, default: false comment :boolean, default: false size :any, default: nil class :any, default: nil","ref":"Bonfire.UI.Common.AvatarLive.html","title":"Bonfire.UI.Common.AvatarLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Common.AvatarLive.html#classes/1","title":"Bonfire.UI.Common.AvatarLive.classes/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.AvatarLive.html#render/1","title":"Bonfire.UI.Common.AvatarLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.AvatarLive.html#size/1","title":"Bonfire.UI.Common.AvatarLive.size/1","type":"function"},{"doc":"Properties current_account :any current_user :any scope :atom, default: nil","ref":"Bonfire.UI.Common.AvatarsSettingsLive.html","title":"Bonfire.UI.Common.AvatarsSettingsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.AvatarsSettingsLive.html#render/1","title":"Bonfire.UI.Common.AvatarsSettingsLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_account :any current_user :any class :css_class, default: &quot;&quot; count :integer, default: 0","ref":"Bonfire.UI.Common.BadgeCounterLive.html","title":"Bonfire.UI.Common.BadgeCounterLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.UI.Common.BadgeCounterLive.html#handle_event/3","title":"Bonfire.UI.Common.BadgeCounterLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.UI.Common.BadgeCounterLive.html#mount/1","title":"Bonfire.UI.Common.BadgeCounterLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Common.BadgeCounterLive.html#render/1","title":"Bonfire.UI.Common.BadgeCounterLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.UI.Common.BadgeCounterLive.html#update/2","title":"Bonfire.UI.Common.BadgeCounterLive.update/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.BasicView.html","title":"Bonfire.UI.Common.BasicView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"Bonfire.UI.Common.BasicView.html#__resource__/0","title":"Bonfire.UI.Common.BasicView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"Bonfire.UI.Common.BasicView.html#render/2","title":"Bonfire.UI.Common.BasicView.render/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.BasicView.html#show_html/2","title":"Bonfire.UI.Common.BasicView.show_html/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"Bonfire.UI.Common.BasicView.html#template_not_found/2","title":"Bonfire.UI.Common.BasicView.template_not_found/2","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_account :any current_user :any object :any object_type :any boost_count :any showing_within :any","ref":"Bonfire.UI.Common.BoostActionLive.html","title":"Bonfire.UI.Common.BoostActionLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.UI.Common.BoostActionLive.html#handle_event/3","title":"Bonfire.UI.Common.BoostActionLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.UI.Common.BoostActionLive.html#mount/1","title":"Bonfire.UI.Common.BoostActionLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.preload/1 .","ref":"Bonfire.UI.Common.BoostActionLive.html#preload/1","title":"Bonfire.UI.Common.BoostActionLive.preload/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Common.BoostActionLive.html#render/1","title":"Bonfire.UI.Common.BoostActionLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any font_family :any","ref":"Bonfire.UI.Common.ChangeFontLive.html","title":"Bonfire.UI.Common.ChangeFontLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.ChangeFontLive.html#render/1","title":"Bonfire.UI.Common.ChangeFontLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any locale :any live_handler :string","ref":"Bonfire.UI.Common.ChangeLocaleLive.html","title":"Bonfire.UI.Common.ChangeLocaleLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.ChangeLocaleLive.html#render/1","title":"Bonfire.UI.Common.ChangeLocaleLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any selected :string theme :string","ref":"Bonfire.UI.Common.ChangeThemeLive.html","title":"Bonfire.UI.Common.ChangeThemeLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.ChangeThemeLive.html#render/1","title":"Bonfire.UI.Common.ChangeThemeLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.ComponentID.html","title":"Bonfire.UI.Common.ComponentID","type":"module"},{"doc":"","ref":"Bonfire.UI.Common.ComponentID.html#ids/2","title":"Bonfire.UI.Common.ComponentID.ids/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.ComponentID.html#new/2","title":"Bonfire.UI.Common.ComponentID.new/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.ComponentID.html#send_assigns/4","title":"Bonfire.UI.Common.ComponentID.send_assigns/4","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.ComponentID.html#send_updates/3","title":"Bonfire.UI.Common.ComponentID.send_updates/3","type":"function"},{"doc":"Properties current_account :any current_user :any title :string object_id :any Slots content actions","ref":"Bonfire.UI.Common.ConfirmModalLive.html","title":"Bonfire.UI.Common.ConfirmModalLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.ConfirmModalLive.html#render/1","title":"Bonfire.UI.Common.ConfirmModalLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.ContentAreas.html","title":"Bonfire.UI.Common.ContentAreas","type":"module"},{"doc":"Returns HTML-safe string if type is :html or just a string if :text . These are basic fallbacks in case Publisher:Thesis extension is not present. In future, this can also be extended for content localisation. see https://github.com/infinitered/thesis-phoenix/blob/master/lib/thesis/view.ex#L32 Examples &lt; % = content ( @conn , &quot;Title&quot; , :text , do : &quot;Default Title&quot; ) % &gt; &lt; % = content ( @conn , &quot;Description&quot; , :html ) do % &gt; &lt; p &gt; Default description &lt; / p &gt; &lt; p &gt; Another paragraph &lt; / p &gt; &lt; % end % &gt; &lt; % = content ( @conn , &quot;Description&quot; , :html , classes : &quot;more classes&quot; ) do % &gt; &lt; p &gt; Default description &lt; / p &gt; &lt; % end % &gt; &lt; % = content ( @conn , &quot;Section identifier&quot; , :raw_html ) do % &gt; &lt; iframe width = &quot;560&quot; height = &quot;315&quot; src = &quot;https://www.youtube.com/embed/5SVLs_NN_uY&quot; frameborder = &quot;0&quot; allowfullscreen &gt; &lt; / iframe &gt; &lt; % end % &gt; &lt; % = content ( @conn , &quot;Image identifier&quot; , :image , alt : &quot;My alt tag&quot; , do : &quot;http://placekitten.com/200/300&quot; ) % &gt;","ref":"Bonfire.UI.Common.ContentAreas.html#content/4","title":"Bonfire.UI.Common.ContentAreas.content/4","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.ContentAreas.html#content/5","title":"Bonfire.UI.Common.ContentAreas.content/5","type":"function"},{"doc":"Returns a keyword list of meta attributes from the serialized data. Doctests: iex&gt; m = % Thesis.PageContent { meta : ~S({&quot;test&quot;:&quot;Thing&quot;, &quot;test2&quot;:&quot;123&quot;}) } iex&gt; Thesis.PageContent . meta_attributes ( m ) %{ test : &quot;Thing&quot; , test2 : &quot;123&quot; }","ref":"Bonfire.UI.Common.ContentAreas.html#meta_attributes/1","title":"Bonfire.UI.Common.ContentAreas.meta_attributes/1","type":"function"},{"doc":"Returns a serialized string, given a map, for storage in the meta field. Doctests: iex&gt; m = %{ test : &quot;Thing&quot; , test2 : &quot;123&quot; } iex&gt; Thesis.PageContent . meta_serialize ( m ) ~S({&quot;test2&quot;:&quot;123&quot;,&quot;test&quot;:&quot;Thing&quot;})","ref":"Bonfire.UI.Common.ContentAreas.html#meta_serialize/1","title":"Bonfire.UI.Common.ContentAreas.meta_serialize/1","type":"function"},{"doc":"Renders editable page content, based on the content_type. Available content types: html: WYSIWYG editor, standard HTML output (sanitized) raw_html: Edit the HTML directly, not sanitized -- use carefully text: Raw text, all HTML is escaped, basic contenteditable image: Displays an image, can edit the URL and alt tag background_image: Displays an image as a background image on a div, can edit the URL","ref":"Bonfire.UI.Common.ContentAreas.Render.html","title":"Bonfire.UI.Common.ContentAreas.Render","type":"module"},{"doc":"","ref":"Bonfire.UI.Common.ContentAreas.Render.html#escape_entities/1","title":"Bonfire.UI.Common.ContentAreas.Render.escape_entities/1","type":"function"},{"doc":"Removes special characters, keeps dashes and underscores, and replaces spaces with dashes. Also downcases the entire string. iex&gt; import Thesis.Utilities iex&gt; parameterize ( &quot;Jamon is so cool!&quot; ) &quot;jamon-is-so-cool&quot; iex&gt; parameterize ( &quot;%#d50SDF dfsJ FDS lkdsf f dfka a&quot; ) &quot;d50sdf-dfsj-fds--lkdsf-f-dfka---a&quot; iex&gt; parameterize ( :this_is_a_test ) &quot;this-is-a-test&quot;","ref":"Bonfire.UI.Common.ContentAreas.Render.html#parameterize/1","title":"Bonfire.UI.Common.ContentAreas.Render.parameterize/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.DiffRenderView.html","title":"Bonfire.UI.Common.DiffRenderView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"Bonfire.UI.Common.DiffRenderView.html#__resource__/0","title":"Bonfire.UI.Common.DiffRenderView.__resource__/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.DiffRenderView.html#file_header/2","title":"Bonfire.UI.Common.DiffRenderView.file_header/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.DiffRenderView.html#line_id/2","title":"Bonfire.UI.Common.DiffRenderView.line_id/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.DiffRenderView.html#line_number/1","title":"Bonfire.UI.Common.DiffRenderView.line_number/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.DiffRenderView.html#line_text/1","title":"Bonfire.UI.Common.DiffRenderView.line_text/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.DiffRenderView.html#line_type/1","title":"Bonfire.UI.Common.DiffRenderView.line_type/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.DiffRenderView.html#patch_status/1","title":"Bonfire.UI.Common.DiffRenderView.patch_status/1","type":"function"},{"doc":"Renders the given template locally.","ref":"Bonfire.UI.Common.DiffRenderView.html#render/2","title":"Bonfire.UI.Common.DiffRenderView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"Bonfire.UI.Common.DiffRenderView.html#template_not_found/2","title":"Bonfire.UI.Common.DiffRenderView.template_not_found/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.DiffRenderView.html#text_content/1","title":"Bonfire.UI.Common.DiffRenderView.text_content/1","type":"function"},{"doc":"Properties current_account :any current_user :any feedback_title :string feedback_message :string","ref":"Bonfire.UI.Common.EmptyFeed.html","title":"Bonfire.UI.Common.EmptyFeed","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.EmptyFeed.html#render/1","title":"Bonfire.UI.Common.EmptyFeed.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.ErrorController.html","title":"Bonfire.UI.Common.ErrorController","type":"module"},{"doc":"Conveniences for translating and building error messages.","ref":"Bonfire.UI.Common.ErrorHelpers.html","title":"Bonfire.UI.Common.ErrorHelpers","type":"module"},{"doc":"Generates tag for inlined form input errors.","ref":"Bonfire.UI.Common.ErrorHelpers.html#error_tag/2","title":"Bonfire.UI.Common.ErrorHelpers.error_tag/2","type":"function"},{"doc":"Translates an error message using gettext.","ref":"Bonfire.UI.Common.ErrorHelpers.html#translate_error/1","title":"Bonfire.UI.Common.ErrorHelpers.translate_error/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.ErrorView.html","title":"Bonfire.UI.Common.ErrorView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"Bonfire.UI.Common.ErrorView.html#__resource__/0","title":"Bonfire.UI.Common.ErrorView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"Bonfire.UI.Common.ErrorView.html#render/2","title":"Bonfire.UI.Common.ErrorView.render/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.ErrorView.html#show_html/2","title":"Bonfire.UI.Common.ErrorView.show_html/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"Bonfire.UI.Common.ErrorView.html#template_not_found/2","title":"Bonfire.UI.Common.ErrorView.template_not_found/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.ExtensionDiffLive.html","title":"Bonfire.UI.Common.ExtensionDiffLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Common.ExtensionDiffLive.html#mount/3","title":"Bonfire.UI.Common.ExtensionDiffLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Common.ExtensionDiffLive.html#render/1","title":"Bonfire.UI.Common.ExtensionDiffLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.ExtensionDiffLive.html#render_diff/1","title":"Bonfire.UI.Common.ExtensionDiffLive.render_diff/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.ExtensionDiffLive.html#render_diff_stream/3","title":"Bonfire.UI.Common.ExtensionDiffLive.render_diff_stream/3","type":"function"},{"doc":"Properties current_account :any current_user :any data :list, default: [] feature_extensions :list, default: [] ui :list, default: [] schemas :list, default: [] ecosystem_libs :list, default: [] other_deps :list, default: [] get_link :any settings_section_title :string, default: &quot;Bonfire extensions&quot; selected_tab :string ading_tab :string","ref":"Bonfire.UI.Common.ExtensionsLive.html","title":"Bonfire.UI.Common.ExtensionsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.ExtensionsLive.html#render/1","title":"Bonfire.UI.Common.ExtensionsLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any text :string, default: nil class :css_class, default: &quot;w-full mt-2 normal-case btn btn-sm btn-info btn-wide&quot;","ref":"Bonfire.UI.Common.FeedbackButtonLive.html","title":"Bonfire.UI.Common.FeedbackButtonLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.FeedbackButtonLive.html#render/1","title":"Bonfire.UI.Common.FeedbackButtonLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any object :any label :string, default: nil my_flag :any, default: nil","ref":"Bonfire.UI.Common.FlagActionLive.html","title":"Bonfire.UI.Common.FlagActionLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.FlagActionLive.html#render/1","title":"Bonfire.UI.Common.FlagActionLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_account :any current_user :any object :any, required: true class :css_class, default: nil icon_class :css_class, default: nil label :string, default: nil my_follow :boolean, default: nil hide_icon :boolean, default: false hide_text :boolean, default: false","ref":"Bonfire.UI.Common.FollowButtonLive.html","title":"Bonfire.UI.Common.FollowButtonLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.UI.Common.FollowButtonLive.html#handle_event/3","title":"Bonfire.UI.Common.FollowButtonLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.UI.Common.FollowButtonLive.html#mount/1","title":"Bonfire.UI.Common.FollowButtonLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.preload/1 .","ref":"Bonfire.UI.Common.FollowButtonLive.html#preload/1","title":"Bonfire.UI.Common.FollowButtonLive.preload/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Common.FollowButtonLive.html#render/1","title":"Bonfire.UI.Common.FollowButtonLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.FormsLiveHandlerFallbackController.html","title":"Bonfire.UI.Common.FormsLiveHandlerFallbackController","type":"module"},{"doc":"","ref":"Bonfire.UI.Common.FormsLiveHandlerFallbackController.html#handle_fallback/3","title":"Bonfire.UI.Common.FormsLiveHandlerFallbackController.handle_fallback/3","type":"function"},{"doc":"Properties current_account :any current_user :any","ref":"Bonfire.UI.Common.HeaderMobileGuestLive.html","title":"Bonfire.UI.Common.HeaderMobileGuestLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.HeaderMobileGuestLive.html#render/1","title":"Bonfire.UI.Common.HeaderMobileGuestLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any page :string without_sidebar :boolean, default: false","ref":"Bonfire.UI.Common.HeaderMobileLive.html","title":"Bonfire.UI.Common.HeaderMobileLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.HeaderMobileLive.html#render/1","title":"Bonfire.UI.Common.HeaderMobileLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any page :string without_sidebar :boolean, default: false","ref":"Bonfire.UI.Common.HeaderUserLive.html","title":"Bonfire.UI.Common.HeaderUserLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.HeaderUserLive.html#render/1","title":"Bonfire.UI.Common.HeaderUserLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any create_activity_type :atom, default: nil preloaded_recipients :list, default: nil to_boundaries :list, default: nil to_circles :list, default: nil showing_within :any, default: nil show_select_recipients :boolean, default: false open_boundaries :boolean, default: false thread_mode :atom, default: nil page :any, default: nil reply_to_id :string, default: nil thread_id :string, default: nil boundaries_modal_id :string, default: :sidebar_composer","ref":"Bonfire.UI.Common.InputBoundariesLive.html","title":"Bonfire.UI.Common.InputBoundariesLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.InputBoundariesLive.html#render/1","title":"Bonfire.UI.Common.InputBoundariesLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any reply_to_id :string, default: nil thread_id :string, default: nil create_activity_type :atom, default: nil to_boundaries :list, default: [] to_circles :list, default: nil showing_within :any, default: nil uploads :any, default: nil uploaded_files :list, default: [] thread_mode :atom, default: nil page :any, default: nil","ref":"Bonfire.UI.Common.InputControlsLive.html","title":"Bonfire.UI.Common.InputControlsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.InputControlsLive.html#render/1","title":"Bonfire.UI.Common.InputControlsLive.render/1","type":"function"},{"doc":"A simple Phoenix function component that sets default assigns needed for every view (eg. used in nav) and then embeds some Surface stateful and stateless components (passing along inner_content to be shown in one of them) Properties current_account :any current_user :any","ref":"Bonfire.UI.Common.LayoutLive.html","title":"Bonfire.UI.Common.LayoutLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.LayoutLive.html#render/1","title":"Bonfire.UI.Common.LayoutLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.LayoutView.html","title":"Bonfire.UI.Common.LayoutView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"Bonfire.UI.Common.LayoutView.html#__resource__/0","title":"Bonfire.UI.Common.LayoutView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"Bonfire.UI.Common.LayoutView.html#render/2","title":"Bonfire.UI.Common.LayoutView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"Bonfire.UI.Common.LayoutView.html#template_not_found/2","title":"Bonfire.UI.Common.LayoutView.template_not_found/2","type":"function"},{"doc":"Properties current_account :any current_user :any src :string class :string alt :string opts :list","ref":"Bonfire.UI.Common.LazyImage.html","title":"Bonfire.UI.Common.LazyImage","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.LazyImage.html#render/1","title":"Bonfire.UI.Common.LazyImage.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_account :any current_user :any object :any like_count :any, default: 0","ref":"Bonfire.UI.Common.LikeActionLive.html","title":"Bonfire.UI.Common.LikeActionLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.UI.Common.LikeActionLive.html#handle_event/3","title":"Bonfire.UI.Common.LikeActionLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.UI.Common.LikeActionLive.html#mount/1","title":"Bonfire.UI.Common.LikeActionLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.preload/1 .","ref":"Bonfire.UI.Common.LikeActionLive.html#preload/1","title":"Bonfire.UI.Common.LikeActionLive.preload/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Common.LikeActionLive.html#render/1","title":"Bonfire.UI.Common.LikeActionLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_account :any current_user :any object :any like_count :any","ref":"Bonfire.UI.Common.LikeActionWithoutLabelLive.html","title":"Bonfire.UI.Common.LikeActionWithoutLabelLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.UI.Common.LikeActionWithoutLabelLive.html#handle_event/3","title":"Bonfire.UI.Common.LikeActionWithoutLabelLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.UI.Common.LikeActionWithoutLabelLive.html#mount/1","title":"Bonfire.UI.Common.LikeActionWithoutLabelLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.preload/1 .","ref":"Bonfire.UI.Common.LikeActionWithoutLabelLive.html#preload/1","title":"Bonfire.UI.Common.LikeActionWithoutLabelLive.preload/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Common.LikeActionWithoutLabelLive.html#render/1","title":"Bonfire.UI.Common.LikeActionWithoutLabelLive.render/1","type":"function"},{"doc":"Special LiveView used for a helper function which allows loading LiveComponents in regular Phoenix views: live_render_component(@conn, MyLiveComponent)","ref":"Bonfire.UI.Common.LiveComponent.html","title":"Bonfire.UI.Common.LiveComponent","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Common.LiveComponent.html#mount/3","title":"Bonfire.UI.Common.LiveComponent.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Common.LiveComponent.html#render/1","title":"Bonfire.UI.Common.LiveComponent.render/1","type":"function"},{"doc":"usage examples: phx-submit=&quot;Bonfire.Social.Posts:post&quot; will be routed to Bonfire.Social.Posts.LiveHandler.handle_event(&quot;post&quot;, ... Bonfire.Common.Utils.pubsub_broadcast(feed_id, {{Bonfire.Social.Feeds, :new_activity}, activity}) will be routed to Bonfire.Social.Feeds.LiveHandler.handle_info({:new_activity, activity}, ... href=&quot;?Bonfire.Social.Feeds[after]=&lt;%= e(@page_info, :end_cursor, nil) %&gt;&quot; will be routed to Bonfire.Social.Feeds.LiveHandler.handle_params(%{&quot;after&quot; =&gt; cursor_after} ...","ref":"Bonfire.UI.Common.LiveHandlers.html","title":"Bonfire.UI.Common.LiveHandlers","type":"module"},{"doc":"","ref":"Bonfire.UI.Common.LiveHandlers.html#assign_default_params/3","title":"Bonfire.UI.Common.LiveHandlers.assign_default_params/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.LiveHandlers.html#handle_event/4","title":"Bonfire.UI.Common.LiveHandlers.handle_event/4","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.LiveHandlers.html#handle_info/3","title":"Bonfire.UI.Common.LiveHandlers.handle_info/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.LiveHandlers.html#handle_params/4","title":"Bonfire.UI.Common.LiveHandlers.handle_params/4","type":"function"},{"doc":"Like a plug, but for a liveview","ref":"Bonfire.UI.Common.LivePlugs.html","title":"Bonfire.UI.Common.LivePlugs","type":"module"},{"doc":"","ref":"Bonfire.UI.Common.LivePlugs.html#live_plug/4","title":"Bonfire.UI.Common.LivePlugs.live_plug/4","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.LivePlugs.AllowTestSandbox.html","title":"Bonfire.UI.Common.LivePlugs.AllowTestSandbox","type":"module"},{"doc":"","ref":"Bonfire.UI.Common.LivePlugs.AllowTestSandbox.html#mount/3","title":"Bonfire.UI.Common.LivePlugs.AllowTestSandbox.mount/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.LivePlugs.AllowTestSandbox.html#on_mount/4","title":"Bonfire.UI.Common.LivePlugs.AllowTestSandbox.on_mount/4","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.LivePlugs.Csrf.html","title":"Bonfire.UI.Common.LivePlugs.Csrf","type":"module"},{"doc":"","ref":"Bonfire.UI.Common.LivePlugs.Csrf.html#mount/3","title":"Bonfire.UI.Common.LivePlugs.Csrf.mount/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.LivePlugs.Locale.html","title":"Bonfire.UI.Common.LivePlugs.Locale","type":"module"},{"doc":"","ref":"Bonfire.UI.Common.LivePlugs.Locale.html#assign_put_locale/2","title":"Bonfire.UI.Common.LivePlugs.Locale.assign_put_locale/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.LivePlugs.Locale.html#default/2","title":"Bonfire.UI.Common.LivePlugs.Locale.default/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.LivePlugs.Locale.html#mount/3","title":"Bonfire.UI.Common.LivePlugs.Locale.mount/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.LivePlugs.StaticChanged.html","title":"Bonfire.UI.Common.LivePlugs.StaticChanged","type":"module"},{"doc":"","ref":"Bonfire.UI.Common.LivePlugs.StaticChanged.html#mount/3","title":"Bonfire.UI.Common.LivePlugs.StaticChanged.mount/3","type":"function"},{"doc":"Properties current_account :any current_user :any live_handler :string page_info :map target :any context :any","ref":"Bonfire.UI.Common.LoadMoreLive.html","title":"Bonfire.UI.Common.LoadMoreLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.LoadMoreLive.html#render/1","title":"Bonfire.UI.Common.LoadMoreLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.LoadMoreLive.html#unwrap/1","title":"Bonfire.UI.Common.LoadMoreLive.unwrap/1","type":"function"},{"doc":"Properties current_account :any current_user :any live_handler :string page_info :map target :any context :any","ref":"Bonfire.UI.Common.LoadPreviousLive.html","title":"Bonfire.UI.Common.LoadPreviousLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.LoadPreviousLive.html#render/1","title":"Bonfire.UI.Common.LoadPreviousLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.LoadPreviousLive.html#unwrap/1","title":"Bonfire.UI.Common.LoadPreviousLive.unwrap/1","type":"function"},{"doc":"Properties current_account :any current_user :any","ref":"Bonfire.UI.Common.LogoGuestLive.html","title":"Bonfire.UI.Common.LogoGuestLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.LogoGuestLive.html#render/1","title":"Bonfire.UI.Common.LogoGuestLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any","ref":"Bonfire.UI.Common.LogoLive.html","title":"Bonfire.UI.Common.LogoLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Common.LogoLive.html#active_smart_input_component/2","title":"Bonfire.UI.Common.LogoLive.active_smart_input_component/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.LogoLive.html#all_smart_input_components/0","title":"Bonfire.UI.Common.LogoLive.all_smart_input_components/0","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.LogoLive.html#render/1","title":"Bonfire.UI.Common.LogoLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.LogoLive.html#set_smart_input_text/2","title":"Bonfire.UI.Common.LogoLive.set_smart_input_text/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.LogoLive.html#smart_input_name/1","title":"Bonfire.UI.Common.LogoLive.smart_input_name/1","type":"function"},{"doc":"Properties current_account :any current_user :any smart_input_prompt :string, required: false","ref":"Bonfire.UI.Common.MobileSmartInputButtonLive.html","title":"Bonfire.UI.Common.MobileSmartInputButtonLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.MobileSmartInputButtonLive.html#render/1","title":"Bonfire.UI.Common.MobileSmartInputButtonLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any page :string, default: &quot;&quot;","ref":"Bonfire.UI.Common.MobileUserMenuLive.html","title":"Bonfire.UI.Common.MobileUserMenuLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.MobileUserMenuLive.html#render/1","title":"Bonfire.UI.Common.MobileUserMenuLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any form_input_name :string, required: true label :string, default: nil preloaded_options :any, default: [] selected_options :any, default: [] focus_event :string, required: false pick_event :string, required: false remove_event :string, required: false context_id :string, default: nil","ref":"Bonfire.UI.Common.MultiselectLive.html","title":"Bonfire.UI.Common.MultiselectLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Common.MultiselectLive.html#options/1","title":"Bonfire.UI.Common.MultiselectLive.options/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.MultiselectLive.html#render/1","title":"Bonfire.UI.Common.MultiselectLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.MultiselectLive.LiveHandler.html","title":"Bonfire.UI.Common.MultiselectLive.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.UI.Common.MultiselectLive.LiveHandler.html#handle_event/3","title":"Bonfire.UI.Common.MultiselectLive.LiveHandler.handle_event/3","type":"function"},{"doc":"Properties current_account :any current_user :any form_input_name :string, default: nil label :string, default: nil pick_event :string, default: nil remove_event :string, default: nil selected_options :any, default: nil preloaded_options :any, default: nil context_id :string, default: nil","ref":"Bonfire.UI.Common.MultiselectLive.UserSelectorLive.html","title":"Bonfire.UI.Common.MultiselectLive.UserSelectorLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Common.MultiselectLive.UserSelectorLive.html#follow_to_tuple/1","title":"Bonfire.UI.Common.MultiselectLive.UserSelectorLive.follow_to_tuple/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.MultiselectLive.UserSelectorLive.html#render/1","title":"Bonfire.UI.Common.MultiselectLive.UserSelectorLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.MultiselectLive.UserSelectorLive.html#update/2","title":"Bonfire.UI.Common.MultiselectLive.UserSelectorLive.update/2","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_account :any current_user :any root_flash :any, default: nil notification :any, default: nil error :any, default: nil info :any, default: nil error_sentry_event_id :any, default: nil","ref":"Bonfire.UI.Common.NotificationLive.html","title":"Bonfire.UI.Common.NotificationLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Common.NotificationLive.html#error_template/1","title":"Bonfire.UI.Common.NotificationLive.error_template/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.UI.Common.NotificationLive.html#handle_event/3","title":"Bonfire.UI.Common.NotificationLive.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.NotificationLive.html#handle_info/2","title":"Bonfire.UI.Common.NotificationLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.UI.Common.NotificationLive.html#mount/1","title":"Bonfire.UI.Common.NotificationLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Common.NotificationLive.html#render/1","title":"Bonfire.UI.Common.NotificationLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.UI.Common.NotificationLive.html#update/2","title":"Bonfire.UI.Common.NotificationLive.update/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Notifications.html","title":"Bonfire.UI.Common.Notifications","type":"module"},{"doc":"","ref":"Bonfire.UI.Common.Notifications.html#handle_event/3","title":"Bonfire.UI.Common.Notifications.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Notifications.html#handle_info/2","title":"Bonfire.UI.Common.Notifications.handle_info/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Notifications.html#notify_feeds/4","title":"Bonfire.UI.Common.Notifications.notify_feeds/4","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Notifications.html#notify_me/4","title":"Bonfire.UI.Common.Notifications.notify_me/4","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Notifications.html#receive_flash/1","title":"Bonfire.UI.Common.Notifications.receive_flash/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Notifications.html#receive_notification/2","title":"Bonfire.UI.Common.Notifications.receive_notification/2","type":"function"},{"doc":"The classic modal Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_account :any current_user :any title_text :string - The title of the modal. Only used if no title slot is passed. title_class :css_class, default: &quot;font-bold text-base&quot; - The classes of the title of the modal cancel_btn_class :css_class, default: &quot;btn btn-outline btn-sm normal-case&quot; - The classes of the close/cancel button on the modal. Only used if no close_btn slot is passed. show :boolean, default: false - Force modal to be open form_opts :any, default: [] no_actions :boolean, default: false - Optional prop to hide the actions at the bottom of the modal reusable_modal_id :string, default: &quot;modal&quot; - The classes of the title of the modal opts :keyword, default: [] - Additional attributes to add onto the modal wrapper autocomplete :list, default: [] Slots default, args: [:autocomplete] - Slots for the contents of the modal, title, buttons... open_btn action_btns cancel_btn title","ref":"Bonfire.UI.Common.OpenModalLive.html","title":"Bonfire.UI.Common.OpenModalLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Common.OpenModalLive.html#close/0","title":"Bonfire.UI.Common.OpenModalLive.close/0","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.UI.Common.OpenModalLive.html#handle_event/3","title":"Bonfire.UI.Common.OpenModalLive.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.OpenModalLive.html#handle_info/2","title":"Bonfire.UI.Common.OpenModalLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.UI.Common.OpenModalLive.html#mount/1","title":"Bonfire.UI.Common.OpenModalLive.mount/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.OpenModalLive.html#open/0","title":"Bonfire.UI.Common.OpenModalLive.open/0","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Common.OpenModalLive.html#render/1","title":"Bonfire.UI.Common.OpenModalLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.OpenModalLive.html#set/1","title":"Bonfire.UI.Common.OpenModalLive.set/1","type":"function"},{"doc":"Properties current_account :any current_user :any page :any, default: nil page_title :string, required: true aside :any, required: false page_header_drawer :boolean, default: false without_header :boolean, default: false Slots default left_action right_action","ref":"Bonfire.UI.Common.PageHeaderLive.html","title":"Bonfire.UI.Common.PageHeaderLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.PageHeaderLive.html#render/1","title":"Bonfire.UI.Common.PageHeaderLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Plugs.ActivityPub.html","title":"Bonfire.UI.Common.Plugs.ActivityPub","type":"module"},{"doc":"","ref":"Bonfire.UI.Common.Plugs.ActivityPub.html#call/2","title":"Bonfire.UI.Common.Plugs.ActivityPub.call/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Plugs.ActivityPub.html#init/1","title":"Bonfire.UI.Common.Plugs.ActivityPub.init/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Plugs.ActivityPub.html#maybe_redirect/1","title":"Bonfire.UI.Common.Plugs.ActivityPub.maybe_redirect/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Plugs.ActivityPub.html#with_headers/3","title":"Bonfire.UI.Common.Plugs.ActivityPub.with_headers/3","type":"function"},{"doc":"Properties current_account :any current_user :any profile :any character :any class :css_class show_controls :list, default: [:follow] Slots default, required: false","ref":"Bonfire.UI.Common.ProfileItemLive.html","title":"Bonfire.UI.Common.ProfileItemLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.ProfileItemLive.html#render/1","title":"Bonfire.UI.Common.ProfileItemLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any selected_tab :string, default: nil path_prefix :string, required: true tabs :list, required: true","ref":"Bonfire.UI.Common.ProfileNavigationLive.html","title":"Bonfire.UI.Common.ProfileNavigationLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.ProfileNavigationLive.html#render/1","title":"Bonfire.UI.Common.ProfileNavigationLive.render/1","type":"function"},{"doc":"The classic modal Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_account :any current_user :any title_text :string, default: nil - The title of the modal. Only used if no title slot is passed. title_class *:css_class, default: @doc( &quot;The classes of the close/cancel button on the modal. Only used if no close_btn slot is passed.&quot; ) The classes of the close/cancel button on the modal. Only used if no close_btn slot is passed. cancel_btn_class :css_class, default: nil show :boolean, default: false - Force modal to be open form_opts :any, default: [] no_actions :boolean, default: false - Optional prop to hide the actions at the bottom of the modal no_header :boolean, default: false, required: false - Optional prop to hide the header at the top of the modal opts :keyword, default: [] - Additional attributes to add onto the modal wrapper autocomplete :list, default: [] Slots default, args: [:autocomplete] - Slots for the contents of the modal, title, buttons... open_btn action_btns cancel_btn title","ref":"Bonfire.UI.Common.ReusableModalLive.html","title":"Bonfire.UI.Common.ReusableModalLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.UI.Common.ReusableModalLive.html#handle_event/3","title":"Bonfire.UI.Common.ReusableModalLive.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.ReusableModalLive.html#handle_info/2","title":"Bonfire.UI.Common.ReusableModalLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.UI.Common.ReusableModalLive.html#mount/1","title":"Bonfire.UI.Common.ReusableModalLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Common.ReusableModalLive.html#render/1","title":"Bonfire.UI.Common.ReusableModalLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Routes.html","title":"Bonfire.UI.Common.Routes","type":"module"},{"doc":"Properties current_account :any current_user :any preloaded_recipients :list to_boundaries :list to_circles :list showing_within :any","ref":"Bonfire.UI.Common.SelectRecipientsLive.html","title":"Bonfire.UI.Common.SelectRecipientsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.SelectRecipientsLive.html#render/1","title":"Bonfire.UI.Common.SelectRecipientsLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.SessionRedirectController.html","title":"Bonfire.UI.Common.SessionRedirectController","type":"module"},{"doc":"","ref":"Bonfire.UI.Common.SessionRedirectController.html#set_and_redirect/2","title":"Bonfire.UI.Common.SessionRedirectController.set_and_redirect/2","type":"function"},{"doc":"Properties current_account :any current_user :any page :string, required: true reply_to_id :string, default: &quot;&quot; thread_id :string, default: &quot;&quot;, required: false create_activity_type :atom, default: nil showing_within :any, default: nil to_boundaries :list, default: [] to_circles :list, default: nil hide_smart_input :boolean, default: false smart_input_prompt :string, required: false smart_input_text :string, required: false sidebar_widgets :list, default: [] thread_mode :atom, default: nil show_less_menu_items :boolean, default: false","ref":"Bonfire.UI.Common.SidebarLive.html","title":"Bonfire.UI.Common.SidebarLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.SidebarLive.html#render/1","title":"Bonfire.UI.Common.SidebarLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any page :string, required: true","ref":"Bonfire.UI.Common.SidebarNavigationDropdownLive.html","title":"Bonfire.UI.Common.SidebarNavigationDropdownLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.SidebarNavigationDropdownLive.html#render/1","title":"Bonfire.UI.Common.SidebarNavigationDropdownLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any page :string, required: true","ref":"Bonfire.UI.Common.SidebarNavigationItemsLive.html","title":"Bonfire.UI.Common.SidebarNavigationItemsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.SidebarNavigationItemsLive.html#render/1","title":"Bonfire.UI.Common.SidebarNavigationItemsLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any page :string, required: true","ref":"Bonfire.UI.Common.SidebarNavigationLive.html","title":"Bonfire.UI.Common.SidebarNavigationLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.SidebarNavigationLive.html#render/1","title":"Bonfire.UI.Common.SidebarNavigationLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any smart_input_prompt :string, required: false smart_input_as :atom, default: :sidebar","ref":"Bonfire.UI.Common.SmartInputButtonLive.html","title":"Bonfire.UI.Common.SmartInputButtonLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.SmartInputButtonLive.html#render/1","title":"Bonfire.UI.Common.SmartInputButtonLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any reply_to_id :string, default: &quot;&quot; thread_id :string, default: &quot;&quot;, required: false create_activity_type :atom, default: nil smart_input_component :atom, default: nil to_boundaries :list, default: [] to_circles :list, default: nil smart_input_prompt :string, required: false smart_input_text :string, required: false showing_within :any, default: nil with_rich_editor :boolean, default: true, required: false activity :any, default: nil hide_smart_input :boolean, default: false object :any, default: nil activity_inception :any, default: nil title_open :boolean, default: false title_prompt :string, default: nil preloaded_recipients :list, default: nil show_select_recipients :boolean, default: false thread_mode :atom, default: nil page :any, default: nil","ref":"Bonfire.UI.Common.SmartInputContainerLive.html","title":"Bonfire.UI.Common.SmartInputContainerLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Common.SmartInputContainerLive.html#active_smart_input_component/2","title":"Bonfire.UI.Common.SmartInputContainerLive.active_smart_input_component/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.SmartInputContainerLive.html#all_smart_input_components/0","title":"Bonfire.UI.Common.SmartInputContainerLive.all_smart_input_components/0","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.SmartInputContainerLive.html#render/1","title":"Bonfire.UI.Common.SmartInputContainerLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.SmartInputContainerLive.html#set_smart_input_as/2","title":"Bonfire.UI.Common.SmartInputContainerLive.set_smart_input_as/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.SmartInputContainerLive.html#set_smart_input_text/2","title":"Bonfire.UI.Common.SmartInputContainerLive.set_smart_input_text/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.SmartInputContainerLive.html#smart_input_name/1","title":"Bonfire.UI.Common.SmartInputContainerLive.smart_input_name/1","type":"function"},{"doc":"Properties current_account :any current_user :any smart_input_prompt :string, required: false smart_input_component :atom, default: nil create_activity_type :atom, default: nil","ref":"Bonfire.UI.Common.SmartInputHeaderLive.html","title":"Bonfire.UI.Common.SmartInputHeaderLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Common.SmartInputHeaderLive.html#active_smart_input_component/2","title":"Bonfire.UI.Common.SmartInputHeaderLive.active_smart_input_component/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.SmartInputHeaderLive.html#all_smart_input_components/0","title":"Bonfire.UI.Common.SmartInputHeaderLive.all_smart_input_components/0","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.SmartInputHeaderLive.html#render/1","title":"Bonfire.UI.Common.SmartInputHeaderLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.SmartInputHeaderLive.html#set_smart_input_text/2","title":"Bonfire.UI.Common.SmartInputHeaderLive.set_smart_input_text/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.SmartInputHeaderLive.html#smart_input_name/1","title":"Bonfire.UI.Common.SmartInputHeaderLive.smart_input_name/1","type":"function"},{"doc":"Properties current_account :any current_user :any smart_input_prompt :string, required: false","ref":"Bonfire.UI.Common.SmartInputHeaderModalLive.html","title":"Bonfire.UI.Common.SmartInputHeaderModalLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.SmartInputHeaderModalLive.html#render/1","title":"Bonfire.UI.Common.SmartInputHeaderModalLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_account :any current_user :any create_activity_type :atom, default: nil reply_to_id :string, default: &quot;&quot; thread_id :string, default: &quot;&quot;, required: false smart_input_component :atom, default: nil to_boundaries :list, default: [] to_circles :list, default: nil open_boundaries :boolean, default: false smart_input_prompt :string, required: false smart_input_text :string, required: false showing_within :any, default: nil with_rich_editor :boolean, default: true, required: false activity :any, default: nil hide_smart_input :boolean, default: false object :any, default: nil activity_inception :any, default: nil title_open :boolean, default: false title_prompt :string, default: nil preloaded_recipients :list, default: nil show_select_recipients :boolean, default: false thread_mode :any, default: nil page :any, default: nil boundaries_modal_id :string, default: :sidebar_composer replied_activity_class :css_class, default: &quot;relative p-3 bg-base-100 hover:!bg-base-100 hover:!bg-opacity-100 showing_within:smart_input overflow-hidden&quot;","ref":"Bonfire.UI.Common.SmartInputLive.html","title":"Bonfire.UI.Common.SmartInputLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Common.SmartInputLive.html#active_smart_input_component/2","title":"Bonfire.UI.Common.SmartInputLive.active_smart_input_component/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.SmartInputLive.html#activity_type_or_reply/1","title":"Bonfire.UI.Common.SmartInputLive.activity_type_or_reply/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.SmartInputLive.html#all_smart_input_components/0","title":"Bonfire.UI.Common.SmartInputLive.all_smart_input_components/0","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.UI.Common.SmartInputLive.html#handle_event/3","title":"Bonfire.UI.Common.SmartInputLive.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.SmartInputLive.html#handle_info/2","title":"Bonfire.UI.Common.SmartInputLive.handle_info/2","type":"function"},{"doc":"See Bonfire.UI.Common.LiveHandlers.handle_params/3 .","ref":"Bonfire.UI.Common.SmartInputLive.html#handle_params/3","title":"Bonfire.UI.Common.SmartInputLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.UI.Common.SmartInputLive.html#mount/1","title":"Bonfire.UI.Common.SmartInputLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Common.SmartInputLive.html#render/1","title":"Bonfire.UI.Common.SmartInputLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.SmartInputLive.html#reset_input/1","title":"Bonfire.UI.Common.SmartInputLive.reset_input/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.SmartInputLive.html#set_smart_input_text/2","title":"Bonfire.UI.Common.SmartInputLive.set_smart_input_text/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.SmartInputLive.html#smart_input_name/1","title":"Bonfire.UI.Common.SmartInputLive.smart_input_name/1","type":"function"},{"doc":"Properties current_account :any current_user :any scope :atom, default: nil","ref":"Bonfire.UI.Common.SmartInputSettingsLive.html","title":"Bonfire.UI.Common.SmartInputSettingsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.SmartInputSettingsLive.html#render/1","title":"Bonfire.UI.Common.SmartInputSettingsLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html","title":"Bonfire.UI.Common.Testing.Helpers","type":"module"},{"doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#assert_field_error/3","title":"Bonfire.UI.Common.Testing.Helpers.assert_field_error/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#assert_field_good/2","title":"Bonfire.UI.Common.Testing.Helpers.assert_field_good/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#assert_flash/3","title":"Bonfire.UI.Common.Testing.Helpers.assert_flash/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#assert_flash_kind/2","title":"Bonfire.UI.Common.Testing.Helpers.assert_flash_kind/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#assert_flash_message/2","title":"Bonfire.UI.Common.Testing.Helpers.assert_flash_message/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#conn/0","title":"Bonfire.UI.Common.Testing.Helpers.conn/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#conn/1","title":"Bonfire.UI.Common.Testing.Helpers.conn/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#conn/2","title":"Bonfire.UI.Common.Testing.Helpers.conn/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#fake_account!/2","title":"Bonfire.UI.Common.Testing.Helpers.fake_account!/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#fake_admin_and_conn!/1","title":"Bonfire.UI.Common.Testing.Helpers.fake_admin_and_conn!/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#fake_user!/2","title":"Bonfire.UI.Common.Testing.Helpers.fake_user!/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#fake_user_and_conn!/1","title":"Bonfire.UI.Common.Testing.Helpers.fake_user_and_conn!/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#find_flash/1","title":"Bonfire.UI.Common.Testing.Helpers.find_flash/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#find_form_error/2","title":"Bonfire.UI.Common.Testing.Helpers.find_form_error/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#floki_attr/2","title":"Bonfire.UI.Common.Testing.Helpers.floki_attr/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#floki_click/3","title":"Bonfire.UI.Common.Testing.Helpers.floki_click/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#floki_live/2","title":"Bonfire.UI.Common.Testing.Helpers.floki_live/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#floki_redirect/2","title":"Bonfire.UI.Common.Testing.Helpers.floki_redirect/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#floki_response/2","title":"Bonfire.UI.Common.Testing.Helpers.floki_response/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#floki_submit/4","title":"Bonfire.UI.Common.Testing.Helpers.floki_submit/4","type":"function"},{"doc":"Wait for the LiveView to receive any queued PubSub broadcasts","ref":"Bonfire.UI.Common.Testing.Helpers.html#live_pubsub_wait/1","title":"Bonfire.UI.Common.Testing.Helpers.live_pubsub_wait/1","type":"function"},{"doc":"Render stateful Surface or LiveView components","ref":"Bonfire.UI.Common.Testing.Helpers.html#render_stateful/3","title":"Bonfire.UI.Common.Testing.Helpers.render_stateful/3","type":"function"},{"doc":"Render stateless Surface or LiveView components","ref":"Bonfire.UI.Common.Testing.Helpers.html#render_stateless/3","title":"Bonfire.UI.Common.Testing.Helpers.render_stateless/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Common.Testing.Helpers.html#session_conn/1","title":"Bonfire.UI.Common.Testing.Helpers.session_conn/1","type":"function"},{"doc":"Properties current_account :any current_user :any uploads :any, default: nil thread_mode :atom, default: nil uploaded_files :list, default: []","ref":"Bonfire.UI.Common.UploadButtonLive.html","title":"Bonfire.UI.Common.UploadButtonLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.UploadButtonLive.html#render/1","title":"Bonfire.UI.Common.UploadButtonLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any","ref":"Bonfire.UI.Common.UserMenuLinksLive.html","title":"Bonfire.UI.Common.UserMenuLinksLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.UserMenuLinksLive.html#render/1","title":"Bonfire.UI.Common.UserMenuLinksLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any","ref":"Bonfire.UI.Common.UserMenuLive.html","title":"Bonfire.UI.Common.UserMenuLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.UserMenuLive.html#render/1","title":"Bonfire.UI.Common.UserMenuLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any","ref":"Bonfire.UI.Common.WidgetFeedbackLive.html","title":"Bonfire.UI.Common.WidgetFeedbackLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.WidgetFeedbackLive.html#render/1","title":"Bonfire.UI.Common.WidgetFeedbackLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any display_banner :boolean, default: true","ref":"Bonfire.UI.Common.WidgetInstanceInfoLive.html","title":"Bonfire.UI.Common.WidgetInstanceInfoLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.WidgetInstanceInfoLive.html#render/1","title":"Bonfire.UI.Common.WidgetInstanceInfoLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any links :any widget_title :string","ref":"Bonfire.UI.Common.WidgetLinksLive.html","title":"Bonfire.UI.Common.WidgetLinksLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.WidgetLinksLive.html#render/1","title":"Bonfire.UI.Common.WidgetLinksLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any widget_title :string class :css_class, default: &quot;relative w-full mx-auto rounded-md bg-base-100 shadow&quot; Slots action - A call to action, usually redirect to the specific page default, required: true - The main content of the widget","ref":"Bonfire.UI.Common.WidgetLive.html","title":"Bonfire.UI.Common.WidgetLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.WidgetLive.html#render/1","title":"Bonfire.UI.Common.WidgetLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any text :string widget_title :string banner_image :any info :map","ref":"Bonfire.UI.Common.WidgetTextLive.html","title":"Bonfire.UI.Common.WidgetTextLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Common.WidgetTextLive.html#render/1","title":"Bonfire.UI.Common.WidgetTextLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_account :any current_user :any selected_tab :string blocks :list, default: [] page_info :any scope :atom, default: nil","ref":"Bonfire.UI.Me.BlocksLive.html","title":"Bonfire.UI.Me.BlocksLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.UI.Me.BlocksLive.html#mount/1","title":"Bonfire.UI.Me.BlocksLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Me.BlocksLive.html#render/1","title":"Bonfire.UI.Me.BlocksLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.UI.Me.BlocksLive.html#update/2","title":"Bonfire.UI.Me.BlocksLive.update/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.ChangePasswordController.html","title":"Bonfire.UI.Me.ChangePasswordController","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.ChangePasswordController.html#create/2","title":"Bonfire.UI.Me.ChangePasswordController.create/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.ChangePasswordController.html#form_cs/1","title":"Bonfire.UI.Me.ChangePasswordController.form_cs/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.ChangePasswordController.html#index/2","title":"Bonfire.UI.Me.ChangePasswordController.index/2","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_account :any current_user :any","ref":"Bonfire.UI.Me.ChangePasswordLive.html","title":"Bonfire.UI.Me.ChangePasswordLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Me.ChangePasswordLive.html#mount/3","title":"Bonfire.UI.Me.ChangePasswordLive.mount/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.ChangePasswordLive.html#mounted/3","title":"Bonfire.UI.Me.ChangePasswordLive.mounted/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Me.ChangePasswordLive.html#render/1","title":"Bonfire.UI.Me.ChangePasswordLive.render/1","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.UI.Me.ChannelCase.html","title":"Bonfire.UI.Me.ChannelCase","type":"module"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_account :any current_user :any","ref":"Bonfire.UI.Me.CharacterLive.html","title":"Bonfire.UI.Me.CharacterLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.CharacterLive.html#get/1","title":"Bonfire.UI.Me.CharacterLive.get/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Me.CharacterLive.html#mount/3","title":"Bonfire.UI.Me.CharacterLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Me.CharacterLive.html#render/1","title":"Bonfire.UI.Me.CharacterLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.ConfirmEmailController.html","title":"Bonfire.UI.Me.ConfirmEmailController","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.ConfirmEmailController.html#create/2","title":"Bonfire.UI.Me.ConfirmEmailController.create/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.ConfirmEmailController.html#index/2","title":"Bonfire.UI.Me.ConfirmEmailController.index/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.ConfirmEmailController.html#show/2","title":"Bonfire.UI.Me.ConfirmEmailController.show/2","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_account :any current_user :any","ref":"Bonfire.UI.Me.ConfirmEmailLive.html","title":"Bonfire.UI.Me.ConfirmEmailLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Me.ConfirmEmailLive.html#mount/3","title":"Bonfire.UI.Me.ConfirmEmailLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Me.ConfirmEmailLive.html#render/1","title":"Bonfire.UI.Me.ConfirmEmailLive.render/1","type":"function"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.UI.Me.ConnCase.html","title":"Bonfire.UI.Me.ConnCase","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.CreateUserController.html","title":"Bonfire.UI.Me.CreateUserController","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.CreateUserController.html#create/2","title":"Bonfire.UI.Me.CreateUserController.create/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.CreateUserController.html#index/2","title":"Bonfire.UI.Me.CreateUserController.index/2","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_account :any current_user :any","ref":"Bonfire.UI.Me.CreateUserLive.html","title":"Bonfire.UI.Me.CreateUserLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.UI.Me.CreateUserLive.html#handle_event/3","title":"Bonfire.UI.Me.CreateUserLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.UI.Me.CreateUserLive.html#handle_info/2","title":"Bonfire.UI.Me.CreateUserLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Me.CreateUserLive.html#mount/3","title":"Bonfire.UI.Me.CreateUserLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Me.CreateUserLive.html#render/1","title":"Bonfire.UI.Me.CreateUserLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any form :any error :any","ref":"Bonfire.UI.Me.CreateUserViewLive.html","title":"Bonfire.UI.Me.CreateUserViewLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Me.CreateUserViewLive.html#render/1","title":"Bonfire.UI.Me.CreateUserViewLive.render/1","type":"function"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.UI.Me.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.UI.Me.DataCase.html","title":"Bonfire.UI.Me.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.UI.Me.DataCase.html#errors_on/1","title":"Bonfire.UI.Me.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.DataHelpers.html","title":"Bonfire.UI.Me.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.ErrorLive.html","title":"Bonfire.UI.Me.ErrorLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.UI.Me.ErrorLive.html#handle_event/3","title":"Bonfire.UI.Me.ErrorLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.UI.Me.ErrorLive.html#handle_info/2","title":"Bonfire.UI.Me.ErrorLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.UI.Me.ErrorLive.html#handle_params/3","title":"Bonfire.UI.Me.ErrorLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Me.ErrorLive.html#mount/3","title":"Bonfire.UI.Me.ErrorLive.mount/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.ErrorLive.html#mounted/3","title":"Bonfire.UI.Me.ErrorLive.mounted/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Me.ErrorLive.html#render/1","title":"Bonfire.UI.Me.ErrorLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.ForgotPasswordController.html","title":"Bonfire.UI.Me.ForgotPasswordController","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.ForgotPasswordController.html#create/2","title":"Bonfire.UI.Me.ForgotPasswordController.create/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.ForgotPasswordController.html#form/1","title":"Bonfire.UI.Me.ForgotPasswordController.form/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.ForgotPasswordController.html#index/2","title":"Bonfire.UI.Me.ForgotPasswordController.index/2","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_account :any current_user :any","ref":"Bonfire.UI.Me.ForgotPasswordLive.html","title":"Bonfire.UI.Me.ForgotPasswordLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Me.ForgotPasswordLive.html#mount/3","title":"Bonfire.UI.Me.ForgotPasswordLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Me.ForgotPasswordLive.html#render/1","title":"Bonfire.UI.Me.ForgotPasswordLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.Integration.html","title":"Bonfire.UI.Me.Integration","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.Integration.html#is_admin?/1","title":"Bonfire.UI.Me.Integration.is_admin?/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.Integration.html#mailer/0","title":"Bonfire.UI.Me.Integration.mailer/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.Integration.html#repo/0","title":"Bonfire.UI.Me.Integration.repo/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.LivePlugs.AccountRequired.html","title":"Bonfire.UI.Me.LivePlugs.AccountRequired","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.LivePlugs.AccountRequired.html#mount/3","title":"Bonfire.UI.Me.LivePlugs.AccountRequired.mount/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.LivePlugs.AdminRequired.html","title":"Bonfire.UI.Me.LivePlugs.AdminRequired","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.LivePlugs.AdminRequired.html#mount/3","title":"Bonfire.UI.Me.LivePlugs.AdminRequired.mount/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.LivePlugs.LoadCurrentAccount.html","title":"Bonfire.UI.Me.LivePlugs.LoadCurrentAccount","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.LivePlugs.LoadCurrentAccount.html#mount/3","title":"Bonfire.UI.Me.LivePlugs.LoadCurrentAccount.mount/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.LivePlugs.LoadCurrentAccountUsers.html","title":"Bonfire.UI.Me.LivePlugs.LoadCurrentAccountUsers","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.LivePlugs.LoadCurrentAccountUsers.html#mount/3","title":"Bonfire.UI.Me.LivePlugs.LoadCurrentAccountUsers.mount/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.LivePlugs.LoadCurrentUser.html","title":"Bonfire.UI.Me.LivePlugs.LoadCurrentUser","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.LivePlugs.LoadCurrentUser.html#mount/3","title":"Bonfire.UI.Me.LivePlugs.LoadCurrentUser.mount/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.LivePlugs.LoadCurrentUserCircles.html","title":"Bonfire.UI.Me.LivePlugs.LoadCurrentUserCircles","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.LivePlugs.LoadCurrentUserCircles.html#mount/3","title":"Bonfire.UI.Me.LivePlugs.LoadCurrentUserCircles.mount/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.LivePlugs.UserRequired.html","title":"Bonfire.UI.Me.LivePlugs.UserRequired","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.LivePlugs.UserRequired.html#mount/3","title":"Bonfire.UI.Me.LivePlugs.UserRequired.mount/3","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_account :any current_user :any","ref":"Bonfire.UI.Me.LoggedDashboardLive.html","title":"Bonfire.UI.Me.LoggedDashboardLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.UI.Me.LoggedDashboardLive.html#handle_event/3","title":"Bonfire.UI.Me.LoggedDashboardLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.UI.Me.LoggedDashboardLive.html#handle_info/2","title":"Bonfire.UI.Me.LoggedDashboardLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.UI.Me.LoggedDashboardLive.html#handle_params/3","title":"Bonfire.UI.Me.LoggedDashboardLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Me.LoggedDashboardLive.html#mount/3","title":"Bonfire.UI.Me.LoggedDashboardLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Me.LoggedDashboardLive.html#render/1","title":"Bonfire.UI.Me.LoggedDashboardLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.LoginController.html","title":"Bonfire.UI.Me.LoginController","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.LoginController.html#create/2","title":"Bonfire.UI.Me.LoginController.create/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.LoginController.html#index/2","title":"Bonfire.UI.Me.LoginController.index/2","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_account :any current_user :any","ref":"Bonfire.UI.Me.LoginLive.html","title":"Bonfire.UI.Me.LoginLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Me.LoginLive.html#mount/3","title":"Bonfire.UI.Me.LoginLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Me.LoginLive.html#render/1","title":"Bonfire.UI.Me.LoginLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any form :any error :any","ref":"Bonfire.UI.Me.LoginViewLive.html","title":"Bonfire.UI.Me.LoginViewLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Me.LoginViewLive.html#render/1","title":"Bonfire.UI.Me.LoginViewLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.LogoutController.html","title":"Bonfire.UI.Me.LogoutController","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.LogoutController.html#index/2","title":"Bonfire.UI.Me.LogoutController.index/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.My.SettingsUpload.html","title":"Bonfire.UI.Me.My.SettingsUpload","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.My.SettingsUpload.html#upload/2","title":"Bonfire.UI.Me.My.SettingsUpload.upload/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.Plugs.AccountRequired.html","title":"Bonfire.UI.Me.Plugs.AccountRequired","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.Plugs.AccountRequired.html#call/2","title":"Bonfire.UI.Me.Plugs.AccountRequired.call/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.Plugs.AccountRequired.html#init/1","title":"Bonfire.UI.Me.Plugs.AccountRequired.init/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.Plugs.AdminRequired.html","title":"Bonfire.UI.Me.Plugs.AdminRequired","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.Plugs.AdminRequired.html#call/2","title":"Bonfire.UI.Me.Plugs.AdminRequired.call/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.Plugs.AdminRequired.html#init/1","title":"Bonfire.UI.Me.Plugs.AdminRequired.init/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.Plugs.GuestOnly.html","title":"Bonfire.UI.Me.Plugs.GuestOnly","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.Plugs.GuestOnly.html#call/2","title":"Bonfire.UI.Me.Plugs.GuestOnly.call/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.Plugs.GuestOnly.html#init/1","title":"Bonfire.UI.Me.Plugs.GuestOnly.init/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.Plugs.LoadCurrentAccount.html","title":"Bonfire.UI.Me.Plugs.LoadCurrentAccount","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.Plugs.LoadCurrentAccount.html#call/2","title":"Bonfire.UI.Me.Plugs.LoadCurrentAccount.call/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.Plugs.LoadCurrentAccount.html#init/1","title":"Bonfire.UI.Me.Plugs.LoadCurrentAccount.init/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.Plugs.LoadCurrentAccountUsers.html","title":"Bonfire.UI.Me.Plugs.LoadCurrentAccountUsers","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.Plugs.LoadCurrentAccountUsers.html#call/2","title":"Bonfire.UI.Me.Plugs.LoadCurrentAccountUsers.call/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.Plugs.LoadCurrentAccountUsers.html#init/1","title":"Bonfire.UI.Me.Plugs.LoadCurrentAccountUsers.init/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.Plugs.LoadCurrentUser.html","title":"Bonfire.UI.Me.Plugs.LoadCurrentUser","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.Plugs.LoadCurrentUser.html#call/2","title":"Bonfire.UI.Me.Plugs.LoadCurrentUser.call/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.Plugs.LoadCurrentUser.html#init/1","title":"Bonfire.UI.Me.Plugs.LoadCurrentUser.init/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.Plugs.UserRequired.html","title":"Bonfire.UI.Me.Plugs.UserRequired","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.Plugs.UserRequired.html#call/2","title":"Bonfire.UI.Me.Plugs.UserRequired.call/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.Plugs.UserRequired.html#init/1","title":"Bonfire.UI.Me.Plugs.UserRequired.init/1","type":"function"},{"doc":"Properties current_account :any current_user :any user :map follows_me :boolean, default: false","ref":"Bonfire.UI.Me.ProfileHeroFullLive.html","title":"Bonfire.UI.Me.ProfileHeroFullLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.ProfileHeroFullLive.html#display_url/1","title":"Bonfire.UI.Me.ProfileHeroFullLive.display_url/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Me.ProfileHeroFullLive.html#render/1","title":"Bonfire.UI.Me.ProfileHeroFullLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_account :any current_user :any","ref":"Bonfire.UI.Me.ProfileLive.html","title":"Bonfire.UI.Me.ProfileLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.ProfileLive.html#do_handle_params/3","title":"Bonfire.UI.Me.ProfileLive.do_handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.UI.Me.ProfileLive.html#handle_event/3","title":"Bonfire.UI.Me.ProfileLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.UI.Me.ProfileLive.html#handle_info/2","title":"Bonfire.UI.Me.ProfileLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.UI.Me.ProfileLive.html#handle_params/3","title":"Bonfire.UI.Me.ProfileLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Me.ProfileLive.html#mount/3","title":"Bonfire.UI.Me.ProfileLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Me.ProfileLive.html#render/1","title":"Bonfire.UI.Me.ProfileLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.ProfileLive.html#tab/1","title":"Bonfire.UI.Me.ProfileLive.tab/1","type":"function"},{"doc":"Properties current_account :any current_user :any page_title :string, required: true page :string, required: true selected_tab :string, default: &quot;timeline&quot; smart_input :boolean, required: true smart_input_prompt :string smart_input_text :string search_placeholder :string feed_title :string user :map follows_me :boolean, default: false Slots header","ref":"Bonfire.UI.Me.ProfileRemoteFollowLive.html","title":"Bonfire.UI.Me.ProfileRemoteFollowLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Me.ProfileRemoteFollowLive.html#render/1","title":"Bonfire.UI.Me.ProfileRemoteFollowLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.Routes.html","title":"Bonfire.UI.Me.Routes","type":"module"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_account :any current_user :any","ref":"Bonfire.UI.Me.SettingsLive.html","title":"Bonfire.UI.Me.SettingsLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.SettingsLive.html#do_handle_params/3","title":"Bonfire.UI.Me.SettingsLive.do_handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.UI.Me.SettingsLive.html#handle_event/3","title":"Bonfire.UI.Me.SettingsLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.UI.Me.SettingsLive.html#handle_params/3","title":"Bonfire.UI.Me.SettingsLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Me.SettingsLive.html#mount/3","title":"Bonfire.UI.Me.SettingsLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Me.SettingsLive.html#render/1","title":"Bonfire.UI.Me.SettingsLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.SettingsLive.html#save/4","title":"Bonfire.UI.Me.SettingsLive.save/4","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.SettingsLive.html#secondary_widgets/0","title":"Bonfire.UI.Me.SettingsLive.secondary_widgets/0","type":"function"},{"doc":"Properties current_account :any current_user :any selected_tab :string id :string, default: nil","ref":"Bonfire.UI.Me.SettingsViewLive.SidebarSettingsLive.html","title":"Bonfire.UI.Me.SettingsViewLive.SidebarSettingsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Me.SettingsViewLive.SidebarSettingsLive.html#render/1","title":"Bonfire.UI.Me.SettingsViewLive.SidebarSettingsLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any selected_tab :string id :string, default: nil","ref":"Bonfire.UI.Me.SettingsViewLive.SidebarSettingsMobileLive.html","title":"Bonfire.UI.Me.SettingsViewLive.SidebarSettingsMobileLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Me.SettingsViewLive.SidebarSettingsMobileLive.html#render/1","title":"Bonfire.UI.Me.SettingsViewLive.SidebarSettingsMobileLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any selected_tab :string id :string, default: nil","ref":"Bonfire.UI.Me.SettingsViewLive.SidebarSettingsNavLive.html","title":"Bonfire.UI.Me.SettingsViewLive.SidebarSettingsNavLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Me.SettingsViewLive.SidebarSettingsNavLive.html#render/1","title":"Bonfire.UI.Me.SettingsViewLive.SidebarSettingsNavLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any selected_tab :string","ref":"Bonfire.UI.Me.SettingsViewsLive.AdminLive.html","title":"Bonfire.UI.Me.SettingsViewsLive.AdminLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Me.SettingsViewsLive.AdminLive.html#render/1","title":"Bonfire.UI.Me.SettingsViewsLive.AdminLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any label :string, default: nil scope :atom, default: nil","ref":"Bonfire.UI.Me.SettingsViewsLive.DiscoverableLive.html","title":"Bonfire.UI.Me.SettingsViewsLive.DiscoverableLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Me.SettingsViewsLive.DiscoverableLive.html#render/1","title":"Bonfire.UI.Me.SettingsViewsLive.DiscoverableLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any selected_tab :string","ref":"Bonfire.UI.Me.SettingsViewsLive.EditAccountLive.html","title":"Bonfire.UI.Me.SettingsViewsLive.EditAccountLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Me.SettingsViewsLive.EditAccountLive.html#render/1","title":"Bonfire.UI.Me.SettingsViewsLive.EditAccountLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any uploads :any selected_tab :string","ref":"Bonfire.UI.Me.SettingsViewsLive.EditProfileLive.html","title":"Bonfire.UI.Me.SettingsViewsLive.EditProfileLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Me.SettingsViewsLive.EditProfileLive.html#render/1","title":"Bonfire.UI.Me.SettingsViewsLive.EditProfileLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any","ref":"Bonfire.UI.Me.SettingsViewsLive.HeaderAsideMobileMenuLive.html","title":"Bonfire.UI.Me.SettingsViewsLive.HeaderAsideMobileMenuLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Me.SettingsViewsLive.HeaderAsideMobileMenuLive.html#render/1","title":"Bonfire.UI.Me.SettingsViewsLive.HeaderAsideMobileMenuLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any selected_tab :string uploads :any","ref":"Bonfire.UI.Me.SettingsViewsLive.InstanceInfoLive.html","title":"Bonfire.UI.Me.SettingsViewsLive.InstanceInfoLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Me.SettingsViewsLive.InstanceInfoLive.html#render/1","title":"Bonfire.UI.Me.SettingsViewsLive.InstanceInfoLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any selected_tab :string","ref":"Bonfire.UI.Me.SettingsViewsLive.PreferencesLive.html","title":"Bonfire.UI.Me.SettingsViewsLive.PreferencesLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Me.SettingsViewsLive.PreferencesLive.html#render/1","title":"Bonfire.UI.Me.SettingsViewsLive.PreferencesLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any selected_tab :string","ref":"Bonfire.UI.Me.SettingsViewsLive.SharedUserLive.html","title":"Bonfire.UI.Me.SettingsViewsLive.SharedUserLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Me.SettingsViewsLive.SharedUserLive.html#render/1","title":"Bonfire.UI.Me.SettingsViewsLive.SharedUserLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any selected_tab :string","ref":"Bonfire.UI.Me.SettingsViewsLive.TermsLive.html","title":"Bonfire.UI.Me.SettingsViewsLive.TermsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Me.SettingsViewsLive.TermsLive.html#render/1","title":"Bonfire.UI.Me.SettingsViewsLive.TermsLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.SignupController.html","title":"Bonfire.UI.Me.SignupController","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.SignupController.html#create/2","title":"Bonfire.UI.Me.SignupController.create/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.SignupController.html#form_cs/1","title":"Bonfire.UI.Me.SignupController.form_cs/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.SignupController.html#index/2","title":"Bonfire.UI.Me.SignupController.index/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.SignupController.html#render_view/3","title":"Bonfire.UI.Me.SignupController.render_view/3","type":"function"},{"doc":"Properties current_account :any current_user :any form :any error :any invite :any auth_second_factor_secret :any, default: nil","ref":"Bonfire.UI.Me.SignupFormLive.html","title":"Bonfire.UI.Me.SignupFormLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Me.SignupFormLive.html#render/1","title":"Bonfire.UI.Me.SignupFormLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_account :any current_user :any","ref":"Bonfire.UI.Me.SignupLive.html","title":"Bonfire.UI.Me.SignupLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Me.SignupLive.html#mount/3","title":"Bonfire.UI.Me.SignupLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Me.SignupLive.html#render/1","title":"Bonfire.UI.Me.SignupLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.SwitchUserController.html","title":"Bonfire.UI.Me.SwitchUserController","type":"module"},{"doc":"A listing of users in the account.","ref":"Bonfire.UI.Me.SwitchUserController.html#index/2","title":"Bonfire.UI.Me.SwitchUserController.index/2","type":"function"},{"doc":"Switch to a user, if permitted.","ref":"Bonfire.UI.Me.SwitchUserController.html#show/2","title":"Bonfire.UI.Me.SwitchUserController.show/2","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_account :any current_user :any","ref":"Bonfire.UI.Me.SwitchUserLive.html","title":"Bonfire.UI.Me.SwitchUserLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Me.SwitchUserLive.html#mount/3","title":"Bonfire.UI.Me.SwitchUserLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Me.SwitchUserLive.html#render/1","title":"Bonfire.UI.Me.SwitchUserLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any current_account_users :any go :any","ref":"Bonfire.UI.Me.SwitchUserViewLive.AccountUsersLive.html","title":"Bonfire.UI.Me.SwitchUserViewLive.AccountUsersLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Me.SwitchUserViewLive.AccountUsersLive.html#render/1","title":"Bonfire.UI.Me.SwitchUserViewLive.AccountUsersLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.Test.ConnHelpers.html","title":"Bonfire.UI.Me.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.Test.FakeHelpers.html","title":"Bonfire.UI.Me.Test.FakeHelpers","type":"module"},{"doc":"Properties current_account :any current_user :any user :map path_prefix :string, default: &quot;/@&quot; go :string, default: nil","ref":"Bonfire.UI.Me.UserPreviewLive.html","title":"Bonfire.UI.Me.UserPreviewLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Me.UserPreviewLive.html#render/1","title":"Bonfire.UI.Me.UserPreviewLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_account :any current_user :any","ref":"Bonfire.UI.Me.UsersDirectoryLive.html","title":"Bonfire.UI.Me.UsersDirectoryLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Me.UsersDirectoryLive.html#mount/3","title":"Bonfire.UI.Me.UsersDirectoryLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Me.UsersDirectoryLive.html#render/1","title":"Bonfire.UI.Me.UsersDirectoryLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any widget_title :string","ref":"Bonfire.UI.Me.WidgetAdminsLive.html","title":"Bonfire.UI.Me.WidgetAdminsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Me.WidgetAdminsLive.html#render/1","title":"Bonfire.UI.Me.WidgetAdminsLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any users :any widget_title :string","ref":"Bonfire.UI.Me.WidgetUsersLive.html","title":"Bonfire.UI.Me.WidgetUsersLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Me.WidgetUsersLive.html#list_admins/0","title":"Bonfire.UI.Me.WidgetUsersLive.list_admins/0","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Me.WidgetUsersLive.html#render/1","title":"Bonfire.UI.Me.WidgetUsersLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Me.WidgetUsersLive.html#users/1","title":"Bonfire.UI.Me.WidgetUsersLive.users/1","type":"function"},{"doc":"Properties current_account :any current_user :any activity :map object :any object_type :any verb :string permalink :string object_type_readable :any showing_within :any hide_reply :boolean viewing_main_object :boolean flagged :any thread_mode :any object_boundary :any, default: nil","ref":"Bonfire.UI.Social.Activity.ActionsLive.html","title":"Bonfire.UI.Social.Activity.ActionsLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.Activity.ActionsLive.html#count/1","title":"Bonfire.UI.Social.Activity.ActionsLive.count/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.ActionsLive.html#render/1","title":"Bonfire.UI.Social.Activity.ActionsLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any object :any","ref":"Bonfire.UI.Social.Activity.CategoryActionsLive.html","title":"Bonfire.UI.Social.Activity.CategoryActionsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.CategoryActionsLive.html#render/1","title":"Bonfire.UI.Social.Activity.CategoryActionsLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any object :any","ref":"Bonfire.UI.Social.Activity.CategoryLive.html","title":"Bonfire.UI.Social.Activity.CategoryLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.Activity.CategoryLive.html#crumb_link/1","title":"Bonfire.UI.Social.Activity.CategoryLive.crumb_link/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.CategoryLive.html#name/1","title":"Bonfire.UI.Social.Activity.CategoryLive.name/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.CategoryLive.html#preloads/0","title":"Bonfire.UI.Social.Activity.CategoryLive.preloads/0","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.CategoryLive.html#render/1","title":"Bonfire.UI.Social.Activity.CategoryLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any object :any object_type :any, default: nil verb :any, default: nil activity :any, default: nil verb_display :string, default: nil permalink :string, default: nil date_ago :string, default: nil showing_within :any, default: nil","ref":"Bonfire.UI.Social.Activity.CharacterLive.html","title":"Bonfire.UI.Social.Activity.CharacterLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.Activity.CharacterLive.html#preloads/0","title":"Bonfire.UI.Social.Activity.CharacterLive.preloads/0","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.CharacterLive.html#render/1","title":"Bonfire.UI.Social.Activity.CharacterLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.CharacterLive.html#the_other/3","title":"Bonfire.UI.Social.Activity.CharacterLive.the_other/3","type":"function"},{"doc":"Properties current_account :any current_user :any object :any verb_display :string date_ago :any viewing_main_object :boolean permalink :string showing_within :string, default: :feed object_type :any object_boundary :any, default: nil","ref":"Bonfire.UI.Social.Activity.DateAgoLive.html","title":"Bonfire.UI.Social.Activity.DateAgoLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.DateAgoLive.html#render/1","title":"Bonfire.UI.Social.Activity.DateAgoLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any activity :map object :map","ref":"Bonfire.UI.Social.Activity.EconomicEventLive.html","title":"Bonfire.UI.Social.Activity.EconomicEventLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.Activity.EconomicEventLive.html#activity_component/1","title":"Bonfire.UI.Social.Activity.EconomicEventLive.activity_component/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.EconomicEventLive.html#maybe_preload_action/1","title":"Bonfire.UI.Social.Activity.EconomicEventLive.maybe_preload_action/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.EconomicEventLive.html#preloads/0","title":"Bonfire.UI.Social.Activity.EconomicEventLive.preloads/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.EconomicEventLive.html#prepare/1","title":"Bonfire.UI.Social.Activity.EconomicEventLive.prepare/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.EconomicEventLive.html#render/1","title":"Bonfire.UI.Social.Activity.EconomicEventLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any object :map","ref":"Bonfire.UI.Social.Activity.EconomicResourceLive.html","title":"Bonfire.UI.Social.Activity.EconomicResourceLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.Activity.EconomicResourceLive.html#preloads/0","title":"Bonfire.UI.Social.Activity.EconomicResourceLive.preloads/0","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.EconomicResourceLive.html#render/1","title":"Bonfire.UI.Social.Activity.EconomicResourceLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any object :any","ref":"Bonfire.UI.Social.Activity.EventActionsLive.html","title":"Bonfire.UI.Social.Activity.EventActionsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.EventActionsLive.html#render/1","title":"Bonfire.UI.Social.Activity.EventActionsLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any object :any, required: true","ref":"Bonfire.UI.Social.Activity.InstanceIconLive.html","title":"Bonfire.UI.Social.Activity.InstanceIconLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.Activity.InstanceIconLive.html#permalink/1","title":"Bonfire.UI.Social.Activity.InstanceIconLive.permalink/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.InstanceIconLive.html#render/1","title":"Bonfire.UI.Social.Activity.InstanceIconLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any object :map, required: true","ref":"Bonfire.UI.Social.Activity.IntentTaskLive.html","title":"Bonfire.UI.Social.Activity.IntentTaskLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.Activity.IntentTaskLive.html#preloads/0","title":"Bonfire.UI.Social.Activity.IntentTaskLive.preloads/0","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.IntentTaskLive.html#render/1","title":"Bonfire.UI.Social.Activity.IntentTaskLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any activity :map object :any object_type :any verb :string permalink :string object_type_readable :any showing_within :any hide_reply :boolean viewing_main_object :boolean flagged :any participants :list object_boundary :any, default: nil","ref":"Bonfire.UI.Social.Activity.MainObjectInfoLive.html","title":"Bonfire.UI.Social.Activity.MainObjectInfoLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.MainObjectInfoLive.html#render/1","title":"Bonfire.UI.Social.Activity.MainObjectInfoLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any media :list, default: [] showing_within :any, default: nil label :string, default: nil","ref":"Bonfire.UI.Social.Activity.MediaLive.html","title":"Bonfire.UI.Social.Activity.MediaLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.Activity.MediaLive.html#as_string/1","title":"Bonfire.UI.Social.Activity.MediaLive.as_string/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.MediaLive.html#description/1","title":"Bonfire.UI.Social.Activity.MediaLive.description/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.MediaLive.html#media_img/1","title":"Bonfire.UI.Social.Activity.MediaLive.media_img/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.MediaLive.html#media_label/1","title":"Bonfire.UI.Social.Activity.MediaLive.media_label/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.MediaLive.html#preview_img/1","title":"Bonfire.UI.Social.Activity.MediaLive.preview_img/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.MediaLive.html#provider/1","title":"Bonfire.UI.Social.Activity.MediaLive.provider/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.MediaLive.html#render/1","title":"Bonfire.UI.Social.Activity.MediaLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any activity :any object :any object_type :any verb :string object_type_readable :any flagged :any showing_within :any, default: :feed Slots extra_items, required: false admin_items, required: false","ref":"Bonfire.UI.Social.Activity.MoreActionsLive.html","title":"Bonfire.UI.Social.Activity.MoreActionsLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.Activity.MoreActionsLive.html#name/2","title":"Bonfire.UI.Social.Activity.MoreActionsLive.name/2","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.MoreActionsLive.html#render/1","title":"Bonfire.UI.Social.Activity.MoreActionsLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.MoreActionsLive.html#subject/2","title":"Bonfire.UI.Social.Activity.MoreActionsLive.subject/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.MoreActionsLive.html#subject_id/2","title":"Bonfire.UI.Social.Activity.MoreActionsLive.subject_id/2","type":"function"},{"doc":"Properties current_account :any current_user :any","ref":"Bonfire.UI.Social.Activity.NoActionsLive.html","title":"Bonfire.UI.Social.Activity.NoActionsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.NoActionsLive.html#render/1","title":"Bonfire.UI.Social.Activity.NoActionsLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any object :any activity :any viewing_main_object :boolean permalink :string date_ago :string showing_within :string activity_inception :any","ref":"Bonfire.UI.Social.Activity.NoteLive.html","title":"Bonfire.UI.Social.Activity.NoteLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.Activity.NoteLive.html#maybe_truncate/3","title":"Bonfire.UI.Social.Activity.NoteLive.maybe_truncate/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.NoteLive.html#post_content/1","title":"Bonfire.UI.Social.Activity.NoteLive.post_content/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.NoteLive.html#preloads/0","title":"Bonfire.UI.Social.Activity.NoteLive.preloads/0","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.NoteLive.html#render/1","title":"Bonfire.UI.Social.Activity.NoteLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any object :any","ref":"Bonfire.UI.Social.Activity.ProcessActionsLive.html","title":"Bonfire.UI.Social.Activity.ProcessActionsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.ProcessActionsLive.html#render/1","title":"Bonfire.UI.Social.Activity.ProcessActionsLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any object :any, required: true showing_within :any process_url :string","ref":"Bonfire.UI.Social.Activity.ProcessListLive.html","title":"Bonfire.UI.Social.Activity.ProcessListLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.Activity.ProcessListLive.html#activity_component/1","title":"Bonfire.UI.Social.Activity.ProcessListLive.activity_component/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.ProcessListLive.html#preloads/0","title":"Bonfire.UI.Social.Activity.ProcessListLive.preloads/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.ProcessListLive.html#prepare/1","title":"Bonfire.UI.Social.Activity.ProcessListLive.prepare/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.ProcessListLive.html#render/1","title":"Bonfire.UI.Social.Activity.ProcessListLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any object :any, required: true showing_within :any","ref":"Bonfire.UI.Social.Activity.ProcessReflowLive.html","title":"Bonfire.UI.Social.Activity.ProcessReflowLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.ProcessReflowLive.html#render/1","title":"Bonfire.UI.Social.Activity.ProcessReflowLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any activity :map object :any date_ago :any permalink :string object_boundary :any, default: nil","ref":"Bonfire.UI.Social.Activity.ProviderReceiverLive.html","title":"Bonfire.UI.Social.Activity.ProviderReceiverLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.Activity.ProviderReceiverLive.html#character/1","title":"Bonfire.UI.Social.Activity.ProviderReceiverLive.character/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.ProviderReceiverLive.html#character/2","title":"Bonfire.UI.Social.Activity.ProviderReceiverLive.character/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.ProviderReceiverLive.html#profile/1","title":"Bonfire.UI.Social.Activity.ProviderReceiverLive.profile/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.ProviderReceiverLive.html#profile/2","title":"Bonfire.UI.Social.Activity.ProviderReceiverLive.profile/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.ProviderReceiverLive.html#provider/1","title":"Bonfire.UI.Social.Activity.ProviderReceiverLive.provider/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Activity.ProviderReceiverLive.html#receiver/1","title":"Bonfire.UI.Social.Activity.ProviderReceiverLive.receiver/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.ProviderReceiverLive.html#render/1","title":"Bonfire.UI.Social.Activity.ProviderReceiverLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any object :any verb_display :string date_ago :any permalink :string object_type :any object_boundary :any, default: nil","ref":"Bonfire.UI.Social.Activity.RepliedDateAgoLive.html","title":"Bonfire.UI.Social.Activity.RepliedDateAgoLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.RepliedDateAgoLive.html#render/1","title":"Bonfire.UI.Social.Activity.RepliedDateAgoLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any object_id :string, required: true activity_id :string permalink :string reply_to_text :any replied :any boost_count :any showing_within :any hide_reply :any thread_mode :any object_boundary :any, default: nil","ref":"Bonfire.UI.Social.Activity.ReplyLive.html","title":"Bonfire.UI.Social.Activity.ReplyLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.Activity.ReplyLive.html#count/1","title":"Bonfire.UI.Social.Activity.ReplyLive.count/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.ReplyLive.html#render/1","title":"Bonfire.UI.Social.Activity.ReplyLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any activity :map, default: nil object :any, default: nil profile :map, default: nil character :map, default: nil date_ago :any, default: nil permalink :string, default: nil verb_display :string, default: nil showing_within :any, default: :feed object_type :any, default: nil object_boundary :any, default: nil activity_inception :any, default: nil viewing_main_object :boolean, default: false","ref":"Bonfire.UI.Social.Activity.SubjectLive.html","title":"Bonfire.UI.Social.Activity.SubjectLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.SubjectLive.html#render/1","title":"Bonfire.UI.Social.Activity.SubjectLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any activity :map object :any verb :string verb_display :string showing_within :any object_boundary :any, default: nil","ref":"Bonfire.UI.Social.Activity.SubjectMinimalLive.html","title":"Bonfire.UI.Social.Activity.SubjectMinimalLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.SubjectMinimalLive.html#render/1","title":"Bonfire.UI.Social.Activity.SubjectMinimalLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any object_type_readable :any, default: nil","ref":"Bonfire.UI.Social.Activity.UnknownLive.html","title":"Bonfire.UI.Social.Activity.UnknownLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.UnknownLive.html#render/1","title":"Bonfire.UI.Social.Activity.UnknownLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any object_id :string permalink :string replied :any","ref":"Bonfire.UI.Social.Activity.ViewThreadLive.html","title":"Bonfire.UI.Social.Activity.ViewThreadLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Activity.ViewThreadLive.html#render/1","title":"Bonfire.UI.Social.Activity.ViewThreadLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_account :any current_user :any activity :map, default: nil object :any, default: nil verb_default :string, default: nil feed_id :any, default: nil viewing_main_object :boolean, default: false activity_inception :string, default: nil showing_within :any, default: :feed hide_reply :boolean, default: false class :string, required: false, default: &quot;&quot; thread_object :any, default: nil url :string, default: nil thread_url :string, default: nil thread_mode :any, default: nil participants :list, default: [] object_boundary :any, default: nil check_object_boundary :boolean, default: false","ref":"Bonfire.UI.Social.ActivityLive.html","title":"Bonfire.UI.Social.ActivityLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#actions_for_object_type/2","title":"Bonfire.UI.Social.ActivityLive.actions_for_object_type/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#component_actions/3","title":"Bonfire.UI.Social.ActivityLive.component_actions/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#component_activity_maybe_creator/2","title":"Bonfire.UI.Social.ActivityLive.component_activity_maybe_creator/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#component_activity_subject/3","title":"Bonfire.UI.Social.ActivityLive.component_activity_subject/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#component_for_object_type/2","title":"Bonfire.UI.Social.ActivityLive.component_for_object_type/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#component_maybe_attachments/2","title":"Bonfire.UI.Social.ActivityLive.component_maybe_attachments/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#component_maybe_creator/1","title":"Bonfire.UI.Social.ActivityLive.component_maybe_creator/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#component_maybe_in_reply_to/3","title":"Bonfire.UI.Social.ActivityLive.component_maybe_in_reply_to/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#component_object/3","title":"Bonfire.UI.Social.ActivityLive.component_object/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#component_show_category_actions/1","title":"Bonfire.UI.Social.ActivityLive.component_show_category_actions/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#component_show_event_actions/1","title":"Bonfire.UI.Social.ActivityLive.component_show_event_actions/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#component_show_process_actions/1","title":"Bonfire.UI.Social.ActivityLive.component_show_process_actions/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#component_show_standard_actions/1","title":"Bonfire.UI.Social.ActivityLive.component_show_standard_actions/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.UI.Social.ActivityLive.html#handle_event/3","title":"Bonfire.UI.Social.ActivityLive.handle_event/3","type":"function"},{"doc":"See Bonfire.UI.Common.LiveHandlers.handle_params/3 .","ref":"Bonfire.UI.Social.ActivityLive.html#handle_params/3","title":"Bonfire.UI.Social.ActivityLive.handle_params/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#load_reply_to/1","title":"Bonfire.UI.Social.ActivityLive.load_reply_to/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.UI.Social.ActivityLive.html#mount/1","title":"Bonfire.UI.Social.ActivityLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.preload/1 .","ref":"Bonfire.UI.Social.ActivityLive.html#preload/1","title":"Bonfire.UI.Social.ActivityLive.preload/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ActivityLive.html#prepare/1","title":"Bonfire.UI.Social.ActivityLive.prepare/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Social.ActivityLive.html#render/1","title":"Bonfire.UI.Social.ActivityLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.UI.Social.ActivityLive.html#update/2","title":"Bonfire.UI.Social.ActivityLive.update/2","type":"function"},{"doc":"Properties current_account :any current_user :any activity :any","ref":"Bonfire.UI.Social.BannerPreviousThreadLive.html","title":"Bonfire.UI.Social.BannerPreviousThreadLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.BannerPreviousThreadLive.html#render/1","title":"Bonfire.UI.Social.BannerPreviousThreadLive.render/1","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.UI.Social.ChannelCase.html","title":"Bonfire.UI.Social.ChannelCase","type":"module"},{"doc":"Properties current_account :any current_user :any comment :map activity :map, default: %{} object :any, default: %{} thread_object :any thread_level :any child_replies :any thread_id :any feed_id :any, default: nil sub_replies_count :integer, default: 0 url :string thread_mode :any showing_within :any, default: :thread page :any, default: &quot;thread&quot; create_activity_type :atom, default: nil","ref":"Bonfire.UI.Social.CommentLive.html","title":"Bonfire.UI.Social.CommentLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.CommentLive.html#activity/1","title":"Bonfire.UI.Social.CommentLive.activity/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.CommentLive.html#render/1","title":"Bonfire.UI.Social.CommentLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.CommentLive.html#sub_replies_count/1","title":"Bonfire.UI.Social.CommentLive.sub_replies_count/1","type":"function"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.UI.Social.ConnCase.html","title":"Bonfire.UI.Social.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.UI.Social.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.UI.Social.DataCase.html","title":"Bonfire.UI.Social.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.UI.Social.DataCase.html#errors_on/1","title":"Bonfire.UI.Social.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.DataHelpers.html","title":"Bonfire.UI.Social.DataHelpers","type":"module"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_account :any current_user :any","ref":"Bonfire.UI.Social.DiscussionLive.html","title":"Bonfire.UI.Social.DiscussionLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.DiscussionLive.html#do_handle_params/3","title":"Bonfire.UI.Social.DiscussionLive.do_handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.UI.Social.DiscussionLive.html#handle_event/3","title":"Bonfire.UI.Social.DiscussionLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.UI.Social.DiscussionLive.html#handle_info/2","title":"Bonfire.UI.Social.DiscussionLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.UI.Social.DiscussionLive.html#handle_params/3","title":"Bonfire.UI.Social.DiscussionLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Social.DiscussionLive.html#mount/3","title":"Bonfire.UI.Social.DiscussionLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Social.DiscussionLive.html#render/1","title":"Bonfire.UI.Social.DiscussionLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_account :any current_user :any feed_id :string, default: nil feed_ids :any, default: nil feed :list page_info :any feedback_title :string, default: nil feedback_message :string, default: nil showing_within :any, default: :feed feed_update_mode :string, default: &quot;append&quot; hide_load_more :boolean, default: false verb_default :string, default: nil loading :boolean, default: false preload :atom, default: :feed page :string, default: nil page_title :string, required: true feed_title :string, default: nil","ref":"Bonfire.UI.Social.FeedLive.html","title":"Bonfire.UI.Social.FeedLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.UI.Social.FeedLive.html#handle_event/3","title":"Bonfire.UI.Social.FeedLive.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.FeedLive.html#handle_info/2","title":"Bonfire.UI.Social.FeedLive.handle_info/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.FeedLive.html#maybe_subscribe/1","title":"Bonfire.UI.Social.FeedLive.maybe_subscribe/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.UI.Social.FeedLive.html#mount/1","title":"Bonfire.UI.Social.FeedLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Social.FeedLive.html#render/1","title":"Bonfire.UI.Social.FeedLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.UI.Social.FeedLive.html#update/2","title":"Bonfire.UI.Social.FeedLive.update/2","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_account :any current_user :any","ref":"Bonfire.UI.Social.Feeds.FederationLive.html","title":"Bonfire.UI.Social.Feeds.FederationLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.UI.Social.Feeds.FederationLive.html#handle_event/3","title":"Bonfire.UI.Social.Feeds.FederationLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.UI.Social.Feeds.FederationLive.html#handle_info/2","title":"Bonfire.UI.Social.Feeds.FederationLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.UI.Social.Feeds.FederationLive.html#handle_params/3","title":"Bonfire.UI.Social.Feeds.FederationLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Social.Feeds.FederationLive.html#mount/3","title":"Bonfire.UI.Social.Feeds.FederationLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Social.Feeds.FederationLive.html#render/1","title":"Bonfire.UI.Social.Feeds.FederationLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_account :any current_user :any","ref":"Bonfire.UI.Social.Feeds.LikesLive.html","title":"Bonfire.UI.Social.Feeds.LikesLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.UI.Social.Feeds.LikesLive.html#handle_event/3","title":"Bonfire.UI.Social.Feeds.LikesLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.UI.Social.Feeds.LikesLive.html#handle_info/2","title":"Bonfire.UI.Social.Feeds.LikesLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.UI.Social.Feeds.LikesLive.html#handle_params/3","title":"Bonfire.UI.Social.Feeds.LikesLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Social.Feeds.LikesLive.html#mount/3","title":"Bonfire.UI.Social.Feeds.LikesLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Social.Feeds.LikesLive.html#render/1","title":"Bonfire.UI.Social.Feeds.LikesLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_account :any current_user :any","ref":"Bonfire.UI.Social.Feeds.LocalLive.html","title":"Bonfire.UI.Social.Feeds.LocalLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.UI.Social.Feeds.LocalLive.html#handle_event/3","title":"Bonfire.UI.Social.Feeds.LocalLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.UI.Social.Feeds.LocalLive.html#handle_info/2","title":"Bonfire.UI.Social.Feeds.LocalLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.UI.Social.Feeds.LocalLive.html#handle_params/3","title":"Bonfire.UI.Social.Feeds.LocalLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Social.Feeds.LocalLive.html#mount/3","title":"Bonfire.UI.Social.Feeds.LocalLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Social.Feeds.LocalLive.html#render/1","title":"Bonfire.UI.Social.Feeds.LocalLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_account :any current_user :any","ref":"Bonfire.UI.Social.Feeds.NotificationsLive.html","title":"Bonfire.UI.Social.Feeds.NotificationsLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.UI.Social.Feeds.NotificationsLive.html#handle_event/3","title":"Bonfire.UI.Social.Feeds.NotificationsLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.UI.Social.Feeds.NotificationsLive.html#handle_info/2","title":"Bonfire.UI.Social.Feeds.NotificationsLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.UI.Social.Feeds.NotificationsLive.html#handle_params/3","title":"Bonfire.UI.Social.Feeds.NotificationsLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Social.Feeds.NotificationsLive.html#mount/3","title":"Bonfire.UI.Social.Feeds.NotificationsLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Social.Feeds.NotificationsLive.html#render/1","title":"Bonfire.UI.Social.Feeds.NotificationsLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any activity :map object :any object_type :any verb :string permalink :string showing_within :any hide_reply :boolean viewing_main_object :boolean object_type_readable :any flagged :any","ref":"Bonfire.UI.Social.FlaggedActionsLive.html","title":"Bonfire.UI.Social.FlaggedActionsLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.FlaggedActionsLive.html#flagged_character/1","title":"Bonfire.UI.Social.FlaggedActionsLive.flagged_character/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.FlaggedActionsLive.html#flagged_profile/1","title":"Bonfire.UI.Social.FlaggedActionsLive.flagged_profile/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.FlaggedActionsLive.html#render/1","title":"Bonfire.UI.Social.FlaggedActionsLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_account :any current_user :any page_title :string, default: &quot;Flags&quot; feed :list, default: [] page_info :list, default: [] test :string","ref":"Bonfire.UI.Social.FlagsLive.html","title":"Bonfire.UI.Social.FlagsLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.UI.Social.FlagsLive.html#handle_event/3","title":"Bonfire.UI.Social.FlagsLive.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.FlagsLive.html#handle_info/2","title":"Bonfire.UI.Social.FlagsLive.handle_info/2","type":"function"},{"doc":"See Bonfire.UI.Common.LiveHandlers.handle_params/3 .","ref":"Bonfire.UI.Social.FlagsLive.html#handle_params/3","title":"Bonfire.UI.Social.FlagsLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.UI.Social.FlagsLive.html#mount/1","title":"Bonfire.UI.Social.FlagsLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Social.FlagsLive.html#render/1","title":"Bonfire.UI.Social.FlagsLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.UI.Social.FlagsLive.html#update/2","title":"Bonfire.UI.Social.FlagsLive.update/2","type":"function"},{"doc":"Properties current_account :any current_user :any page :string, required: true","ref":"Bonfire.UI.Social.HeaderAsideFeedsLive.html","title":"Bonfire.UI.Social.HeaderAsideFeedsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.HeaderAsideFeedsLive.html#render/1","title":"Bonfire.UI.Social.HeaderAsideFeedsLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any feed_id :string, required: true","ref":"Bonfire.UI.Social.HeaderAsideNotificationsSeenLive.html","title":"Bonfire.UI.Social.HeaderAsideNotificationsSeenLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.HeaderAsideNotificationsSeenLive.html#render/1","title":"Bonfire.UI.Social.HeaderAsideNotificationsSeenLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_account :any current_user :any","ref":"Bonfire.UI.Social.HomeLive.html","title":"Bonfire.UI.Social.HomeLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.HomeLive.html#do_handle_params/3","title":"Bonfire.UI.Social.HomeLive.do_handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.UI.Social.HomeLive.html#handle_event/3","title":"Bonfire.UI.Social.HomeLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.UI.Social.HomeLive.html#handle_info/2","title":"Bonfire.UI.Social.HomeLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.UI.Social.HomeLive.html#handle_params/3","title":"Bonfire.UI.Social.HomeLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Social.HomeLive.html#mount/3","title":"Bonfire.UI.Social.HomeLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Social.HomeLive.html#render/1","title":"Bonfire.UI.Social.HomeLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Integration.html","title":"Bonfire.UI.Social.Integration","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.Integration.html#is_admin?/1","title":"Bonfire.UI.Social.Integration.is_admin?/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Integration.html#mailer/0","title":"Bonfire.UI.Social.Integration.mailer/0","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Integration.html#repo/0","title":"Bonfire.UI.Social.Integration.repo/0","type":"function"},{"doc":"Properties current_account :any current_user :any page_info :map","ref":"Bonfire.UI.Social.LoadPreviousLive.html","title":"Bonfire.UI.Social.LoadPreviousLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.LoadPreviousLive.html#render/1","title":"Bonfire.UI.Social.LoadPreviousLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any threads :any thread_id :string tab_id :string context :any, default: nil showing_within :string, default: nil users :list","ref":"Bonfire.UI.Social.MessageThreadsLive.html","title":"Bonfire.UI.Social.MessageThreadsLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.MessageThreadsLive.html#permalink/2","title":"Bonfire.UI.Social.MessageThreadsLive.permalink/2","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.MessageThreadsLive.html#render/1","title":"Bonfire.UI.Social.MessageThreadsLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_account :any current_user :any","ref":"Bonfire.UI.Social.MessagesLive.html","title":"Bonfire.UI.Social.MessagesLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.MessagesLive.html#do_handle_params/3","title":"Bonfire.UI.Social.MessagesLive.do_handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.UI.Social.MessagesLive.html#handle_event/3","title":"Bonfire.UI.Social.MessagesLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.UI.Social.MessagesLive.html#handle_info/2","title":"Bonfire.UI.Social.MessagesLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.UI.Social.MessagesLive.html#handle_params/3","title":"Bonfire.UI.Social.MessagesLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Social.MessagesLive.html#mount/3","title":"Bonfire.UI.Social.MessagesLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Social.MessagesLive.html#render/1","title":"Bonfire.UI.Social.MessagesLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any page_title :string, default: nil participants :any, default: [] thread_id :string, default: nil label :string, default: nil object :any category_suggestions :list, default: []","ref":"Bonfire.UI.Social.ObjectHeaderAsideLive.html","title":"Bonfire.UI.Social.ObjectHeaderAsideLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.ObjectHeaderAsideLive.html#render/1","title":"Bonfire.UI.Social.ObjectHeaderAsideLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any object_id :string, default: nil post_id :string, default: nil object :any, default: nil page :string, default: nil page_title :string, default: nil show_reply_input :boolean, default: false search_placeholder :string, default: nil create_activity_type :atom, default: nil to_boundaries :list, default: nil to_circles :list, default: nil smart_input_prompt :string, default: nil smart_input_text :string, default: nil reply_to_id :string, default: nil thread_id :string, default: nil feed_id :any, default: nil activity :any, default: nil showing_within :any, default: :thread url :string, default: nil thread_mode :any, default: nil reverse_order :any, default: nil participants :any, default: [] textarea_class :css_class, default: nil replied_activity_class :css_class, default: nil replies :any, default: nil threaded_replies :any, default: nil page_info :any, default: nil","ref":"Bonfire.UI.Social.ObjectThreadLive.html","title":"Bonfire.UI.Social.ObjectThreadLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.ObjectThreadLive.html#render/1","title":"Bonfire.UI.Social.ObjectThreadLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_account :any current_user :any","ref":"Bonfire.UI.Social.PostLive.html","title":"Bonfire.UI.Social.PostLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.PostLive.html#do_handle_params/3","title":"Bonfire.UI.Social.PostLive.do_handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.UI.Social.PostLive.html#handle_event/3","title":"Bonfire.UI.Social.PostLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.UI.Social.PostLive.html#handle_info/2","title":"Bonfire.UI.Social.PostLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.UI.Social.PostLive.html#handle_params/3","title":"Bonfire.UI.Social.PostLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Social.PostLive.html#mount/3","title":"Bonfire.UI.Social.PostLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Social.PostLive.html#render/1","title":"Bonfire.UI.Social.PostLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any page_title :string, required: true page :string, required: true selected_tab :string, default: &quot;boosts&quot; smart_input :boolean, required: true smart_input_prompt :string smart_input_text :string search_placeholder :string feed_title :string user :map feed :list page_info :any follows_me :boolean, default: false loading :boolean, default: false Slots header","ref":"Bonfire.UI.Social.ProfileBoostsLive.html","title":"Bonfire.UI.Social.ProfileBoostsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.ProfileBoostsLive.html#render/1","title":"Bonfire.UI.Social.ProfileBoostsLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any user :map selected_tab :string feed :list page_info :any","ref":"Bonfire.UI.Social.ProfileFollowsLive.html","title":"Bonfire.UI.Social.ProfileFollowsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.ProfileFollowsLive.html#render/1","title":"Bonfire.UI.Social.ProfileFollowsLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any page_title :string, required: true page :string, required: true selected_tab :string, default: &quot;posts&quot; smart_input :boolean, required: true smart_input_prompt :string smart_input_text :string search_placeholder :string feed_title :string user :map feed :list page_info :any follows_me :boolean, default: false loading :boolean, default: false Slots header","ref":"Bonfire.UI.Social.ProfilePostsLive.html","title":"Bonfire.UI.Social.ProfilePostsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.ProfilePostsLive.html#render/1","title":"Bonfire.UI.Social.ProfilePostsLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any page_title :string, required: true page :string, required: true selected_tab :string, default: &quot;timeline&quot; smart_input :boolean, required: true smart_input_prompt :string smart_input_text :string search_placeholder :string feed_title :string user :map feed :list page_info :any follows_me :boolean, default: false loading :boolean, default: false Slots header","ref":"Bonfire.UI.Social.ProfileTimelineLive.html","title":"Bonfire.UI.Social.ProfileTimelineLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.ProfileTimelineLive.html#render/1","title":"Bonfire.UI.Social.ProfileTimelineLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Routes.html","title":"Bonfire.UI.Social.Routes","type":"module"},{"doc":"Properties current_account :any current_user :any","ref":"Bonfire.UI.Social.SetCWLive.html","title":"Bonfire.UI.Social.SetCWLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SetCWLive.html#render/1","title":"Bonfire.UI.Social.SetCWLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any scope :atom, default: nil key :any label :string, default: nil force_checked :boolean, default: false force_unchecked :boolean, default: false disabled :boolean, default: false","ref":"Bonfire.UI.Social.Settings.MyFeedItemLive.html","title":"Bonfire.UI.Social.Settings.MyFeedItemLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Settings.MyFeedItemLive.html#render/1","title":"Bonfire.UI.Social.Settings.MyFeedItemLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any title :string scope :atom, default: nil","ref":"Bonfire.UI.Social.Settings.MyFeedItemsLive.html","title":"Bonfire.UI.Social.Settings.MyFeedItemsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.Settings.MyFeedItemsLive.html#render/1","title":"Bonfire.UI.Social.Settings.MyFeedItemsLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any threads :any context :any, default: nil thread_id :string","ref":"Bonfire.UI.Social.SidebarMessagesMobileLive.html","title":"Bonfire.UI.Social.SidebarMessagesMobileLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.SidebarMessagesMobileLive.html#permalink/2","title":"Bonfire.UI.Social.SidebarMessagesMobileLive.permalink/2","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.SidebarMessagesMobileLive.html#render/1","title":"Bonfire.UI.Social.SidebarMessagesMobileLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Test.ConnHelpers.html","title":"Bonfire.UI.Social.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.Test.FakeHelpers.html","title":"Bonfire.UI.Social.Test.FakeHelpers","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.Test.FakeHelpers.html#post_attrs/1","title":"Bonfire.UI.Social.Test.FakeHelpers.post_attrs/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Test.FakeHelpers.html#post_attrs/2","title":"Bonfire.UI.Social.Test.FakeHelpers.post_attrs/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.Test.FakeHelpers.html#publish_multiple_times/4","title":"Bonfire.UI.Social.Test.FakeHelpers.publish_multiple_times/4","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_account :any current_user :any replies :any, default: nil threaded_replies :any, default: nil page_info :any activity :any object :any reply_to_id :any thread_id :any page :any, default: &quot;thread&quot; feed_id :any, default: nil create_activity_type :atom, default: nil to_boundaries :list to_circles :list url :string smart_input_prompt :string smart_input_text :string thread_mode :any reverse_order :any showing_within :any, default: :thread loading :boolean, default: false","ref":"Bonfire.UI.Social.ThreadLive.html","title":"Bonfire.UI.Social.ThreadLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.UI.Social.ThreadLive.html#handle_event/3","title":"Bonfire.UI.Social.ThreadLive.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.ThreadLive.html#handle_info/2","title":"Bonfire.UI.Social.ThreadLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.UI.Social.ThreadLive.html#mount/1","title":"Bonfire.UI.Social.ThreadLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.UI.Social.ThreadLive.html#render/1","title":"Bonfire.UI.Social.ThreadLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.UI.Social.ThreadLive.html#update/2","title":"Bonfire.UI.Social.ThreadLive.update/2","type":"function"},{"doc":"Properties current_account :any current_user :any uploads :any","ref":"Bonfire.UI.Social.UploadPreviewsLive.html","title":"Bonfire.UI.Social.UploadPreviewsLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.UploadPreviewsLive.html#error_to_string/1","title":"Bonfire.UI.Social.UploadPreviewsLive.error_to_string/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.UploadPreviewsLive.html#render/1","title":"Bonfire.UI.Social.UploadPreviewsLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any widget_title :string","ref":"Bonfire.UI.Social.WidgetMessagesLive.html","title":"Bonfire.UI.Social.WidgetMessagesLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.WidgetMessagesLive.html#feed/1","title":"Bonfire.UI.Social.WidgetMessagesLive.feed/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.WidgetMessagesLive.html#render/1","title":"Bonfire.UI.Social.WidgetMessagesLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any widget_title :string","ref":"Bonfire.UI.Social.WidgetNotificationLive.html","title":"Bonfire.UI.Social.WidgetNotificationLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.WidgetNotificationLive.html#load/1","title":"Bonfire.UI.Social.WidgetNotificationLive.load/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.WidgetNotificationLive.html#render/1","title":"Bonfire.UI.Social.WidgetNotificationLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any widget_title :string","ref":"Bonfire.UI.Social.WidgetTagsLive.html","title":"Bonfire.UI.Social.WidgetTagsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.WidgetTagsLive.html#render/1","title":"Bonfire.UI.Social.WidgetTagsLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any widget_title :string page :string","ref":"Bonfire.UI.Social.WidgetTimelinesLive.html","title":"Bonfire.UI.Social.WidgetTimelinesLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.WidgetTimelinesLive.html#render/1","title":"Bonfire.UI.Social.WidgetTimelinesLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any field_name :string, default: &quot;post[post_content][html_body]&quot;, required: false create_activity_type :atom, default: nil smart_input_prompt :string, default: &quot;&quot; smart_input_text :string, default: &quot;&quot;, required: false showing_within :string, default: nil with_rich_editor :boolean, default: true, required: false insert_text :string, default: nil thread_mode :atom, default: nil textarea_class :css_class, default: nil boundaries_modal_id :string, default: :sidebar_composer","ref":"Bonfire.UI.Social.WriteEditorLive.html","title":"Bonfire.UI.Social.WriteEditorLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.WriteEditorLive.html#render/1","title":"Bonfire.UI.Social.WriteEditorLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.WriteEditorLive.html#rich_editor_module/2","title":"Bonfire.UI.Social.WriteEditorLive.rich_editor_module/2","type":"function"},{"doc":"","ref":"Bonfire.UI.Social.WriteEditorLive.html#use_rich_editor?/2","title":"Bonfire.UI.Social.WriteEditorLive.use_rich_editor?/2","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_account :any current_user :any","ref":"Bonfire.UI.Social.WriteLive.html","title":"Bonfire.UI.Social.WriteLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.UI.Social.WriteLive.html#handle_event/3","title":"Bonfire.UI.Social.WriteLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.UI.Social.WriteLive.html#handle_info/2","title":"Bonfire.UI.Social.WriteLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.UI.Social.WriteLive.html#mount/3","title":"Bonfire.UI.Social.WriteLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.UI.Social.WriteLive.html#render/1","title":"Bonfire.UI.Social.WriteLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any reply_to_id :string, default: nil thread_id :string, default: nil create_activity_type :atom, default: nil to_boundaries :list, default: [] to_circles :list, default: nil smart_input_prompt :string, default: nil smart_input_text :string, required: false showing_within :string, default: nil with_rich_editor :boolean, default: true, required: false insert_text :string, default: nil preloaded_recipients :any, default: nil uploads :any, default: nil thread_mode :atom, default: nil uploaded_files :list, default: nil title_prompt :string, default: nil show_select_recipients :boolean, default: false open_boundaries :boolean, default: false boundaries_modal_id :string, default: :sidebar_composer textarea_container_class :css_class textarea_container_class_alpine :string textarea_class :css_class replied_activity_class :css_class","ref":"Bonfire.UI.Social.WritePostContentLive.html","title":"Bonfire.UI.Social.WritePostContentLive","type":"module"},{"doc":"","ref":"Bonfire.UI.Social.WritePostContentLive.html#handler/1","title":"Bonfire.UI.Social.WritePostContentLive.handler/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.UI.Social.WritePostContentLive.html#render/1","title":"Bonfire.UI.Social.WritePostContentLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html","title":"Bonfire.API.GraphQL","type":"module"},{"doc":"","ref":"Bonfire.API.GraphQL.html#admin_or/2","title":"Bonfire.API.GraphQL.admin_or/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#admin_or_empty_page/1","title":"Bonfire.API.GraphQL.admin_or_empty_page/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#admin_or_not_permitted/1","title":"Bonfire.API.GraphQL.admin_or_not_permitted/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#cast_int_ulid_id/1","title":"Bonfire.API.GraphQL.cast_int_ulid_id/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#cast_nonnegint/1","title":"Bonfire.API.GraphQL.cast_nonnegint/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#cast_posint/1","title":"Bonfire.API.GraphQL.cast_posint/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#cast_ulid/1","title":"Bonfire.API.GraphQL.cast_ulid/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#current_account/1","title":"Bonfire.API.GraphQL.current_account/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#current_user/1","title":"Bonfire.API.GraphQL.current_user/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#current_user_or/2","title":"Bonfire.API.GraphQL.current_user_or/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#current_user_or_empty_page/1","title":"Bonfire.API.GraphQL.current_user_or_empty_page/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#current_user_or_not_found/1","title":"Bonfire.API.GraphQL.current_user_or_not_found/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#current_user_or_not_logged_in/1","title":"Bonfire.API.GraphQL.current_user_or_not_logged_in/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#empty_page/0","title":"Bonfire.API.GraphQL.empty_page/0","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#equals_or/4","title":"Bonfire.API.GraphQL.equals_or/4","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#equals_or_not_permitted/2","title":"Bonfire.API.GraphQL.equals_or_not_permitted/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#full_page_opts/3","title":"Bonfire.API.GraphQL.full_page_opts/3","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#guest_only/1","title":"Bonfire.API.GraphQL.guest_only/1","type":"function"},{"doc":"Are we in a list (recursively)?","ref":"Bonfire.API.GraphQL.html#in_list?/1","title":"Bonfire.API.GraphQL.in_list?/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#invalid_credential/0","title":"Bonfire.API.GraphQL.invalid_credential/0","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#is_authenticated/1","title":"Bonfire.API.GraphQL.is_authenticated/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#limit_page_opts/2","title":"Bonfire.API.GraphQL.limit_page_opts/2","type":"function"},{"doc":"How many lists are we in (recursively)?","ref":"Bonfire.API.GraphQL.html#list_depth/1","title":"Bonfire.API.GraphQL.list_depth/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#not_found/0","title":"Bonfire.API.GraphQL.not_found/0","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#not_in_list_or/2","title":"Bonfire.API.GraphQL.not_in_list_or/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#not_in_list_or_empty_page/1","title":"Bonfire.API.GraphQL.not_in_list_or_empty_page/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#not_logged_in/0","title":"Bonfire.API.GraphQL.not_logged_in/0","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#not_permitted/1","title":"Bonfire.API.GraphQL.not_permitted/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#parent_name/1","title":"Bonfire.API.GraphQL.parent_name/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#predicated/1","title":"Bonfire.API.GraphQL.predicated/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#predicated/2","title":"Bonfire.API.GraphQL.predicated/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#reproject/2","title":"Bonfire.API.GraphQL.reproject/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#reverse_path/1","title":"Bonfire.API.GraphQL.reverse_path/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#validate_cursor/2","title":"Bonfire.API.GraphQL.validate_cursor/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.html#wanted/2","title":"Bonfire.API.GraphQL.wanted/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Auth.html","title":"Bonfire.API.GraphQL.Auth","type":"module"},{"doc":"","ref":"Bonfire.API.GraphQL.Auth.html#account_by/1","title":"Bonfire.API.GraphQL.Auth.account_by/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Auth.html#build_context/1","title":"Bonfire.API.GraphQL.Auth.build_context/1","type":"function"},{"doc":"Resolver for login mutation for Bonfire.API.GraphQL.CommonSchema","ref":"Bonfire.API.GraphQL.Auth.html#login/3","title":"Bonfire.API.GraphQL.Auth.login/3","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Auth.html#select_user/3","title":"Bonfire.API.GraphQL.Auth.select_user/3","type":"function"},{"doc":"Puts the account/user data in Absinthe context (runs after on login/3 resolver)","ref":"Bonfire.API.GraphQL.Auth.html#set_context_from_resolution/2","title":"Bonfire.API.GraphQL.Auth.set_context_from_resolution/2","type":"function"},{"doc":"Sets session cookie based on the Absinthe context set in set_context_from_resolution/2 (called from router's absinthe_before_send/2 )","ref":"Bonfire.API.GraphQL.Auth.html#set_session_from_context/2","title":"Bonfire.API.GraphQL.Auth.set_session_from_context/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Auth.html#token_new/1","title":"Bonfire.API.GraphQL.Auth.token_new/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Auth.html#token_verify/1","title":"Bonfire.API.GraphQL.Auth.token_verify/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Auth.html#user_by/1","title":"Bonfire.API.GraphQL.Auth.user_by/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Auth.html#user_by/2","title":"Bonfire.API.GraphQL.Auth.user_by/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Auth.html#username/1","title":"Bonfire.API.GraphQL.Auth.username/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.CommonResolver.html","title":"Bonfire.API.GraphQL.CommonResolver","type":"module"},{"doc":"Returns the canonical url for a thing or character","ref":"Bonfire.API.GraphQL.CommonResolver.html#canonical_url_edge/3","title":"Bonfire.API.GraphQL.CommonResolver.canonical_url_edge/3","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.CommonResolver.html#context_edge/3","title":"Bonfire.API.GraphQL.CommonResolver.context_edge/3","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.CommonResolver.html#context_edges/3","title":"Bonfire.API.GraphQL.CommonResolver.context_edges/3","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.CommonResolver.html#created_at_edge/3","title":"Bonfire.API.GraphQL.CommonResolver.created_at_edge/3","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.CommonResolver.html#delete/2","title":"Bonfire.API.GraphQL.CommonResolver.delete/2","type":"function"},{"doc":"Returns the username for a character","ref":"Bonfire.API.GraphQL.CommonResolver.html#display_username_edge/3","title":"Bonfire.API.GraphQL.CommonResolver.display_username_edge/3","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.CommonResolver.html#fetch_context_edge/2","title":"Bonfire.API.GraphQL.CommonResolver.fetch_context_edge/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.CommonResolver.html#fetch_context_edges/3","title":"Bonfire.API.GraphQL.CommonResolver.fetch_context_edges/3","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.CommonResolver.html#is_deleted_edge/3","title":"Bonfire.API.GraphQL.CommonResolver.is_deleted_edge/3","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.CommonResolver.html#is_disabled_edge/3","title":"Bonfire.API.GraphQL.CommonResolver.is_disabled_edge/3","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.CommonResolver.html#is_hidden_edge/3","title":"Bonfire.API.GraphQL.CommonResolver.is_hidden_edge/3","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.CommonResolver.html#is_local_edge/3","title":"Bonfire.API.GraphQL.CommonResolver.is_local_edge/3","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.CommonResolver.html#is_public_edge/3","title":"Bonfire.API.GraphQL.CommonResolver.is_public_edge/3","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.CommonSchema.html","title":"Bonfire.API.GraphQL.CommonSchema","type":"module"},{"doc":"","ref":"Bonfire.API.GraphQL.Cursor.html","title":"Bonfire.API.GraphQL.Cursor","type":"module"},{"doc":"","ref":"Bonfire.API.GraphQL.DevTools.html","title":"Bonfire.API.GraphQL.DevTools","type":"module"},{"doc":"","ref":"Bonfire.API.GraphQL.DevTools.html#schema/2","title":"Bonfire.API.GraphQL.DevTools.schema/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.DevTools.html#sdl/0","title":"Bonfire.API.GraphQL.DevTools.sdl/0","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.FetchFields.html","title":"Bonfire.API.GraphQL.FetchFields","type":"module"},{"doc":"","ref":"Bonfire.API.GraphQL.FetchFields.html#run/1","title":"Bonfire.API.GraphQL.FetchFields.run/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.FetchFields.html#t:t/0","title":"Bonfire.API.GraphQL.FetchFields.t/0","type":"type"},{"doc":"","ref":"Bonfire.API.GraphQL.FetchPage.html","title":"Bonfire.API.GraphQL.FetchPage","type":"module"},{"doc":"","ref":"Bonfire.API.GraphQL.FetchPage.html#run/1","title":"Bonfire.API.GraphQL.FetchPage.run/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.FetchPage.html#t:t/0","title":"Bonfire.API.GraphQL.FetchPage.t/0","type":"type"},{"doc":"","ref":"Bonfire.API.GraphQL.FetchPages.html","title":"Bonfire.API.GraphQL.FetchPages","type":"module"},{"doc":"","ref":"Bonfire.API.GraphQL.FetchPages.html#run/1","title":"Bonfire.API.GraphQL.FetchPages.run/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.FetchPages.html#t:t/0","title":"Bonfire.API.GraphQL.FetchPages.t/0","type":"type"},{"doc":"","ref":"Bonfire.API.GraphQL.Fields.html","title":"Bonfire.API.GraphQL.Fields","type":"module"},{"doc":"Returns the result corresponding to the given key, or the given default (or nil).","ref":"Bonfire.API.GraphQL.Fields.html#get/3","title":"Bonfire.API.GraphQL.Fields.get/3","type":"function"},{"doc":"Returns a post-batch callback function which calls get with the provided key and optional default value (or nil).","ref":"Bonfire.API.GraphQL.Fields.html#getter/2","title":"Bonfire.API.GraphQL.Fields.getter/2","type":"function"},{"doc":"Creates a new Fields from the data and a grouping function","ref":"Bonfire.API.GraphQL.Fields.html#new/2","title":"Bonfire.API.GraphQL.Fields.new/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Fields.html#new/3","title":"Bonfire.API.GraphQL.Fields.new/3","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Fields.html#t:t/0","title":"Bonfire.API.GraphQL.Fields.t/0","type":"type"},{"doc":"The Json scalar type allows arbitrary JSON values to be passed in and out. Requires { :jason, &quot;~&gt; 1.1&quot; } package: https://github.com/michalmuskala/jason","ref":"Bonfire.API.GraphQL.JSON.html","title":"Bonfire.API.GraphQL.JSON","type":"module"},{"doc":"","ref":"Bonfire.API.GraphQL.Middleware.CollapseErrors.html","title":"Bonfire.API.GraphQL.Middleware.CollapseErrors","type":"module"},{"doc":"Callback implementation for Absinthe.Middleware.call/2 .","ref":"Bonfire.API.GraphQL.Middleware.CollapseErrors.html#call/2","title":"Bonfire.API.GraphQL.Middleware.CollapseErrors.call/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Middleware.CollapseErrors.html#collapse/1","title":"Bonfire.API.GraphQL.Middleware.CollapseErrors.collapse/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Middleware.CollapseErrors.html#collapse/2","title":"Bonfire.API.GraphQL.Middleware.CollapseErrors.collapse/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Middleware.Debug.html","title":"Bonfire.API.GraphQL.Middleware.Debug","type":"module"},{"doc":"","ref":"Bonfire.API.GraphQL.Middleware.Debug.html#call/2","title":"Bonfire.API.GraphQL.Middleware.Debug.call/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Middleware.RenderLists.html","title":"Bonfire.API.GraphQL.Middleware.RenderLists","type":"module"},{"doc":"Callback implementation for Absinthe.Middleware.call/2 .","ref":"Bonfire.API.GraphQL.Middleware.RenderLists.html#call/2","title":"Bonfire.API.GraphQL.Middleware.RenderLists.call/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Middleware.RenderLists.html#collapse/1","title":"Bonfire.API.GraphQL.Middleware.RenderLists.collapse/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Page.html","title":"Bonfire.API.GraphQL.Page","type":"module"},{"doc":"","ref":"Bonfire.API.GraphQL.Page.html#new/4","title":"Bonfire.API.GraphQL.Page.new/4","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Page.html#t:t/0","title":"Bonfire.API.GraphQL.Page.t/0","type":"type"},{"doc":"Information about this page's relation to a larger result set","ref":"Bonfire.API.GraphQL.PageInfo.html","title":"Bonfire.API.GraphQL.PageInfo","type":"module"},{"doc":"","ref":"Bonfire.API.GraphQL.PageInfo.html#new/4","title":"Bonfire.API.GraphQL.PageInfo.new/4","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.PageInfo.html#t:t/0","title":"Bonfire.API.GraphQL.PageInfo.t/0","type":"type"},{"doc":"","ref":"Bonfire.API.GraphQL.Pages.html","title":"Bonfire.API.GraphQL.Pages","type":"module"},{"doc":"Returns a Page for the given key, defaulting to an empty one","ref":"Bonfire.API.GraphQL.Pages.html#get/2","title":"Bonfire.API.GraphQL.Pages.get/2","type":"function"},{"doc":"Returns a post-batch callback (i.e. the third argument to batch/3) for a key which calls get() with the callback param and the key","ref":"Bonfire.API.GraphQL.Pages.html#getter/1","title":"Bonfire.API.GraphQL.Pages.getter/1","type":"function"},{"doc":"Create a new pages from a data map, counts map, cursor function and page opts","ref":"Bonfire.API.GraphQL.Pages.html#new/4","title":"Bonfire.API.GraphQL.Pages.new/4","type":"function"},{"doc":"Create a new Pages from some data rows, count rows and a grouping key. Groups the data by the grouping key on insertion and turns the counts into a map ready for lookup on a per-row basis. Note: if the grouping key is not present in the returned data rows, this function will crash. Our intuition is that this would mean an error in the calling code, so we would rather raise it early.","ref":"Bonfire.API.GraphQL.Pages.html#new/5","title":"Bonfire.API.GraphQL.Pages.new/5","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Pages.html#t:counts/0","title":"Bonfire.API.GraphQL.Pages.counts/0","type":"type"},{"doc":"","ref":"Bonfire.API.GraphQL.Pages.html#t:data/0","title":"Bonfire.API.GraphQL.Pages.data/0","type":"type"},{"doc":"","ref":"Bonfire.API.GraphQL.Pages.html#t:t/0","title":"Bonfire.API.GraphQL.Pages.t/0","type":"type"},{"doc":"","ref":"Bonfire.API.GraphQL.Pagination.html","title":"Bonfire.API.GraphQL.Pagination","type":"module"},{"doc":"","ref":"Bonfire.API.GraphQL.Pagination.html#page/7","title":"Bonfire.API.GraphQL.Pagination.page/7","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Pagination.html#page_all/7","title":"Bonfire.API.GraphQL.Pagination.page_all/7","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Pagination.html#pages/8","title":"Bonfire.API.GraphQL.Pagination.pages/8","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.PlugPipelines.html","title":"Bonfire.API.GraphQL.PlugPipelines","type":"module"},{"doc":"","ref":"Bonfire.API.GraphQL.PlugPipelines.html#default_pipeline/2","title":"Bonfire.API.GraphQL.PlugPipelines.default_pipeline/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.PlugPipelines.html#run/2","title":"Bonfire.API.GraphQL.PlugPipelines.run/2","type":"function"},{"doc":"GraphQL Plug to add current user to the context","ref":"Bonfire.API.GraphQL.Plugs.GraphQLContext.html","title":"Bonfire.API.GraphQL.Plugs.GraphQLContext","type":"module"},{"doc":"","ref":"Bonfire.API.GraphQL.Plugs.GraphQLContext.html#call/2","title":"Bonfire.API.GraphQL.Plugs.GraphQLContext.call/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Plugs.GraphQLContext.html#init/1","title":"Bonfire.API.GraphQL.Plugs.GraphQLContext.init/1","type":"function"},{"doc":"Helpful functions for preparing to query or test Absinthe applications. These functions make it trivially easy to generate very large, comprehensive queries for our types in Absinthe that will resolve every field in that type (and any number of subtypes as well to a given level of depth) Adapted from https://github.com/devonestes/assertions (MIT license)","ref":"Bonfire.API.GraphQL.QueryHelper.html","title":"Bonfire.API.GraphQL.QueryHelper","type":"module"},{"doc":"","ref":"Bonfire.API.GraphQL.QueryHelper.html#apply_overrides/2","title":"Bonfire.API.GraphQL.QueryHelper.apply_overrides/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.QueryHelper.html#camelize/1","title":"Bonfire.API.GraphQL.QueryHelper.camelize/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.QueryHelper.html#do_format_fields/3","title":"Bonfire.API.GraphQL.QueryHelper.do_format_fields/3","type":"function"},{"doc":"Returns a document containing the fields in a type and any sub-types down to a limited depth of nesting (default 3 ). This is helpful for generating a document to use for testing your GraphQL API. This function will always return all fields in the given type, ensuring that there aren't any accidental fields with resolver functions that aren't tested in at least some fashion. Example iex&gt; document_for ( :user , 2 ) ` ` ` name age posts { title subtitle } comments { body } ` ` `","ref":"Bonfire.API.GraphQL.QueryHelper.html#document_for/4","title":"Bonfire.API.GraphQL.QueryHelper.document_for/4","type":"function"},{"doc":"Returns all fields in a type and any sub-types down to a limited depth of nesting (default 3 ). This is helpful for converting a struct or map into an expected response that is a bare map and which can be used in some of the other assertions below.","ref":"Bonfire.API.GraphQL.QueryHelper.html#fields_for/3","title":"Bonfire.API.GraphQL.QueryHelper.fields_for/3","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.QueryHelper.html#format_fields/4","title":"Bonfire.API.GraphQL.QueryHelper.format_fields/4","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.QueryHelper.html#get_fields/3","title":"Bonfire.API.GraphQL.QueryHelper.get_fields/3","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.QueryHelper.html#maybe_debug/4","title":"Bonfire.API.GraphQL.QueryHelper.maybe_debug/4","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.QueryHelper.html#padding/1","title":"Bonfire.API.GraphQL.QueryHelper.padding/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.QueryHelper.html#query_with_id/4","title":"Bonfire.API.GraphQL.QueryHelper.query_with_id/4","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.QueryHelper.html#run_query_id/6","title":"Bonfire.API.GraphQL.QueryHelper.run_query_id/6","type":"function"},{"doc":"Encapsulates the flow for resolving a field in the absence of multiple parents.","ref":"Bonfire.API.GraphQL.ResolveField.html","title":"Bonfire.API.GraphQL.ResolveField","type":"module"},{"doc":"","ref":"Bonfire.API.GraphQL.ResolveField.html#run/1","title":"Bonfire.API.GraphQL.ResolveField.run/1","type":"function"},{"doc":"Encapsulates the flow for resolving a field for potentially multiple parents.","ref":"Bonfire.API.GraphQL.ResolveFields.html","title":"Bonfire.API.GraphQL.ResolveFields","type":"module"},{"doc":"","ref":"Bonfire.API.GraphQL.ResolveFields.html#default_getter/2","title":"Bonfire.API.GraphQL.ResolveFields.default_getter/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.ResolveFields.html#run/1","title":"Bonfire.API.GraphQL.ResolveFields.run/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.ResolveFields.html#t:getter/0","title":"Bonfire.API.GraphQL.ResolveFields.getter/0","type":"type"},{"doc":"","ref":"Bonfire.API.GraphQL.ResolveFields.html#t:t/0","title":"Bonfire.API.GraphQL.ResolveFields.t/0","type":"type"},{"doc":"Encapsulates the flow of resolving a page in the presence of a single parent. We also currently use this as a stopgap while we finish implementing some things, trading speed for correctness.","ref":"Bonfire.API.GraphQL.ResolvePage.html","title":"Bonfire.API.GraphQL.ResolvePage","type":"module"},{"doc":"","ref":"Bonfire.API.GraphQL.ResolvePage.html#run/1","title":"Bonfire.API.GraphQL.ResolvePage.run/1","type":"function"},{"doc":"Encapsulates the flow of resolving a page in the presence of a single parent. We also currently use this as a stopgap while we finish implementing some things, trading speed for correctness.","ref":"Bonfire.API.GraphQL.ResolvePages.html","title":"Bonfire.API.GraphQL.ResolvePages","type":"module"},{"doc":"","ref":"Bonfire.API.GraphQL.ResolvePages.html#run/1","title":"Bonfire.API.GraphQL.ResolvePages.run/1","type":"function"},{"doc":"Encapsulates the flow of resolving a page in the absence of parents.","ref":"Bonfire.API.GraphQL.ResolveRootPage.html","title":"Bonfire.API.GraphQL.ResolveRootPage","type":"module"},{"doc":"","ref":"Bonfire.API.GraphQL.ResolveRootPage.html#run/1","title":"Bonfire.API.GraphQL.ResolveRootPage.run/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Router.html","title":"Bonfire.API.GraphQL.Router","type":"module"},{"doc":"Root GraphQL Schema. Only active if the Bonfire.API.GraphQL extension is present.","ref":"Bonfire.API.GraphQL.Schema.html","title":"Bonfire.API.GraphQL.Schema","type":"module"},{"doc":"Define dataloaders see https://hexdocs.pm/absinthe/1.4.6/ecto.html#dataloader","ref":"Bonfire.API.GraphQL.Schema.html#context/1","title":"Bonfire.API.GraphQL.Schema.context/1","type":"function"},{"doc":"hydrate SDL schema with resolvers","ref":"Bonfire.API.GraphQL.Schema.html#hydrate/2","title":"Bonfire.API.GraphQL.Schema.hydrate/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Schema.html#schema_to_api_type/2","title":"Bonfire.API.GraphQL.Schema.schema_to_api_type/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.SchemaPipelines.html","title":"Bonfire.API.GraphQL.SchemaPipelines","type":"module"},{"doc":"","ref":"Bonfire.API.GraphQL.SchemaPipelines.html#pipeline/1","title":"Bonfire.API.GraphQL.SchemaPipelines.pipeline/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.SchemaPipelines.html#run/2","title":"Bonfire.API.GraphQL.SchemaPipelines.run/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.SchemaUtils.html","title":"Bonfire.API.GraphQL.SchemaUtils","type":"module"},{"doc":"","ref":"Bonfire.API.GraphQL.SchemaUtils.html#context_types/0","title":"Bonfire.API.GraphQL.SchemaUtils.context_types/0","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.SchemaUtils.html#hydrations_merge/1","title":"Bonfire.API.GraphQL.SchemaUtils.hydrations_merge/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions","type":"module"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_binary/1","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_binary/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_boolean/1","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_boolean/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_created_at/2","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_created_at/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_cursor/1","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_cursor/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_cursors/1","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_cursors/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_datetime/1","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_datetime/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_datetime/2","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_datetime/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_display_username/1","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_display_username/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_email/1","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_email/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_eq/1","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_eq/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_field/3","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_field/3","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_float/1","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_float/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_int/1","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_int/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_invalid_credential/2","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_invalid_credential/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_list/0","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_list/0","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_list/1","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_list/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_list/2","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_list/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_location/1","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_location/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_maps_eq/3","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_maps_eq/3","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_maps_eq/4","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_maps_eq/4","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_maps_eq/5","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_maps_eq/5","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_non_neg/1","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_non_neg/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_not_found/2","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_not_found/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_not_logged_in/2","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_not_logged_in/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_not_permitted/3","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_not_permitted/3","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_object/4","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_object/4","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_optional/1","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_optional/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_optional_field/3","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_optional_field/3","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_page/0","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_page/0","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_page/1","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_page/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_page/6","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_page/6","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_page_info/1","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_page_info/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_pos/1","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_pos/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_ulid/1","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_ulid/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_updated_at/2","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_updated_at/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_url/1","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_url/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_username/1","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_username/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#assert_uuid/1","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.assert_uuid/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLAssertions.html#uncamel_map/1","title":"Bonfire.API.GraphQL.Test.GraphQLAssertions.uncamel_map/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html","title":"Bonfire.API.GraphQL.Test.GraphQLFields","type":"module"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#activity_fields/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.activity_fields/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#auth_payload_fields/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.auth_payload_fields/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#collection_fields/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.collection_fields/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#collection_follows_subquery/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.collection_follows_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#collection_query/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.collection_query/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#collection_spread/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.collection_spread/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#collection_subquery/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.collection_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#collections_query/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.collections_query/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#collections_subquery/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.collections_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#comment_fields/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.comment_fields/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#comments_subquery/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.comments_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#communities_query/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.communities_query/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#communities_subquery/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.communities_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#community_fields/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.community_fields/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#community_follows_subquery/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.community_follows_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#community_query/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.community_query/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#community_spread/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.community_spread/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#community_subquery/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.community_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#confirm_email_mutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.confirm_email_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#confirm_email_submutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.confirm_email_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#copy_resource_mutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.copy_resource_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#copy_resource_submutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.copy_resource_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#create_collection_mutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.create_collection_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#create_collection_submutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.create_collection_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#create_community_mutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.create_community_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#create_community_submutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.create_community_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#create_flag_mutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.create_flag_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#create_flag_submutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.create_flag_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#create_follow_mutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.create_follow_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#create_follow_submutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.create_follow_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#create_like_mutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.create_like_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#create_like_submutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.create_like_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#create_resource_mutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.create_resource_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#create_resource_submutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.create_resource_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#create_session_mutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.create_session_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#create_session_submutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.create_session_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#create_user_mutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.create_user_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#create_user_submutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.create_user_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#deactivation_mutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.deactivation_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#deactivation_submutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.deactivation_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#delete_self_mutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.delete_self_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#delete_self_submutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.delete_self_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#delete_session_mutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.delete_session_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#feature_basics/0","title":"Bonfire.API.GraphQL.Test.GraphQLFields.feature_basics/0","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#feature_fields/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.feature_fields/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#feature_query/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.feature_query/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#feature_subquery/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.feature_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#features_query/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.features_query/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#features_subquery/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.features_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#flag_fields/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.flag_fields/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#flag_query/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.flag_query/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#flag_subquery/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.flag_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#flags_query/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.flags_query/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#flags_subquery/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.flags_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#follow_fields/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.follow_fields/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#follow_query/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.follow_query/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#follow_remote_actor_mutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.follow_remote_actor_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#follow_remote_actor_submutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.follow_remote_actor_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#follow_subquery/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.follow_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#followed_collection_fields/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.followed_collection_fields/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#followed_community_fields/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.followed_community_fields/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#followers_subquery/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.followers_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#follows_subquery/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.follows_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#gen_mutation/3","title":"Bonfire.API.GraphQL.Test.GraphQLFields.gen_mutation/3","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#gen_mutation/4","title":"Bonfire.API.GraphQL.Test.GraphQLFields.gen_mutation/4","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#gen_query/2","title":"Bonfire.API.GraphQL.Test.GraphQLFields.gen_query/2","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#gen_query/3","title":"Bonfire.API.GraphQL.Test.GraphQLFields.gen_query/3","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#gen_submutation/4","title":"Bonfire.API.GraphQL.Test.GraphQLFields.gen_submutation/4","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#gen_submutation/5","title":"Bonfire.API.GraphQL.Test.GraphQLFields.gen_submutation/5","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#gen_subquery/3","title":"Bonfire.API.GraphQL.Test.GraphQLFields.gen_subquery/3","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#gen_subquery/4","title":"Bonfire.API.GraphQL.Test.GraphQLFields.gen_subquery/4","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#invite_fields/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.invite_fields/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#invite_mutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.invite_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#invite_submutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.invite_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#like_fields/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.like_fields/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#like_query/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.like_query/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#like_subquery/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.like_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#likers_subquery/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.likers_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#likes_subquery/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.likes_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#me_fields/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.me_fields/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#me_query/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.me_query/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#page_fields/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.page_fields/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#page_info_fields/0","title":"Bonfire.API.GraphQL.Test.GraphQLFields.page_info_fields/0","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#page_subquery/3","title":"Bonfire.API.GraphQL.Test.GraphQLFields.page_subquery/3","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#page_subquery/4","title":"Bonfire.API.GraphQL.Test.GraphQLFields.page_subquery/4","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#reset_password_mutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.reset_password_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#reset_password_request_mutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.reset_password_request_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#reset_password_submutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.reset_password_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#resource_fields/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.resource_fields/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#resource_query/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.resource_query/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#resource_spread/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.resource_spread/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#resource_subquery/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.resource_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#resources_query/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.resources_query/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#resources_subquery/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.resources_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#thread_fields/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.thread_fields/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#threads_subquery/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.threads_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#update_collection_mutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.update_collection_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#update_collection_submutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.update_collection_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#update_community_mutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.update_community_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#update_community_submutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.update_community_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#update_flag_mutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.update_flag_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#update_flag_submutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.update_flag_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#update_profile_mutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.update_profile_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#update_profile_submutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.update_profile_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#update_resource_mutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.update_resource_mutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#update_resource_submutation/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.update_resource_submutation/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#user_fields/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.user_fields/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#user_follows_subquery/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.user_follows_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#user_query/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.user_query/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#user_spread/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.user_spread/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#user_subquery/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.user_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#username_available_query/0","title":"Bonfire.API.GraphQL.Test.GraphQLFields.username_available_query/0","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#users_query/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.users_query/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.Test.GraphQLFields.html#users_subquery/1","title":"Bonfire.API.GraphQL.Test.GraphQLFields.users_subquery/1","type":"function"},{"doc":"","ref":"Bonfire.API.GraphQL.UserSocket.html","title":"Bonfire.API.GraphQL.UserSocket","type":"module"},{"doc":"","ref":"Bonfire.API.GraphQL.UserSocket.html#build_context_from_params/2","title":"Bonfire.API.GraphQL.UserSocket.build_context_from_params/2","type":"function"},{"doc":"Callback implementation for Phoenix.Socket.connect/2 .","ref":"Bonfire.API.GraphQL.UserSocket.html#connect/2","title":"Bonfire.API.GraphQL.UserSocket.connect/2","type":"function"},{"doc":"Callback implementation for Phoenix.Socket.id/1 .","ref":"Bonfire.API.GraphQL.UserSocket.html#id/1","title":"Bonfire.API.GraphQL.UserSocket.id/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.html","title":"Bonfire.Boundaries","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.html#acls_from_preset_boundary_names/1","title":"Bonfire.Boundaries.acls_from_preset_boundary_names/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.html#boundaries_set/1","title":"Bonfire.Boundaries.boundaries_set/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.html#can?/3","title":"Bonfire.Boundaries.can?/3","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.html#list_object_acls/1","title":"Bonfire.Boundaries.list_object_acls/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.html#load_pointer/2","title":"Bonfire.Boundaries.load_pointer/2","type":"function"},{"doc":"Loads binaries according to boundaries (which are assumed to be ULID pointer IDs). Lists which are iterated and return a [sub]list with only permitted pointers.","ref":"Bonfire.Boundaries.html#load_pointers/2","title":"Bonfire.Boundaries.load_pointers/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.html#preset_boundary_tuple_from_acl/1","title":"Bonfire.Boundaries.preset_boundary_tuple_from_acl/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.html#preset_name/1","title":"Bonfire.Boundaries.preset_name/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.html#set_boundaries/3","title":"Bonfire.Boundaries.set_boundaries/3","type":"function"},{"doc":"Assigns the user as the caretaker of the given object or objects, replacing the existing caretaker, if any.","ref":"Bonfire.Boundaries.html#take_care_of!/2","title":"Bonfire.Boundaries.take_care_of!/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.html#user_default_boundaries/0","title":"Bonfire.Boundaries.user_default_boundaries/0","type":"function"},{"doc":"acls represent fully populated access control rules that can be reused","ref":"Bonfire.Boundaries.Acls.html","title":"Bonfire.Boundaries.Acls","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#acls/0","title":"Bonfire.Boundaries.Acls.acls/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#built_in_ids/0","title":"Bonfire.Boundaries.Acls.built_in_ids/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#cast/3","title":"Bonfire.Boundaries.Acls.cast/3","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#changeset/3","title":"Bonfire.Boundaries.Acls.changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#create/2","title":"Bonfire.Boundaries.Acls.create/2","type":"function"},{"doc":"Fully delete the ACL, including permissions/grants and controlled information. This will affect all objects previously shared with this ACL.","ref":"Bonfire.Boundaries.Acls.html#delete/2","title":"Bonfire.Boundaries.Acls.delete/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#edit/3","title":"Bonfire.Boundaries.Acls.edit/3","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#find_caretaker_stereotypes/2","title":"Bonfire.Boundaries.Acls.find_caretaker_stereotypes/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#for_dropdown/1","title":"Bonfire.Boundaries.Acls.for_dropdown/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#get!/1","title":"Bonfire.Boundaries.Acls.get!/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#get/1","title":"Bonfire.Boundaries.Acls.get/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#get_for_caretaker/3","title":"Bonfire.Boundaries.Acls.get_for_caretaker/3","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#get_for_caretaker_q/3","title":"Bonfire.Boundaries.Acls.get_for_caretaker_q/3","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#get_id!/1","title":"Bonfire.Boundaries.Acls.get_id!/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#get_id/1","title":"Bonfire.Boundaries.Acls.get_id/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#is_stereotype?/1","title":"Bonfire.Boundaries.Acls.is_stereotype?/1","type":"function"},{"doc":"Lists ACLs we are permitted to see.","ref":"Bonfire.Boundaries.Acls.html#list/1","title":"Bonfire.Boundaries.Acls.list/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#list_built_ins/0","title":"Bonfire.Boundaries.Acls.list_built_ins/0","type":"function"},{"doc":"Lists the ACLs we are the registered caretakers of that we are permitted to see. If any are created without permitting the user to see them, they will not be shown.","ref":"Bonfire.Boundaries.Acls.html#list_my/2","title":"Bonfire.Boundaries.Acls.list_my/2","type":"function"},{"doc":"query for list_my","ref":"Bonfire.Boundaries.Acls.html#list_my_q/2","title":"Bonfire.Boundaries.Acls.list_my_q/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#list_my_with_counts/2","title":"Bonfire.Boundaries.Acls.list_my_with_counts/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#list_q/1","title":"Bonfire.Boundaries.Acls.list_q/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#opts_for_dropdown/0","title":"Bonfire.Boundaries.Acls.opts_for_dropdown/0","type":"function"},{"doc":"Soft-delete the ACL, meaning it will not be displayed anymore, but permissions/grants and controlled information will be preserved. This will not affect objects previously shared with this ACL.","ref":"Bonfire.Boundaries.Acls.html#soft_delete/2","title":"Bonfire.Boundaries.Acls.soft_delete/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#stereotype_ids/0","title":"Bonfire.Boundaries.Acls.stereotype_ids/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#user_default_acl/1","title":"Bonfire.Boundaries.Acls.user_default_acl/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Acls.html#user_default_acls/0","title":"Bonfire.Boundaries.Acls.user_default_acls/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Blocks.html","title":"Bonfire.Boundaries.Blocks","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Blocks.html#block/3","title":"Bonfire.Boundaries.Blocks.block/3","type":"function"},{"doc":"Block something for everyone on the instance (only for admins)","ref":"Bonfire.Boundaries.Blocks.html#instance_wide_block/2","title":"Bonfire.Boundaries.Blocks.instance_wide_block/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Blocks.html#instance_wide_circles/1","title":"Bonfire.Boundaries.Blocks.instance_wide_circles/1","type":"function"},{"doc":"Checks if a user_or_instance is blocked Pass a block_type (eg :silence or :ghost ) Pass a current_user in opts or check :instance_wide","ref":"Bonfire.Boundaries.Blocks.html#is_blocked?/3","title":"Bonfire.Boundaries.Blocks.is_blocked?/3","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Blocks.html#list/2","title":"Bonfire.Boundaries.Blocks.list/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Blocks.html#types_blocked/1","title":"Bonfire.Boundaries.Blocks.types_blocked/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Blocks.html#unblock/3","title":"Bonfire.Boundaries.Blocks.unblock/3","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html","title":"Bonfire.Boundaries.Circles","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#add_to_circles/2","title":"Bonfire.Boundaries.Circles.add_to_circles/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#changeset/2","title":"Bonfire.Boundaries.Circles.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#changeset/3","title":"Bonfire.Boundaries.Circles.changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#circle_ids/1","title":"Bonfire.Boundaries.Circles.circle_ids/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#circles/0","title":"Bonfire.Boundaries.Circles.circles/0","type":"function"},{"doc":"Create a circle for the provided user (and with the user in the circle?)","ref":"Bonfire.Boundaries.Circles.html#create/2","title":"Bonfire.Boundaries.Circles.create/2","type":"function"},{"doc":"Fully delete the circle, including membership and boundary information. This will affect all objects previously shared with members of this circle.","ref":"Bonfire.Boundaries.Circles.html#delete/2","title":"Bonfire.Boundaries.Circles.delete/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#edit/3","title":"Bonfire.Boundaries.Circles.edit/3","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#get!/1","title":"Bonfire.Boundaries.Circles.get!/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#get/1","title":"Bonfire.Boundaries.Circles.get/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#get_for_caretaker/3","title":"Bonfire.Boundaries.Circles.get_for_caretaker/3","type":"function"},{"doc":"query for get","ref":"Bonfire.Boundaries.Circles.html#get_for_caretaker_q/3","title":"Bonfire.Boundaries.Circles.get_for_caretaker_q/3","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#get_id!/1","title":"Bonfire.Boundaries.Circles.get_id!/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#get_id/1","title":"Bonfire.Boundaries.Circles.get_id/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#get_stereotype_circles/2","title":"Bonfire.Boundaries.Circles.get_stereotype_circles/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#get_tuple/1","title":"Bonfire.Boundaries.Circles.get_tuple/1","type":"function"},{"doc":"Lists the circles that we are permitted to see.","ref":"Bonfire.Boundaries.Circles.html#is_encircled_by?/2","title":"Bonfire.Boundaries.Circles.is_encircled_by?/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#is_stereotype?/1","title":"Bonfire.Boundaries.Circles.is_stereotype?/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#list_by_ids/1","title":"Bonfire.Boundaries.Circles.list_by_ids/1","type":"function"},{"doc":"Lists the circles we are the registered caretakers of that we are permitted to see. If any circles are created without permitting the user to see them, they will not be shown.","ref":"Bonfire.Boundaries.Circles.html#list_my/2","title":"Bonfire.Boundaries.Circles.list_my/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#list_my_defaults/1","title":"Bonfire.Boundaries.Circles.list_my_defaults/1","type":"function"},{"doc":"query for list_my","ref":"Bonfire.Boundaries.Circles.html#list_my_q/2","title":"Bonfire.Boundaries.Circles.list_my_q/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#list_my_with_counts/2","title":"Bonfire.Boundaries.Circles.list_my_with_counts/2","type":"function"},{"doc":"query for list_visible","ref":"Bonfire.Boundaries.Circles.html#list_q/2","title":"Bonfire.Boundaries.Circles.list_q/2","type":"function"},{"doc":"Lists the circles that we are permitted to see.","ref":"Bonfire.Boundaries.Circles.html#list_visible/2","title":"Bonfire.Boundaries.Circles.list_visible/2","type":"function"},{"doc":"query for list_visible","ref":"Bonfire.Boundaries.Circles.html#list_visible_q/2","title":"Bonfire.Boundaries.Circles.list_visible_q/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#remove_from_circles/2","title":"Bonfire.Boundaries.Circles.remove_from_circles/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#stereotype_ids/0","title":"Bonfire.Boundaries.Circles.stereotype_ids/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Circles.html#to_circle_ids/1","title":"Bonfire.Boundaries.Circles.to_circle_ids/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Controlleds.html","title":"Bonfire.Boundaries.Controlleds","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Controlleds.html#add_acls/2","title":"Bonfire.Boundaries.Controlleds.add_acls/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Controlleds.html#changeset/2","title":"Bonfire.Boundaries.Controlleds.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Controlleds.html#create/1","title":"Bonfire.Boundaries.Controlleds.create/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Controlleds.html#get_preset_on_object/1","title":"Bonfire.Boundaries.Controlleds.get_preset_on_object/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Controlleds.html#list/0","title":"Bonfire.Boundaries.Controlleds.list/0","type":"function"},{"doc":"List all boundaries applied to an object. Only call this as an admin or curator of the object.","ref":"Bonfire.Boundaries.Controlleds.html#list_on_object/1","title":"Bonfire.Boundaries.Controlleds.list_on_object/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Controlleds.html#list_presets_on_objects/1","title":"Bonfire.Boundaries.Controlleds.list_presets_on_objects/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Controlleds.html#list_q/0","title":"Bonfire.Boundaries.Controlleds.list_q/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Controlleds.html#remove_acls/2","title":"Bonfire.Boundaries.Controlleds.remove_acls/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Controlleds.html#ulids_or/2","title":"Bonfire.Boundaries.Controlleds.ulids_or/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Debug.html","title":"Bonfire.Boundaries.Debug","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Debug.html#debug_my_grants_on/2","title":"Bonfire.Boundaries.Debug.debug_my_grants_on/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Debug.html#debug_object_acls/1","title":"Bonfire.Boundaries.Debug.debug_object_acls/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Debug.html#debug_user_acls/2","title":"Bonfire.Boundaries.Debug.debug_user_acls/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Debug.html#debug_user_circles/1","title":"Bonfire.Boundaries.Debug.debug_user_circles/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Fixtures.html","title":"Bonfire.Boundaries.Fixtures","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Fixtures.html#admin_circle/0","title":"Bonfire.Boundaries.Fixtures.admin_circle/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Fixtures.html#global_circles/0","title":"Bonfire.Boundaries.Fixtures.global_circles/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Fixtures.html#insert/0","title":"Bonfire.Boundaries.Fixtures.insert/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Fixtures.html#instance_acl/0","title":"Bonfire.Boundaries.Fixtures.instance_acl/0","type":"function"},{"doc":"a grant applies to a subject","ref":"Bonfire.Boundaries.Grants.html","title":"Bonfire.Boundaries.Grants","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Grants.html#changeset/2","title":"Bonfire.Boundaries.Grants.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Grants.html#changeset/3","title":"Bonfire.Boundaries.Grants.changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Grants.html#create/1","title":"Bonfire.Boundaries.Grants.create/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Grants.html#create/2","title":"Bonfire.Boundaries.Grants.create/2","type":"function"},{"doc":"Grant takes three parameters: subject_id: who we are granting access to acl_id: what ACL we're applying a grant to verb: which verb/action value: true, false, or nil","ref":"Bonfire.Boundaries.Grants.html#grant/5","title":"Bonfire.Boundaries.Grants.grant/5","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Grants.html#grants/0","title":"Bonfire.Boundaries.Grants.grants/0","type":"function"},{"doc":"Lists the grants permitted to see.","ref":"Bonfire.Boundaries.Grants.html#list/1","title":"Bonfire.Boundaries.Grants.list/1","type":"function"},{"doc":"Lists the grants we are the registered caretakers of that we are permitted to see. If any are created without permitting the user to see them, they will not be shown.","ref":"Bonfire.Boundaries.Grants.html#list_my/1","title":"Bonfire.Boundaries.Grants.list_my/1","type":"function"},{"doc":"query for list_my","ref":"Bonfire.Boundaries.Grants.html#list_my_q/1","title":"Bonfire.Boundaries.Grants.list_my_q/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Grants.html#list_q/1","title":"Bonfire.Boundaries.Grants.list_q/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Grants.html#remove_subject_from_acl/2","title":"Bonfire.Boundaries.Grants.remove_subject_from_acl/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Grants.html#upsert_or_delete/2","title":"Bonfire.Boundaries.Grants.upsert_or_delete/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Integration.html","title":"Bonfire.Boundaries.Integration","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Integration.html#is_admin?/1","title":"Bonfire.Boundaries.Integration.is_admin?/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Integration.html#is_local?/1","title":"Bonfire.Boundaries.Integration.is_local?/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Integration.html#repo/0","title":"Bonfire.Boundaries.Integration.repo/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.LiveHandler.html","title":"Bonfire.Boundaries.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#acl_create/2","title":"Bonfire.Boundaries.LiveHandler.acl_create/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#add_to_acl/2","title":"Bonfire.Boundaries.LiveHandler.add_to_acl/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#boundaries_on_objects/1","title":"Bonfire.Boundaries.LiveHandler.boundaries_on_objects/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#circle_create/2","title":"Bonfire.Boundaries.LiveHandler.circle_create/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#handle_event/3","title":"Bonfire.Boundaries.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#known_circle_tuples/2","title":"Bonfire.Boundaries.LiveHandler.known_circle_tuples/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#maybe_check_boundaries/2","title":"Bonfire.Boundaries.LiveHandler.maybe_check_boundaries/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#maybe_preload_and_check_boundaries/2","title":"Bonfire.Boundaries.LiveHandler.maybe_preload_and_check_boundaries/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#maybe_preload_boundaries/2","title":"Bonfire.Boundaries.LiveHandler.maybe_preload_boundaries/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#maybe_redirect_to/3","title":"Bonfire.Boundaries.LiveHandler.maybe_redirect_to/3","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#remove_from_acl/2","title":"Bonfire.Boundaries.LiveHandler.remove_from_acl/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#remove_from_circle_tuples/2","title":"Bonfire.Boundaries.LiveHandler.remove_from_circle_tuples/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#set_circles/3","title":"Bonfire.Boundaries.LiveHandler.set_circles/3","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.LiveHandler.html#subject_name/1","title":"Bonfire.Boundaries.LiveHandler.subject_name/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Migrations.html","title":"Bonfire.Boundaries.Migrations","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Migrations.html#migrate_boundaries/0","title":"Bonfire.Boundaries.Migrations.migrate_boundaries/0","type":"macro"},{"doc":"","ref":"Bonfire.Boundaries.Migrations.html#migrate_boundaries/1","title":"Bonfire.Boundaries.Migrations.migrate_boundaries/1","type":"macro"},{"doc":"","ref":"Bonfire.Boundaries.Migrations.html#migrate_functions/0","title":"Bonfire.Boundaries.Migrations.migrate_functions/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Migrations.html#migrate_views/0","title":"Bonfire.Boundaries.Migrations.migrate_views/0","type":"function"},{"doc":"Helpers for writing common queries. In particular, access control. Most of this stuff will probably move at some point when we figure out how to better organise it. Unfortunately, ecto is against the sort of thing we take for granted in the bonfire ecosystem, so some of these patterns are a bit convoluted to make ecto generate acceptable sql. In particular the lateral join and the macro is a bit loltastic when we could just return an arbitrary tuple if ecto would support inferring (or us providing) the return type of a subquery.","ref":"Bonfire.Boundaries.Queries.html","title":"Bonfire.Boundaries.Queries","type":"module"},{"doc":"Call the add_perms(bool?, bool?) postgres function for combining permissions.","ref":"Bonfire.Boundaries.Queries.html#add_perms/2","title":"Bonfire.Boundaries.Queries.add_perms/2","type":"macro"},{"doc":"Call the agg_perms(bool?) postgres aggregate for combining permissions.","ref":"Bonfire.Boundaries.Queries.html#agg_perms/1","title":"Bonfire.Boundaries.Queries.agg_perms/1","type":"macro"},{"doc":"","ref":"Bonfire.Boundaries.Queries.html#boundarise/3","title":"Bonfire.Boundaries.Queries.boundarise/3","type":"macro"},{"doc":"A subquery which filters out results the current user is not permitted to perform all of the specified verbs on. Parameters are an expression evaluating to the current user, and a list of verbs.","ref":"Bonfire.Boundaries.Queries.html#filter_where_not/2","title":"Bonfire.Boundaries.Queries.filter_where_not/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Queries.html#object_boundarised/2","title":"Bonfire.Boundaries.Queries.object_boundarised/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Queries.html#permitted/1","title":"Bonfire.Boundaries.Queries.permitted/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Queries.html#permitted/2","title":"Bonfire.Boundaries.Queries.permitted/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Queries.html#skip_boundary_check?/2","title":"Bonfire.Boundaries.Queries.skip_boundary_check?/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Queries.html#user_and_circle_ids/1","title":"Bonfire.Boundaries.Queries.user_and_circle_ids/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.RuntimeConfig.html","title":"Bonfire.Boundaries.RuntimeConfig","type":"module"},{"doc":"NOTE: you can override this default config in your app's runtime.exs, by placing similarly-named config keys below the Bonfire.Common.Config.LoadExtensionsConfig.load_configs line","ref":"Bonfire.Boundaries.RuntimeConfig.html#config/0","title":"Bonfire.Boundaries.RuntimeConfig.config/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.RuntimeConfig.html#config_module/0","title":"Bonfire.Boundaries.RuntimeConfig.config_module/0","type":"function"},{"doc":"A marker that identifies special context-dependent semantics to the system.","ref":"Bonfire.Boundaries.Stereotyped.html","title":"Bonfire.Boundaries.Stereotyped","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Stereotyped.html#changeset/2","title":"Bonfire.Boundaries.Stereotyped.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Stereotyped.Migration.html","title":"Bonfire.Boundaries.Stereotyped.Migration","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Stereotyped.Migration.html#create_stereotype_stereotype_index/1","title":"Bonfire.Boundaries.Stereotyped.Migration.create_stereotype_stereotype_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Boundaries.Stereotyped.Migration.html#create_stereotype_table/0","title":"Bonfire.Boundaries.Stereotyped.Migration.create_stereotype_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Boundaries.Stereotyped.Migration.html#create_stereotype_table/1","title":"Bonfire.Boundaries.Stereotyped.Migration.create_stereotype_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Boundaries.Stereotyped.Migration.html#drop_stereotype_stereotype_index/1","title":"Bonfire.Boundaries.Stereotyped.Migration.drop_stereotype_stereotype_index/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Stereotyped.Migration.html#drop_stereotype_table/0","title":"Bonfire.Boundaries.Stereotyped.Migration.drop_stereotype_table/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Stereotyped.Migration.html#migrate_stereotype/0","title":"Bonfire.Boundaries.Stereotyped.Migration.migrate_stereotype/0","type":"macro"},{"doc":"","ref":"Bonfire.Boundaries.Stereotyped.Migration.html#migrate_stereotype/1","title":"Bonfire.Boundaries.Stereotyped.Migration.migrate_stereotype/1","type":"macro"},{"doc":"","ref":"Bonfire.Boundaries.Summary.html","title":"Bonfire.Boundaries.Summary","type":"module"},{"doc":"Reads fixtures in configuration and creates a default boundaries setup for a user","ref":"Bonfire.Boundaries.Users.html","title":"Bonfire.Boundaries.Users","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Users.html#create_default_boundaries/1","title":"Bonfire.Boundaries.Users.create_default_boundaries/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Verbs.html","title":"Bonfire.Boundaries.Verbs","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Verbs.html#changeset/2","title":"Bonfire.Boundaries.Verbs.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Verbs.html#create/1","title":"Bonfire.Boundaries.Verbs.create/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Verbs.html#get!/1","title":"Bonfire.Boundaries.Verbs.get!/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Verbs.html#get/1","title":"Bonfire.Boundaries.Verbs.get/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Verbs.html#get_id!/1","title":"Bonfire.Boundaries.Verbs.get_id!/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Verbs.html#get_id/1","title":"Bonfire.Boundaries.Verbs.get_id/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Verbs.html#get_slug/1","title":"Bonfire.Boundaries.Verbs.get_slug/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Verbs.html#get_tuple/1","title":"Bonfire.Boundaries.Verbs.get_tuple/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Verbs.html#ids/1","title":"Bonfire.Boundaries.Verbs.ids/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Verbs.html#list/2","title":"Bonfire.Boundaries.Verbs.list/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Verbs.html#list_verbs_debug/0","title":"Bonfire.Boundaries.Verbs.list_verbs_debug/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Verbs.html#slugs/0","title":"Bonfire.Boundaries.Verbs.slugs/0","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Verbs.html#verbs/0","title":"Bonfire.Boundaries.Verbs.verbs/0","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_account :any current_user :any acl_id :string, default: nil edit_circle_id :string, default: nil parent_back :any, default: nil columns :integer, default: 1 selected_tab :any, default: nil section :any, default: nil setting_boundaries :boolean, default: false scope :atom, default: nil","ref":"Bonfire.Boundaries.Web.AclLive.html","title":"Bonfire.Boundaries.Web.AclLive","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Web.AclLive.html#can/1","title":"Bonfire.Boundaries.Web.AclLive.can/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Web.AclLive.html#cannot/1","title":"Bonfire.Boundaries.Web.AclLive.cannot/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Web.AclLive.html#columns/1","title":"Bonfire.Boundaries.Web.AclLive.columns/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.Boundaries.Web.AclLive.html#handle_event/3","title":"Bonfire.Boundaries.Web.AclLive.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Web.AclLive.html#maybe_join/2","title":"Bonfire.Boundaries.Web.AclLive.maybe_join/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.Boundaries.Web.AclLive.html#mount/1","title":"Bonfire.Boundaries.Web.AclLive.mount/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Web.AclLive.html#predefined_subjects/1","title":"Bonfire.Boundaries.Web.AclLive.predefined_subjects/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Boundaries.Web.AclLive.html#render/1","title":"Bonfire.Boundaries.Web.AclLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Web.AclLive.html#subject_verb_grant/1","title":"Bonfire.Boundaries.Web.AclLive.subject_verb_grant/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Web.AclLive.html#subjects/1","title":"Bonfire.Boundaries.Web.AclLive.subjects/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.Boundaries.Web.AclLive.html#update/2","title":"Bonfire.Boundaries.Web.AclLive.update/2","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Web.AclLive.html#verb_subject_grant/1","title":"Bonfire.Boundaries.Web.AclLive.verb_subject_grant/1","type":"function"},{"doc":"Properties current_account :any current_user :any object :any with_icon :boolean, default: false my_block :any class :css_class label :string, default: nil scope :any block_type :any","ref":"Bonfire.Boundaries.Web.BlockButtonLive.html","title":"Bonfire.Boundaries.Web.BlockButtonLive","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Web.BlockButtonLive.html#handle_event/3","title":"Bonfire.Boundaries.Web.BlockButtonLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.Boundaries.Web.BlockButtonLive.html#render/1","title":"Bonfire.Boundaries.Web.BlockButtonLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any object :any, default: nil peered :any, default: nil","ref":"Bonfire.Boundaries.Web.BlockMenuButtonsLive.html","title":"Bonfire.Boundaries.Web.BlockMenuButtonsLive","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Web.BlockMenuButtonsLive.html#handle_event/3","title":"Bonfire.Boundaries.Web.BlockMenuButtonsLive.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Web.BlockMenuButtonsLive.html#peered/2","title":"Bonfire.Boundaries.Web.BlockMenuButtonsLive.peered/2","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.Boundaries.Web.BlockMenuButtonsLive.html#render/1","title":"Bonfire.Boundaries.Web.BlockMenuButtonsLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any to_boundaries :list, default: [] to_circles :list thread_mode :atom showing_within :any, default: nil create_activity_type :atom, default: nil","ref":"Bonfire.Boundaries.Web.BoundariesDropdownLive.html","title":"Bonfire.Boundaries.Web.BoundariesDropdownLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.Boundaries.Web.BoundariesDropdownLive.html#render/1","title":"Bonfire.Boundaries.Web.BoundariesDropdownLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any to_boundaries :list, default: [] activity_type_or_reply :any","ref":"Bonfire.Boundaries.Web.BoundariesInfoLive.html","title":"Bonfire.Boundaries.Web.BoundariesInfoLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.Boundaries.Web.BoundariesInfoLive.html#render/1","title":"Bonfire.Boundaries.Web.BoundariesInfoLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any create_activity_type :atom, default: nil to_boundaries :list, default: nil to_boundaries_ids :list, default: [] to_circles :list, default: nil showing_within :any, default: nil show_select_recipients :boolean, default: false open_boundaries :boolean, default: false hide_breakdown :boolean, default: false setting_boundaries :boolean, default: false click_override :boolean, default: false","ref":"Bonfire.Boundaries.Web.BoundariesListLive.html","title":"Bonfire.Boundaries.Web.BoundariesListLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.Boundaries.Web.BoundariesListLive.html#render/1","title":"Bonfire.Boundaries.Web.BoundariesListLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any to_boundaries :list, default: [] to_circles :list thread_mode :atom","ref":"Bonfire.Boundaries.Web.BoundariesSelectionLive.html","title":"Bonfire.Boundaries.Web.BoundariesSelectionLive","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Web.BoundariesSelectionLive.html#input_value/1","title":"Bonfire.Boundaries.Web.BoundariesSelectionLive.input_value/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Web.BoundariesSelectionLive.html#presets/1","title":"Bonfire.Boundaries.Web.BoundariesSelectionLive.presets/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.Boundaries.Web.BoundariesSelectionLive.html#render/1","title":"Bonfire.Boundaries.Web.BoundariesSelectionLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_account :any current_user :any object :any object_boundary :any, default: nil preload_boundary_name :boolean, default: true","ref":"Bonfire.Boundaries.Web.BoundaryIconLive.html","title":"Bonfire.Boundaries.Web.BoundaryIconLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.Boundaries.Web.BoundaryIconLive.html#handle_event/3","title":"Bonfire.Boundaries.Web.BoundaryIconLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.Boundaries.Web.BoundaryIconLive.html#mount/1","title":"Bonfire.Boundaries.Web.BoundaryIconLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.preload/1 .","ref":"Bonfire.Boundaries.Web.BoundaryIconLive.html#preload/1","title":"Bonfire.Boundaries.Web.BoundaryIconLive.preload/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Boundaries.Web.BoundaryIconLive.html#render/1","title":"Bonfire.Boundaries.Web.BoundaryIconLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_account :any current_user :any circle_id :any, default: nil parent_back :any, default: nil setting_boundaries :boolean, default: false scope :atom, default: nil feedback_title :string, default: nil feedback_message :string, default: nil","ref":"Bonfire.Boundaries.Web.CircleLive.html","title":"Bonfire.Boundaries.Web.CircleLive","type":"module"},{"doc":"","ref":"Bonfire.Boundaries.Web.CircleLive.html#f/1","title":"Bonfire.Boundaries.Web.CircleLive.f/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.Boundaries.Web.CircleLive.html#handle_event/3","title":"Bonfire.Boundaries.Web.CircleLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.Boundaries.Web.CircleLive.html#mount/1","title":"Bonfire.Boundaries.Web.CircleLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Boundaries.Web.CircleLive.html#render/1","title":"Bonfire.Boundaries.Web.CircleLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.Boundaries.Web.CircleLive.html#update/2","title":"Bonfire.Boundaries.Web.CircleLive.update/2","type":"function"},{"doc":"Properties current_account :any current_user :any members :list count :integer, default: nil size :integer, default: 12","ref":"Bonfire.Boundaries.Web.CirclePreviewLive.html","title":"Bonfire.Boundaries.Web.CirclePreviewLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.Boundaries.Web.CirclePreviewLive.html#render/1","title":"Bonfire.Boundaries.Web.CirclePreviewLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_account :any current_user :any","ref":"Bonfire.Boundaries.Web.EditCircleLive.html","title":"Bonfire.Boundaries.Web.EditCircleLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.Boundaries.Web.EditCircleLive.html#handle_event/3","title":"Bonfire.Boundaries.Web.EditCircleLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.Boundaries.Web.EditCircleLive.html#mount/1","title":"Bonfire.Boundaries.Web.EditCircleLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Boundaries.Web.EditCircleLive.html#render/1","title":"Bonfire.Boundaries.Web.EditCircleLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.Boundaries.Web.EditCircleLive.html#update/2","title":"Bonfire.Boundaries.Web.EditCircleLive.update/2","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_account :any current_user :any object :any verbs :any, default: nil if_not_say :string, default: nil boundary_can :boolean, default: false check_object_boundary :boolean, default: true Slots default if_not","ref":"Bonfire.Boundaries.Web.IfCan.html","title":"Bonfire.Boundaries.Web.IfCan","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.Boundaries.Web.IfCan.html#handle_event/3","title":"Bonfire.Boundaries.Web.IfCan.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.Boundaries.Web.IfCan.html#mount/1","title":"Bonfire.Boundaries.Web.IfCan.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.preload/1 .","ref":"Bonfire.Boundaries.Web.IfCan.html#preload/1","title":"Bonfire.Boundaries.Web.IfCan.preload/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Boundaries.Web.IfCan.html#render/1","title":"Bonfire.Boundaries.Web.IfCan.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_account :any current_user :any hide_breakdown :boolean, default: false setting_boundaries :boolean, default: false click_override :boolean, default: false to_boundaries :list, default: [] to_boundaries_ids :list, default: [] built_ins :list, default: [] section :any, default: nil edit_acl_id :string, default: nil scope :atom, default: nil","ref":"Bonfire.Boundaries.Web.MyAclsLive.html","title":"Bonfire.Boundaries.Web.MyAclsLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.Boundaries.Web.MyAclsLive.html#handle_event/3","title":"Bonfire.Boundaries.Web.MyAclsLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.Boundaries.Web.MyAclsLive.html#mount/1","title":"Bonfire.Boundaries.Web.MyAclsLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Boundaries.Web.MyAclsLive.html#render/1","title":"Bonfire.Boundaries.Web.MyAclsLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.Boundaries.Web.MyAclsLive.html#update/2","title":"Bonfire.Boundaries.Web.MyAclsLive.update/2","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_account :any current_user :any setting_boundaries :boolean, default: false section :any, default: nil parent_back :any, default: nil scope :atom, default: nil","ref":"Bonfire.Boundaries.Web.MyCirclesLive.html","title":"Bonfire.Boundaries.Web.MyCirclesLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.Boundaries.Web.MyCirclesLive.html#handle_event/3","title":"Bonfire.Boundaries.Web.MyCirclesLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.Boundaries.Web.MyCirclesLive.html#mount/1","title":"Bonfire.Boundaries.Web.MyCirclesLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Boundaries.Web.MyCirclesLive.html#render/1","title":"Bonfire.Boundaries.Web.MyCirclesLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.Boundaries.Web.MyCirclesLive.html#update/2","title":"Bonfire.Boundaries.Web.MyCirclesLive.update/2","type":"function"},{"doc":"Properties current_account :any current_user :any event_target :any, default: nil setting_boundaries :boolean, default: false label :string, default: nil parent_back :any, default: nil scope :atom, default: nil","ref":"Bonfire.Boundaries.Web.NewAclLive.html","title":"Bonfire.Boundaries.Web.NewAclLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.Boundaries.Web.NewAclLive.html#render/1","title":"Bonfire.Boundaries.Web.NewAclLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any event_target :any setting_boundaries :boolean, default: false label :string, default: nil parent_back :any, default: nil scope :atom, default: nil","ref":"Bonfire.Boundaries.Web.NewCircleLive.html","title":"Bonfire.Boundaries.Web.NewCircleLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.Boundaries.Web.NewCircleLive.html#render/1","title":"Bonfire.Boundaries.Web.NewCircleLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any create_activity_type :atom, default: nil to_boundaries :list, default: [] to_circles :list, default: nil showing_within :any, default: nil show_select_recipients :boolean, default: false open_boundaries :boolean, default: false boundaries_modal_id :string, default: :sidebar_composer","ref":"Bonfire.Boundaries.Web.SetBoundariesLive.html","title":"Bonfire.Boundaries.Web.SetBoundariesLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.Boundaries.Web.SetBoundariesLive.html#render/1","title":"Bonfire.Boundaries.Web.SetBoundariesLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Boundaries.Web.SetBoundariesLive.html#to_boundaries_ids/1","title":"Bonfire.Boundaries.Web.SetBoundariesLive.to_boundaries_ids/1","type":"function"},{"doc":"A library of common utils and helpers used across Bonfire extensions Refer to the README","ref":"Bonfire.Common.html","title":"Bonfire.Common","type":"module"},{"doc":"","ref":"Bonfire.Common.Cache.html","title":"Bonfire.Common.Cache","type":"module"},{"doc":"","ref":"Bonfire.Common.Cache.html#cache_key/1","title":"Bonfire.Common.Cache.cache_key/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Cache.html#cached_preloads_for_objects/3","title":"Bonfire.Common.Cache.cached_preloads_for_objects/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Cache.html#maybe_apply_cached/3","title":"Bonfire.Common.Cache.maybe_apply_cached/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Cache.html#maybe_apply_or_fun/3","title":"Bonfire.Common.Cache.maybe_apply_or_fun/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Cache.html#maybe_fun/2","title":"Bonfire.Common.Cache.maybe_fun/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Cache.html#remove/2","title":"Bonfire.Common.Cache.remove/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Config.html","title":"Bonfire.Common.Config","type":"module"},{"doc":"","ref":"Bonfire.Common.Config.html#compilation_error/1","title":"Bonfire.Common.Config.compilation_error/1","type":"macro"},{"doc":"","ref":"Bonfire.Common.Config.html#delete/2","title":"Bonfire.Common.Config.delete/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Config.html#get!/2","title":"Bonfire.Common.Config.get!/2","type":"function"},{"doc":"Get config value for a config key (optionally from a specific OTP app or Bonfire extension)","ref":"Bonfire.Common.Config.html#get/3","title":"Bonfire.Common.Config.get/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Config.html#get_ext!/1","title":"Bonfire.Common.Config.get_ext!/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Config.html#get_ext!/2","title":"Bonfire.Common.Config.get_ext!/2","type":"function"},{"doc":"Get all config keys/values for a specific Bonfire extension or OTP app","ref":"Bonfire.Common.Config.html#get_ext/1","title":"Bonfire.Common.Config.get_ext/1","type":"function"},{"doc":"Get config value for a Bonfire extension or OTP app config key","ref":"Bonfire.Common.Config.html#get_ext/3","title":"Bonfire.Common.Config.get_ext/3","type":"function"},{"doc":"Constructs a key path for settings/config, which always starts with an app or extension name (which defaults to the main OTP app) iex&gt; keys_tree([:bonfire_me, Bonfire.Me.Users]) [:bonfire_me, Bonfire.Me.Users] iex&gt; keys_tree(Bonfire.Me.Users) [:bonfire_me, Bonfire.Me.Users] iex&gt; keys_tree(:bonfire_me) [:bonfire_me] iex&gt; keys_tree(:random_atom) [:bonfire, :random_atom] iex&gt;keys_tree([:random_atom, :sub_key]) [:bonfire, :random_atom, :sub_key]","ref":"Bonfire.Common.Config.html#keys_tree/1","title":"Bonfire.Common.Config.keys_tree/1","type":"function"},{"doc":"See Bonfire.Common.Extend.module_enabled?/1 .","ref":"Bonfire.Common.Config.html#module_enabled?/1","title":"Bonfire.Common.Config.module_enabled?/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Config.html#put/1","title":"Bonfire.Common.Config.put/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Config.html#put/3","title":"Bonfire.Common.Config.put/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Config.html#repo/0","title":"Bonfire.Common.Config.repo/0","type":"function"},{"doc":"Stop if an Elixir module or extension / OTP app doesn't have configuration keys set up","ref":"Bonfire.Common.Config.html#require_extension_config!/1","title":"Bonfire.Common.Config.require_extension_config!/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Config.html#top_level_otp_app/0","title":"Bonfire.Common.Config.top_level_otp_app/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Config.Error.html","title":"Bonfire.Common.Config.Error","type":"exception"},{"doc":"Loads instance Settings from DB into Elixir's Config While this module is a GenServer, it is only responsible for querying the settings, putting them in Config, and then exits with :ignore having done so.","ref":"Bonfire.Common.Config.LoadExtensionsConfig.html","title":"Bonfire.Common.Config.LoadExtensionsConfig","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Bonfire.Common.Config.LoadExtensionsConfig.html#child_spec/1","title":"Bonfire.Common.Config.LoadExtensionsConfig.child_spec/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Config.LoadExtensionsConfig.html#load_configs/0","title":"Bonfire.Common.Config.LoadExtensionsConfig.load_configs/0","type":"function"},{"doc":"Populates the global cache with table data via introspection.","ref":"Bonfire.Common.Config.LoadExtensionsConfig.html#start_link/1","title":"Bonfire.Common.Config.LoadExtensionsConfig.start_link/1","type":"function"},{"doc":"A Global cache of known config modules to be queried by associated schema, or vice versa. Use of the ConfigModules Service requires: Exporting config_module/0 in relevant modules, returning a Module or otp_app atom To populate :bonfire, :config_modules_search_path in config the list of OTP applications where config_modules are declared. Start the Bonfire.Common.ConfigModules application before querying. OTP 21.2 or greater, though we recommend using the most recent release available. While this module is a GenServer, it is only responsible for setup of the cache and then exits with :ignore having done so. It is not recommended to restart the service as this will lead to a stop the world garbage collection of all processes and the copying of the entire cache to each process that has queried it since its last local garbage collection.","ref":"Bonfire.Common.ConfigModules.html","title":"Bonfire.Common.ConfigModules","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Bonfire.Common.ConfigModules.html#child_spec/1","title":"Bonfire.Common.ConfigModules.child_spec/1","type":"function"},{"doc":"","ref":"Bonfire.Common.ConfigModules.html#config_function_error/2","title":"Bonfire.Common.ConfigModules.config_function_error/2","type":"function"},{"doc":"Look up a config, throw :not_found if not found.","ref":"Bonfire.Common.ConfigModules.html#config_module!/1","title":"Bonfire.Common.ConfigModules.config_module!/1","type":"function"},{"doc":"Get a config identified by schema","ref":"Bonfire.Common.ConfigModules.html#config_module/1","title":"Bonfire.Common.ConfigModules.config_module/1","type":"function"},{"doc":"Look up many configs at once, throw :not_found if any of them are not found","ref":"Bonfire.Common.ConfigModules.html#config_modules/1","title":"Bonfire.Common.ConfigModules.config_modules/1","type":"function"},{"doc":"","ref":"Bonfire.Common.ConfigModules.html#data/0","title":"Bonfire.Common.ConfigModules.data/0","type":"function"},{"doc":"","ref":"Bonfire.Common.ConfigModules.html#maybe_config_module/1","title":"Bonfire.Common.ConfigModules.maybe_config_module/1","type":"function"},{"doc":"","ref":"Bonfire.Common.ConfigModules.html#populate/0","title":"Bonfire.Common.ConfigModules.populate/0","type":"function"},{"doc":"","ref":"Bonfire.Common.ConfigModules.html#search_app_modules/1","title":"Bonfire.Common.ConfigModules.search_app_modules/1","type":"function"},{"doc":"Populates the global cache with config_module data via introspection.","ref":"Bonfire.Common.ConfigModules.html#start_link/1","title":"Bonfire.Common.ConfigModules.start_link/1","type":"function"},{"doc":"A query is either a config_module name atom or (Pointer) id binary","ref":"Bonfire.Common.ConfigModules.html#t:query/0","title":"Bonfire.Common.ConfigModules.query/0","type":"type"},{"doc":"A Global cache of known context modules to be queried by associated schema, or vice versa. Use of the ContextModules Service requires: Exporting context_module/0 in relevant modules (in schemas pointing to context modules and/or in context modules pointing to schemas), returning a Module atom To populate :bonfire, :context_modules_search_path in config the list of OTP applications where context_modules are declared. Start the Bonfire.Common.ContextModules application before querying. OTP 21.2 or greater, though we recommend using the most recent release available. While this module is a GenServer, it is only responsible for setup of the cache and then exits with :ignore having done so. It is not recommended to restart the service as this will lead to a stop the world garbage collection of all processes and the copying of the entire cache to each process that has queried it since its last local garbage collection.","ref":"Bonfire.Common.ContextModules.html","title":"Bonfire.Common.ContextModules","type":"module"},{"doc":"","ref":"Bonfire.Common.ContextModules.html#apply_error/2","title":"Bonfire.Common.ContextModules.apply_error/2","type":"function"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Bonfire.Common.ContextModules.html#child_spec/1","title":"Bonfire.Common.ContextModules.child_spec/1","type":"function"},{"doc":"","ref":"Bonfire.Common.ContextModules.html#context_function_error/2","title":"Bonfire.Common.ContextModules.context_function_error/2","type":"function"},{"doc":"Look up a context, throw :not_found if not found.","ref":"Bonfire.Common.ContextModules.html#context_module!/1","title":"Bonfire.Common.ContextModules.context_module!/1","type":"function"},{"doc":"Get a context identified by schema","ref":"Bonfire.Common.ContextModules.html#context_module/1","title":"Bonfire.Common.ContextModules.context_module/1","type":"function"},{"doc":"Look up many contexts at once, throw :not_found if any of them are not found","ref":"Bonfire.Common.ContextModules.html#context_modules/1","title":"Bonfire.Common.ContextModules.context_modules/1","type":"function"},{"doc":"","ref":"Bonfire.Common.ContextModules.html#data/0","title":"Bonfire.Common.ContextModules.data/0","type":"function"},{"doc":"Given an object or schema module name, run a function on the associated context module.","ref":"Bonfire.Common.ContextModules.html#maybe_apply/4","title":"Bonfire.Common.ContextModules.maybe_apply/4","type":"function"},{"doc":"","ref":"Bonfire.Common.ContextModules.html#maybe_context_module/1","title":"Bonfire.Common.ContextModules.maybe_context_module/1","type":"function"},{"doc":"","ref":"Bonfire.Common.ContextModules.html#populate/0","title":"Bonfire.Common.ContextModules.populate/0","type":"function"},{"doc":"","ref":"Bonfire.Common.ContextModules.html#search_app_modules/1","title":"Bonfire.Common.ContextModules.search_app_modules/1","type":"function"},{"doc":"Populates the global cache with context_module data via introspection.","ref":"Bonfire.Common.ContextModules.html#start_link/1","title":"Bonfire.Common.ContextModules.start_link/1","type":"function"},{"doc":"A query is either a context_module name atom or (Pointer) id binary","ref":"Bonfire.Common.ContextModules.html#t:query/0","title":"Bonfire.Common.ContextModules.query/0","type":"type"},{"doc":"","ref":"Bonfire.Common.DateTimes.html","title":"Bonfire.Common.DateTimes","type":"module"},{"doc":"","ref":"Bonfire.Common.DateTimes.html#future?/1","title":"Bonfire.Common.DateTimes.future?/1","type":"function"},{"doc":"","ref":"Bonfire.Common.DateTimes.html#now/0","title":"Bonfire.Common.DateTimes.now/0","type":"function"},{"doc":"","ref":"Bonfire.Common.DateTimes.html#past?/1","title":"Bonfire.Common.DateTimes.past?/1","type":"function"},{"doc":"Missing functions from Enum","ref":"Bonfire.Common.Enums.html","title":"Bonfire.Common.Enums","type":"module"},{"doc":"","ref":"Bonfire.Common.Enums.html#count_where/2","title":"Bonfire.Common.Enums.count_where/2","type":"function"},{"doc":"Like group_by, except children are required to be unique (will throw otherwise!) and the resulting map does not wrap each item in a list","ref":"Bonfire.Common.Enums.html#group/2","title":"Bonfire.Common.Enums.group/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Enums.html#group_map/2","title":"Bonfire.Common.Enums.group_map/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Extend.html","title":"Bonfire.Common.Extend","type":"module"},{"doc":"","ref":"Bonfire.Common.Extend.html#application_loaded?/1","title":"Bonfire.Common.Extend.application_loaded?/1","type":"function"},{"doc":"Whether an Elixir module or extension / OTP app is present AND not part of a disabled Bonfire extension (by having in config something like config :bonfire_common, disabled: true )","ref":"Bonfire.Common.Extend.html#extension_enabled?/1","title":"Bonfire.Common.Extend.extension_enabled?/1","type":"function"},{"doc":"Whether an Elixir module or extension / OTP app is present","ref":"Bonfire.Common.Extend.html#extension_loaded?/1","title":"Bonfire.Common.Extend.extension_loaded?/1","type":"function"},{"doc":"Whether an Elixir module or extension / OTP app has configuration keys set up","ref":"Bonfire.Common.Extend.html#has_extension_config?/1","title":"Bonfire.Common.Extend.has_extension_config?/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extend.html#import_if_enabled/2","title":"Bonfire.Common.Extend.import_if_enabled/2","type":"macro"},{"doc":"","ref":"Bonfire.Common.Extend.html#loaded_deps/0","title":"Bonfire.Common.Extend.loaded_deps/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Extend.html#maybe_extension_loaded!/1","title":"Bonfire.Common.Extend.maybe_extension_loaded!/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extend.html#maybe_extension_loaded/1","title":"Bonfire.Common.Extend.maybe_extension_loaded/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extend.html#maybe_module_loaded/1","title":"Bonfire.Common.Extend.maybe_module_loaded/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extend.html#maybe_schema_or_pointer/1","title":"Bonfire.Common.Extend.maybe_schema_or_pointer/1","type":"function"},{"doc":"Whether an Elixir module or extension / OTP app is present AND not part of a disabled Bonfire extension (by having in config something like config :bonfire_common, disabled: true ) TODO: also make it possible to disable individual modules in config","ref":"Bonfire.Common.Extend.html#module_enabled?/1","title":"Bonfire.Common.Extend.module_enabled?/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extend.html#module_exists_or/2","title":"Bonfire.Common.Extend.module_exists_or/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Extend.html#module_exists?/1","title":"Bonfire.Common.Extend.module_exists?/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extend.html#quoted_import_if_enabled/2","title":"Bonfire.Common.Extend.quoted_import_if_enabled/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Extend.html#quoted_require_if_enabled/2","title":"Bonfire.Common.Extend.quoted_require_if_enabled/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Extend.html#quoted_use_if_enabled/2","title":"Bonfire.Common.Extend.quoted_use_if_enabled/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Extend.html#require_if_enabled/2","title":"Bonfire.Common.Extend.require_if_enabled/2","type":"macro"},{"doc":"","ref":"Bonfire.Common.Extend.html#use_if_enabled/2","title":"Bonfire.Common.Extend.use_if_enabled/2","type":"macro"},{"doc":"","ref":"Bonfire.Common.Extensions.html","title":"Bonfire.Common.Extensions","type":"module"},{"doc":"","ref":"Bonfire.Common.Extensions.html#data/0","title":"Bonfire.Common.Extensions.data/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.html#deps_list/1","title":"Bonfire.Common.Extensions.deps_list/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.html#get_branch/1","title":"Bonfire.Common.Extensions.get_branch/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.html#get_link/1","title":"Bonfire.Common.Extensions.get_link/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.html#get_version/1","title":"Bonfire.Common.Extensions.get_version/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.html#get_version_link/1","title":"Bonfire.Common.Extensions.get_version_link/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.Diff.html","title":"Bonfire.Common.Extensions.Diff","type":"module"},{"doc":"","ref":"Bonfire.Common.Extensions.Diff.html#analyse_repo_latest_diff_stream/1","title":"Bonfire.Common.Extensions.Diff.analyse_repo_latest_diff_stream/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.Diff.html#generate_diff/1","title":"Bonfire.Common.Extensions.Diff.generate_diff/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.Diff.html#git!/3","title":"Bonfire.Common.Extensions.Diff.git!/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.Diff.html#git_add_all/1","title":"Bonfire.Common.Extensions.Diff.git_add_all/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.Diff.html#git_diff/3","title":"Bonfire.Common.Extensions.Diff.git_diff/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.Diff.html#git_fetch/1","title":"Bonfire.Common.Extensions.Diff.git_fetch/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.Diff.html#git_pre_configure/1","title":"Bonfire.Common.Extensions.Diff.git_pre_configure/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.Diff.html#parse_repo_latest_diff/1","title":"Bonfire.Common.Extensions.Diff.parse_repo_latest_diff/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.Diff.html#repo_latest_diff/1","title":"Bonfire.Common.Extensions.Diff.repo_latest_diff/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Extensions.Diff.html#tmp_path/1","title":"Bonfire.Common.Extensions.Diff.tmp_path/1","type":"function"},{"doc":"Module for building and performing HTTP requests.","ref":"Bonfire.Common.HTTP.html","title":"Bonfire.Common.HTTP","type":"module"},{"doc":"Makes a DELETE request see request/5","ref":"Bonfire.Common.HTTP.html#delete/4","title":"Bonfire.Common.HTTP.delete/4","type":"function"},{"doc":"Makes a GET request see request/5","ref":"Bonfire.Common.HTTP.html#get/3","title":"Bonfire.Common.HTTP.get/3","type":"function"},{"doc":"","ref":"Bonfire.Common.HTTP.html#get_cached/1","title":"Bonfire.Common.HTTP.get_cached/1","type":"function"},{"doc":"Makes a PATCH request see request/5","ref":"Bonfire.Common.HTTP.html#patch/4","title":"Bonfire.Common.HTTP.patch/4","type":"function"},{"doc":"Makes a POST request see request/5","ref":"Bonfire.Common.HTTP.html#post/4","title":"Bonfire.Common.HTTP.post/4","type":"function"},{"doc":"Makes a PUT request see request/5","ref":"Bonfire.Common.HTTP.html#put/4","title":"Bonfire.Common.HTTP.put/4","type":"function"},{"doc":"Builds and perform http request. Arguments: method - :get, :post, :put, :delete url body headers - a keyworld list of headers, e.g. [{&quot;content-type&quot;, &quot;text/plain&quot;}] options - custom, per-request middleware or adapter options Returns: {:ok, %Tesla.Env{}} or {:error, error}","ref":"Bonfire.Common.HTTP.html#request/5","title":"Bonfire.Common.HTTP.request/5","type":"function"},{"doc":"","ref":"Bonfire.Common.HTTP.html#t:t/0","title":"Bonfire.Common.HTTP.t/0","type":"type"},{"doc":"Specifies connection options for HTTP requests","ref":"Bonfire.Common.HTTP.Connection.html","title":"Bonfire.Common.HTTP.Connection","type":"module"},{"doc":"","ref":"Bonfire.Common.HTTP.Connection.html#hackney_options/1","title":"Bonfire.Common.HTTP.Connection.hackney_options/1","type":"function"},{"doc":"","ref":"Bonfire.Common.HTTP.Connection.html#new/1","title":"Bonfire.Common.HTTP.Connection.new/1","type":"function"},{"doc":"Helper functions for building HTTP requests","ref":"Bonfire.Common.HTTP.RequestBuilder.html","title":"Bonfire.Common.HTTP.RequestBuilder","type":"module"},{"doc":"","ref":"Bonfire.Common.HTTP.RequestBuilder.html#add_param/4","title":"Bonfire.Common.HTTP.RequestBuilder.add_param/4","type":"function"},{"doc":"","ref":"Bonfire.Common.HTTP.RequestBuilder.html#headers/2","title":"Bonfire.Common.HTTP.RequestBuilder.headers/2","type":"function"},{"doc":"","ref":"Bonfire.Common.HTTP.RequestBuilder.html#method/2","title":"Bonfire.Common.HTTP.RequestBuilder.method/2","type":"function"},{"doc":"","ref":"Bonfire.Common.HTTP.RequestBuilder.html#opts/2","title":"Bonfire.Common.HTTP.RequestBuilder.opts/2","type":"function"},{"doc":"","ref":"Bonfire.Common.HTTP.RequestBuilder.html#url/2","title":"Bonfire.Common.HTTP.RequestBuilder.url/2","type":"function"},{"doc":"Various helpers for localisation","ref":"Bonfire.Common.Localise.html","title":"Bonfire.Common.Localise","type":"module"},{"doc":"","ref":"Bonfire.Common.Localise.html#default_locale/0","title":"Bonfire.Common.Localise.default_locale/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Localise.html#get_locale/0","title":"Bonfire.Common.Localise.get_locale/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Localise.html#get_locale_id/0","title":"Bonfire.Common.Localise.get_locale_id/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Localise.html#known_locales/0","title":"Bonfire.Common.Localise.known_locales/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Localise.html#locale_name/1","title":"Bonfire.Common.Localise.locale_name/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Localise.html#put_locale/1","title":"Bonfire.Common.Localise.put_locale/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Localise.html#set_locale_config/0","title":"Bonfire.Common.Localise.set_locale_config/0","type":"function"},{"doc":"Provides the core functions to retrieve and manage the CLDR data that supports formatting and localisation. It provides the core functions to access formatted CLDR data, set and retrieve a current locale and validate certain core data types such as locales, currencies and territories.","ref":"Bonfire.Common.Localise.Cldr.html","title":"Bonfire.Common.Localise.Cldr","type":"module"},{"doc":"See Cldr.available_locale_name?/1 .","ref":"Bonfire.Common.Localise.Cldr.html#available_locale_name?/1","title":"Bonfire.Common.Localise.Cldr.available_locale_name?/1","type":"function"},{"doc":"Returns the default locale . Example iex&gt; Bonfire.Common.Localise.Cldr . default_locale ( ) % Cldr.LanguageTag { backend : Bonfire.Common.Localise.Cldr , canonical_locale_name : &quot;en-001&quot; , cldr_locale_name : :&quot;en-001&quot; , language_subtags : [ ] , extensions : %{ } , gettext_locale_name : &quot;en&quot; , language : &quot;en&quot; , locale : %{ } , private_use : [ ] , rbnf_locale_name : :en , requested_locale_name : &quot;en-001&quot; , script : :Latn , territory : :&quot;001&quot; , transform : %{ } , language_variants : [ ] }","ref":"Bonfire.Common.Localise.Cldr.html#default_locale/0","title":"Bonfire.Common.Localise.Cldr.default_locale/0","type":"function"},{"doc":"Returns the default territory when a locale does not specify one and none can be inferred. Example iex&gt; Bonfire.Common.Localise.Cldr . default_territory ( ) :&quot;001&quot;","ref":"Bonfire.Common.Localise.Cldr.html#default_territory/0","title":"Bonfire.Common.Localise.Cldr.default_territory/0","type":"function"},{"doc":"Add locale-specific ellipsis to a string. Arguments string is any String.t or a 2-element list of String.t between which the ellipsis is inserted. backend is any module that includes use Cldr and therefore is a Cldr backend module. The default is Cldr.default_backend!/0 . Note that Cldr.default_backend!/0 will raise an exception if no :default_backend is configured under the :ex_cldr key in config.exs . options is a keyword list of options Options :locale is any valid locale name returned by Cldr.known_locale_names/1 . The default is Cldr.get_locale/0 . :location determines where to place the ellipsis. The options are :after (the default for a single string argument), :between (the default and only valid location for an argument that is a list of two strings) and :before . :format formats based upon whether the ellipsis is inserted between words or sentences. The valid options are :word or :sentence . The default is :sentence . Examples iex&gt; Bonfire.Common.Localise.Cldr . ellipsis &quot;And furthermore&quot; &quot;And furthermore…&quot; iex&gt; Bonfire.Common.Localise.Cldr . ellipsis [ &quot;And furthermore&quot; , &quot;there is much to be done&quot; ] , locale : :ja &quot;And furthermore…there is much to be done&quot; iex&gt; Bonfire.Common.Localise.Cldr . ellipsis &quot;And furthermore&quot; , format : :word &quot;And furthermore …&quot; iex&gt; Bonfire.Common.Localise.Cldr . ellipsis [ &quot;And furthermore&quot; , &quot;there is much to be done&quot; ] , locale : :ja , format : :word &quot;And furthermore … there is much to be done&quot;","ref":"Bonfire.Common.Localise.Cldr.html#ellipsis/2","title":"Bonfire.Common.Localise.Cldr.ellipsis/2","type":"function"},{"doc":"Return the current locale to be used for Cldr functions that take an optional locale parameter for which a locale is not supplied. Example iex&gt; Bonfire.Common.Localise.Cldr . put_locale ( &quot;pl&quot; ) iex&gt; Bonfire.Common.Localise.Cldr . get_locale % Cldr.LanguageTag { backend : Elixir.Bonfire.Common.Localise.Cldr , canonical_locale_name : &quot;pl&quot; , cldr_locale_name : :pl , extensions : %{ } , language : &quot;pl&quot; , locale : %{ } , private_use : [ ] , rbnf_locale_name : :pl , territory : :PL , requested_locale_name : &quot;pl&quot; , script : :Latn , transform : %{ } , language_variants : [ ] }","ref":"Bonfire.Common.Localise.Cldr.html#get_locale/0","title":"Bonfire.Common.Localise.Cldr.get_locale/0","type":"function"},{"doc":"See Cldr.known_calendars/0 .","ref":"Bonfire.Common.Localise.Cldr.html#known_calendars/0","title":"Bonfire.Common.Localise.Cldr.known_calendars/0","type":"function"},{"doc":"See Cldr.known_currencies/0 .","ref":"Bonfire.Common.Localise.Cldr.html#known_currencies/0","title":"Bonfire.Common.Localise.Cldr.known_currencies/0","type":"function"},{"doc":"Returns either the Gettext locale_name in Cldr format or false based upon whether the locale name is configured in Gettext . Arguments locale is any valid locale name returned by Bonfire.Common.Localise.Cldr.known_gettext_locale_names/0 Examples iex&gt; Bonfire.Common.Localise.Cldr . known_gettext_locale_name &quot;en&quot; &quot;en&quot; iex&gt; Bonfire.Common.Localise.Cldr . known_gettext_locale_name &quot;en-SA&quot; false","ref":"Bonfire.Common.Localise.Cldr.html#known_gettext_locale_name/1","title":"Bonfire.Common.Localise.Cldr.known_gettext_locale_name/1","type":"function"},{"doc":"Returns a boolean indicating if the specified locale name is configured and available in Gettext. Arguments locale is any valid locale name returned by Bonfire.Common.Localise.Cldr.known_locale_names/0 Examples iex&gt; Bonfire.Common.Localise.Cldr . known_gettext_locale_name? ( &quot;en&quot; ) true iex&gt; Bonfire.Common.Localise.Cldr . known_gettext_locale_name? ( &quot;!!&quot; ) false","ref":"Bonfire.Common.Localise.Cldr.html#known_gettext_locale_name?/1","title":"Bonfire.Common.Localise.Cldr.known_gettext_locale_name?/1","type":"function"},{"doc":"Returns a list of GetText locale names but in CLDR format with underscore replaced by hyphen in order to facilitate comparisons with Cldr locale names.","ref":"Bonfire.Common.Localise.Cldr.html#known_gettext_locale_names/0","title":"Bonfire.Common.Localise.Cldr.known_gettext_locale_names/0","type":"function"},{"doc":"Returns either the locale_name or false based upon whether the locale name is configured in Cldr . This is helpful when building a list of or expressions to return the first known locale name from a list. Arguments locale is any valid locale name returned by Bonfire.Common.Localise.Cldr.known_locale_names/0 Examples iex&gt; Bonfire.Common.Localise.Cldr . known_locale_name :&quot;en-AU&quot; :&quot;en-AU&quot; iex&gt; Bonfire.Common.Localise.Cldr . known_locale_name :&quot;en-SA&quot; false","ref":"Bonfire.Common.Localise.Cldr.html#known_locale_name/1","title":"Bonfire.Common.Localise.Cldr.known_locale_name/1","type":"function"},{"doc":"Returns a boolean indicating if the specified locale name is configured and available in Cldr. Arguments locale is any valid locale name returned by Bonfire.Common.Localise.Cldr.known_locale_names/0 Examples iex&gt; Bonfire.Common.Localise.Cldr . known_locale_name? ( :en ) true iex&gt; Bonfire.Common.Localise.Cldr . known_locale_name? ( :&quot;!!&quot; ) false","ref":"Bonfire.Common.Localise.Cldr.html#known_locale_name?/1","title":"Bonfire.Common.Localise.Cldr.known_locale_name?/1","type":"function"},{"doc":"Returns a list of the known locale names. Known locales are those locales which are the subset of all CLDR locales that have been configured for use either in this module or in Gettext .","ref":"Bonfire.Common.Localise.Cldr.html#known_locale_names/0","title":"Bonfire.Common.Localise.Cldr.known_locale_names/0","type":"function"},{"doc":"Returns a list of atoms representing the number systems types known to Cldr . Example iex&gt; Bonfire.Common.Localise.Cldr . known_number_system_types [ :default , :finance , :native , :traditional ]","ref":"Bonfire.Common.Localise.Cldr.html#known_number_system_types/0","title":"Bonfire.Common.Localise.Cldr.known_number_system_types/0","type":"function"},{"doc":"See Cldr.known_number_systems/0 .","ref":"Bonfire.Common.Localise.Cldr.html#known_number_systems/0","title":"Bonfire.Common.Localise.Cldr.known_number_systems/0","type":"function"},{"doc":"Returns either the RBNF locale_name or false based upon whether the locale name is configured in Cldr and has RBNF rules defined. Arguments locale is any valid locale name returned by Bonfire.Common.Localise.Cldr.known_locale_names/0 Examples iex&gt; Bonfire.Common.Localise.Cldr . known_rbnf_locale_name :en :en iex&gt; Bonfire.Common.Localise.Cldr . known_rbnf_locale_name :&quot;en-SA&quot; false","ref":"Bonfire.Common.Localise.Cldr.html#known_rbnf_locale_name/1","title":"Bonfire.Common.Localise.Cldr.known_rbnf_locale_name/1","type":"function"},{"doc":"Returns a boolean indicating if the specified locale name is configured and available in Cldr and supports rules based number formats (RBNF). Arguments locale is any valid locale name returned by Bonfire.Common.Localise.Cldr.known_locale_names/0 Examples iex&gt; Bonfire.Common.Localise.Cldr . known_rbnf_locale_name? ( :en ) true iex&gt; Bonfire.Common.Localise.Cldr . known_rbnf_locale_name? ( :&quot;!!&quot; ) false","ref":"Bonfire.Common.Localise.Cldr.html#known_rbnf_locale_name?/1","title":"Bonfire.Common.Localise.Cldr.known_rbnf_locale_name?/1","type":"function"},{"doc":"Returns a list of locale names which have rules-based number formats (RBNF).","ref":"Bonfire.Common.Localise.Cldr.html#known_rbnf_locale_names/0","title":"Bonfire.Common.Localise.Cldr.known_rbnf_locale_names/0","type":"function"},{"doc":"See Cldr.known_territories/0 .","ref":"Bonfire.Common.Localise.Cldr.html#known_territories/0","title":"Bonfire.Common.Localise.Cldr.known_territories/0","type":"function"},{"doc":"Normalizes a string by applying transliteration of common symbols in numbers, currencies and dates","ref":"Bonfire.Common.Localise.Cldr.html#normalize_lenient_parse/3","title":"Bonfire.Common.Localise.Cldr.normalize_lenient_parse/3","type":"function"},{"doc":"Set the current locale to be used for Cldr functions that take an optional locale parameter for which a locale is not supplied. Arguments locale is any valid locale name returned by Bonfire.Common.Localise.Cldr.known_locale_names/0 or a t:Cldr.LanguageTag struct returned by Bonfire.Common.Localise.Cldr.Locale.new!/1 See rfc5646 for the specification of a language tag. Examples iex&gt; Bonfire.Common.Localise.Cldr . put_locale ( &quot;en&quot; ) { :ok , % Cldr.LanguageTag { backend : Bonfire.Common.Localise.Cldr , canonical_locale_name : &quot;en&quot; , cldr_locale_name : :en , language_subtags : [ ] , extensions : %{ } , gettext_locale_name : &quot;en&quot; , language : &quot;en&quot; , locale : %{ } , private_use : [ ] , rbnf_locale_name : :en , requested_locale_name : &quot;en&quot; , script : :Latn , territory : :US , transform : %{ } , language_variants : [ ] } } iex&gt; Bonfire.Common.Localise.Cldr . put_locale ( &quot;invalid-locale!&quot; ) { :error , { Cldr.LanguageTag.ParseError , &quot;Expected a BCP47 language tag. Could not parse the remaining \\&quot; ! \\&quot; starting at position 15&quot; } }","ref":"Bonfire.Common.Localise.Cldr.html#put_locale/1","title":"Bonfire.Common.Localise.Cldr.put_locale/1","type":"function"},{"doc":"Add locale-specific quotation marks around a string. Arguments string is any valid Elixir string options is a keyword list of options Options locale is any valid locale name returned by Cldr.known_locale_names/1 . The default is Cldr.get_locale/0 Examples iex&gt; Bonfire.Common.Localise.Cldr . quote &quot;Quoted String&quot; &quot;“Quoted String”&quot; iex&gt; Bonfire.Common.Localise.Cldr . quote &quot;Quoted String&quot; , locale : :ja &quot;「Quoted String」&quot;","ref":"Bonfire.Common.Localise.Cldr.html#quote/2","title":"Bonfire.Common.Localise.Cldr.quote/2","type":"function"},{"doc":"Returns a list of the locales names that are configured, but not known in CLDR. Since there is a compile-time exception raised if there are any unknown locales this function should always return an empty list.","ref":"Bonfire.Common.Localise.Cldr.html#unknown_locale_names/0","title":"Bonfire.Common.Localise.Cldr.unknown_locale_names/0","type":"function"},{"doc":"See Cldr.validate_calendar/1 .","ref":"Bonfire.Common.Localise.Cldr.html#validate_calendar/1","title":"Bonfire.Common.Localise.Cldr.validate_calendar/1","type":"function"},{"doc":"See Cldr.validate_currency/1 .","ref":"Bonfire.Common.Localise.Cldr.html#validate_currency/1","title":"Bonfire.Common.Localise.Cldr.validate_currency/1","type":"function"},{"doc":"Normalise and validate a locale name. Arguments locale is any valid locale name returned by Bonfire.Common.Localise.Cldr.known_locale_names/0 or a Cldr.LanguageTag struct returned by Bonfire.Common.Localise.Cldr.Locale.new!/1 Returns {:ok, language_tag} {:error, reason} Notes See rfc5646 for the specification of a language tag. Examples iex&gt; Bonfire.Common.Localise.Cldr . validate_locale ( :en ) { :ok , % Cldr.LanguageTag { backend : Bonfire.Common.Localise.Cldr , canonical_locale_name : &quot;en&quot; , cldr_locale_name : :en , extensions : %{ } , gettext_locale_name : &quot;en&quot; , language : &quot;en&quot; , locale : %{ } , private_use : [ ] , rbnf_locale_name : :en , requested_locale_name : &quot;en&quot; , script : :Latn , territory : :US , transform : %{ } , language_variants : [ ] } } iex&gt; Bonfire.Common.Localise.Cldr . validate_locale Bonfire.Common.Localise.Cldr . default_locale ( ) { :ok , % Cldr.LanguageTag { backend : Bonfire.Common.Localise.Cldr , canonical_locale_name : &quot;en-001&quot; , cldr_locale_name : :&quot;en-001&quot; , extensions : %{ } , gettext_locale_name : &quot;en&quot; , language : &quot;en&quot; , locale : %{ } , private_use : [ ] , rbnf_locale_name : :en , requested_locale_name : &quot;en-001&quot; , script : :Latn , territory : :&quot;001&quot; , transform : %{ } , language_variants : [ ] } } iex&gt; Bonfire.Common.Localise.Cldr . validate_locale ( &quot;zzz&quot; ) { :error , { Cldr.InvalidLanguageError , &quot;The language \\&quot; zzz \\&quot; is invalid&quot; } }","ref":"Bonfire.Common.Localise.Cldr.html#validate_locale/1","title":"Bonfire.Common.Localise.Cldr.validate_locale/1","type":"function"},{"doc":"See Cldr.validate_number_system/1 .","ref":"Bonfire.Common.Localise.Cldr.html#validate_number_system/1","title":"Bonfire.Common.Localise.Cldr.validate_number_system/1","type":"function"},{"doc":"Normalise and validate a number system type. Arguments number_system_type is any number system type returned by Cldr.known_number_system_types/1 Returns {:ok, normalized_number_system_type} or {:error, {exception, message}} Examples iex&gt; Bonfire.Common.Localise.Cldr . validate_number_system_type :default { :ok , :default } iex&gt; Bonfire.Common.Localise.Cldr . validate_number_system_type :traditional { :ok , :traditional } iex&gt; Bonfire.Common.Localise.Cldr . validate_number_system_type :latn { :error , { Cldr.UnknownNumberSystemTypeError , &quot;The number system type :latn is unknown&quot; } } iex&gt; Bonfire.Common.Localise.Cldr . validate_number_system_type &quot;bork&quot; { :error , { Cldr.UnknownNumberSystemTypeError , &quot;The number system type \\&quot; bork \\&quot; is invalid&quot; } }","ref":"Bonfire.Common.Localise.Cldr.html#validate_number_system_type/1","title":"Bonfire.Common.Localise.Cldr.validate_number_system_type/1","type":"function"},{"doc":"See Cldr.validate_territory/1 .","ref":"Bonfire.Common.Localise.Cldr.html#validate_territory/1","title":"Bonfire.Common.Localise.Cldr.validate_territory/1","type":"function"},{"doc":"Execute a function with a locale ensuring that the current locale is restored after the function. Arguments locale is any valid locale name returned by Cldr.known_locale_names/1 . fun is any 0-arity function or function capture. Returns The value returned by the function fun/0 or {:error, {exception, reason}} if the locale is invalid or raises an exception if the current locale cannot be identified.","ref":"Bonfire.Common.Localise.Cldr.html#with_locale/2","title":"Bonfire.Common.Localise.Cldr.with_locale/2","type":"function"},{"doc":"Parses HTTP Accept-Language header values as defined in rfc2616 . The Accept-Language request-header field is similar to Accept, but restricts the set of natural languages that are preferred as a response to the request. Language tags function are provided in Cldr.LanguageTag . The format of an Accept-Language header is as follows in ABNF format: Accept - Language = &quot;Accept-Language&quot; &quot;:&quot; 1 #( language-range [ &quot;;&quot; &quot;q&quot; &quot;=&quot; qvalue ] ) language - range = ( ( 1 * 8 ALPHA * ( &quot;-&quot; 1 * 8 ALPHA ) ) | &quot;*&quot; ) Each language-range MAY be given an associated quality value which represents an estimate of the user's preference for the languages specified by that range. The quality value defaults to &quot;q=1&quot;. For example, Accept - Language : da , en - gb ; q = 0.8 , en ; q = 0.7 would mean: &quot;I prefer Danish, but will accept British English and other types of English.&quot;","ref":"Bonfire.Common.Localise.Cldr.AcceptLanguage.html","title":"Bonfire.Common.Localise.Cldr.AcceptLanguage","type":"module"},{"doc":"Parse an Accept-Language string and return the best match for a configured Cldr locale. Arguments accept_langauge is a string representing an accept language header Returns {:ok, language_tag} or {:error, reason} Examples iex&gt; Bonfire.Common.Localise.Cldr.AcceptLanguage . best_match ( &quot;da;q=0.1,zh-TW;q=0.3&quot; , TestBackend.Cldr ) { :ok , % Cldr.LanguageTag { backend : TestBackend.Cldr , canonical_locale_name : &quot;zh-TW&quot; , cldr_locale_name : :&quot;zh-Hant&quot; , language_subtags : [ ] , extensions : %{ } , gettext_locale_name : nil , language : &quot;zh&quot; , locale : %{ } , private_use : [ ] , rbnf_locale_name : :&quot;zh-Hant&quot; , requested_locale_name : &quot;zh-TW&quot; , script : :Hant , territory : :TW , transform : %{ } , language_variants : [ ] } } iex&gt; Bonfire.Common.Localise.Cldr.AcceptLanguage . best_match ( &quot;da;q=0.1,zh-TW;q=0.3&quot; , TestBackend.Cldr ) { :ok , % Cldr.LanguageTag { backend : TestBackend.Cldr , canonical_locale_name : &quot;zh-TW&quot; , cldr_locale_name : :&quot;zh-Hant&quot; , language_subtags : [ ] , extensions : %{ } , gettext_locale_name : nil , language : &quot;zh&quot; , locale : %{ } , private_use : [ ] , rbnf_locale_name : :&quot;zh-Hant&quot; , requested_locale_name : &quot;zh-TW&quot; , script : :Hant , territory : :TW , transform : %{ } , language_variants : [ ] } } iex&gt; Bonfire.Common.Localise.Cldr.AcceptLanguage . best_match ( &quot;xx,yy;q=0.3&quot; ) { :error , { Cldr.NoMatchingLocale , &quot;No configured locale could be matched to \\&quot; xx,yy;q=0.3 \\&quot; &quot; } } iex&gt; Bonfire.Common.Localise.Cldr.AcceptLanguage . best_match ( &quot;invalid_tag&quot; ) { :error , { Cldr.LanguageTag.ParseError , &quot;Expected a BCP47 language tag. Could not parse the remaining \\&quot; g \\&quot; starting at position 11&quot; } }","ref":"Bonfire.Common.Localise.Cldr.AcceptLanguage.html#best_match/1","title":"Bonfire.Common.Localise.Cldr.AcceptLanguage.best_match/1","type":"function"},{"doc":"Parses an Accept-Language header value in its string or tokenized form to produce a list of tuples of the form [{quality, %Cldr.LanguageTag{}}, ...] sorted by quality in descending order. Arguments accept-language is any string in the format defined by rfc2616 Returns {:ok, [{quality, language_tag}, ...]} or raises a Cldr.AcceptLanguageError exception If at least one valid language tag is found but errors are also detected on one more more tags, an {ok, list} tuple is returned wuth an error tuple for each invalid tag added at the end of the list. Example iex&gt; Bonfire.Common.Localise.Cldr.AcceptLanguage . parse! ( &quot;da,zh-TW;q=0.3&quot; ) [ { 1.0 , % Cldr.LanguageTag { backend : TestBackend.Cldr , canonical_locale_name : &quot;da&quot; , cldr_locale_name : :da , language_subtags : [ ] , extensions : %{ } , gettext_locale_name : nil , language : &quot;da&quot; , locale : %{ } , private_use : [ ] , rbnf_locale_name : :da , requested_locale_name : &quot;da&quot; , script : :Latn , territory : :DK , transform : %{ } , language_variants : [ ] } } , { 0.3 , % Cldr.LanguageTag { backend : TestBackend.Cldr , canonical_locale_name : &quot;zh-TW&quot; , cldr_locale_name : :&quot;zh-Hant&quot; , language_subtags : [ ] , extensions : %{ } , gettext_locale_name : nil , language : &quot;zh&quot; , locale : %{ } , private_use : [ ] , rbnf_locale_name : :&quot;zh-Hant&quot; , requested_locale_name : &quot;zh-TW&quot; , script : :Hant , territory : :TW , transform : %{ } , language_variants : [ ] } } ] Bonfire.Common.Localise.Cldr.AcceptLanguage . parse! &quot;invalid_tag&quot; ** (Cldr.AcceptLanguageError) &quot;Expected a BCP47 language tag. Could not parse the remaining &quot;g&quot; starting at position 11 (ex_cldr) lib/cldr/accept_language.ex:304: Cldr.AcceptLanguage.parse!/1 iex&gt; Bonfire.Common.Localise.Cldr.AcceptLanguage . parse! ( &quot;da,zh-TW;q=0.3,invalid_tag&quot; ) [ { 1.0 , % Cldr.LanguageTag { backend : TestBackend.Cldr , canonical_locale_name : &quot;da&quot; , cldr_locale_name : :da , language_subtags : [ ] , extensions : %{ } , gettext_locale_name : nil , language : &quot;da&quot; , locale : %{ } , private_use : [ ] , rbnf_locale_name : :da , requested_locale_name : &quot;da&quot; , script : :Latn , territory : :DK , transform : %{ } , language_variants : [ ] } } , { 0.3 , % Cldr.LanguageTag { backend : TestBackend.Cldr , canonical_locale_name : &quot;zh-TW&quot; , cldr_locale_name : :&quot;zh-Hant&quot; , language_subtags : [ ] , extensions : %{ } , gettext_locale_name : nil , language : &quot;zh&quot; , locale : %{ } , private_use : [ ] , rbnf_locale_name : :&quot;zh-Hant&quot; , requested_locale_name : &quot;zh-TW&quot; , script : :Hant , territory : :TW , transform : %{ } , language_variants : [ ] } } , { :error , { Cldr.LanguageTag.ParseError , &quot;Expected a BCP47 language tag. Could not parse the remaining \\&quot; g \\&quot; starting at position 11&quot; } } ]","ref":"Bonfire.Common.Localise.Cldr.AcceptLanguage.html#parse!/1","title":"Bonfire.Common.Localise.Cldr.AcceptLanguage.parse!/1","type":"function"},{"doc":"Parses an Accept-Language header value in its string or tokenized form to return a tuple of the form {:ok, [{quality, %Cldr.LanguageTag{}}, ...]} sorted by quality. Arguments accept-language is any string in the format defined by rfc2616 backend is any module that includes use Cldr and therefore is a Cldr backend module Returns {:ok, [{quality, language_tag}, ...]} or {:error, {Cldr.AcceptLanguageError, String.t}} If at least one valid language tag is found but errors are also detected on one more more tags, an {ok, list} tuple is returned wuth an error tuple for each invalid tag added at the end of the list. Example iex&gt; Cldr.AcceptLanguage . parse ( &quot;da,zh-TW;q=0.3&quot; , TestBackend.Cldr ) { :ok , [ { 1.0 , % Cldr.LanguageTag { backend : TestBackend.Cldr , canonical_locale_name : &quot;da&quot; , cldr_locale_name : :da , language_subtags : [ ] , extensions : %{ } , gettext_locale_name : nil , language : &quot;da&quot; , locale : %{ } , private_use : [ ] , rbnf_locale_name : :da , requested_locale_name : &quot;da&quot; , script : :Latn , territory : :DK , transform : %{ } , language_variants : [ ] } } , { 0.3 , % Cldr.LanguageTag { backend : TestBackend.Cldr , canonical_locale_name : &quot;zh-TW&quot; , cldr_locale_name : :&quot;zh-Hant&quot; , language_subtags : [ ] , extensions : %{ } , gettext_locale_name : nil , language : &quot;zh&quot; , locale : %{ } , private_use : [ ] , rbnf_locale_name : :&quot;zh-Hant&quot; , requested_locale_name : &quot;zh-TW&quot; , script : :Hant , territory : :TW , transform : %{ } , language_variants : [ ] } } ] } iex&gt; Bonfire.Common.Localise.Cldr.AcceptLanguage . parse ( &quot;invalid_tag&quot; ) { :error , { Cldr.LanguageTag.ParseError , &quot;Expected a BCP47 language tag. Could not parse the remaining \\&quot; g \\&quot; starting at position 11&quot; } } iex&gt; Bonfire.Common.Localise.Cldr.AcceptLanguage . parse ( &quot;da,zh-TW;q=0.3,invalid_tag&quot; ) { :ok , [ { 1.0 , % Cldr.LanguageTag { backend : TestBackend.Cldr , canonical_locale_name : &quot;da&quot; , cldr_locale_name : :da , language_subtags : [ ] , extensions : %{ } , gettext_locale_name : nil , language : &quot;da&quot; , locale : %{ } , private_use : [ ] , rbnf_locale_name : :da , requested_locale_name : &quot;da&quot; , script : :Latn , territory : :DK , transform : %{ } , language_variants : [ ] } } , { 0.3 , % Cldr.LanguageTag { backend : TestBackend.Cldr , canonical_locale_name : &quot;zh-TW&quot; , cldr_locale_name : :&quot;zh-Hant&quot; , language_subtags : [ ] , extensions : %{ } , gettext_locale_name : nil , language : &quot;zh&quot; , locale : %{ } , private_use : [ ] , rbnf_locale_name : :&quot;zh-Hant&quot; , requested_locale_name : &quot;zh-TW&quot; , script : :Hant , territory : :TW , transform : %{ } , language_variants : [ ] } } , { :error , { Cldr.LanguageTag.ParseError , &quot;Expected a BCP47 language tag. Could not parse the remaining \\&quot; g \\&quot; starting at position 11&quot; } } ] }","ref":"Bonfire.Common.Localise.Cldr.AcceptLanguage.html#parse/1","title":"Bonfire.Common.Localise.Cldr.AcceptLanguage.parse/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Localise.Cldr.Language.html","title":"Bonfire.Common.Localise.Cldr.Language","type":"module"},{"doc":"Return all the languages' iso-codes available for a given locale. Defaults to the current locale. Example &gt; Bonfire.Common.Localise.Cldr.Language.Language . available_languages ( :en ) [ &quot;aa&quot; , &quot;ab&quot; , &quot;ace&quot; , &quot;ach&quot; , &quot;ada&quot; , &quot;ady&quot; , &quot;ae&quot; , &quot;aeb&quot; , &quot;af&quot; , &quot;afh&quot; , &quot;agq&quot; , &quot;ain&quot; , &quot;ak&quot; , &quot;akk&quot; , &quot;akz&quot; , &quot;ale&quot; , &quot;aln&quot; , &quot;alt&quot; , &quot;am&quot; , &quot;an&quot; , &quot;ang&quot; , &quot;anp&quot; , &quot;ar&quot; , &quot;ar-001&quot; , &quot;arc&quot; , &quot;arn&quot; , &quot;aro&quot; , &quot;arp&quot; , &quot;arq&quot; , &quot;ars&quot; , &quot;arw&quot; , &quot;ary&quot; , &quot;arz&quot; , &quot;as&quot; , &quot;asa&quot; , &quot;ase&quot; , &quot;ast&quot; , &quot;av&quot; , &quot;avk&quot; , &quot;awa&quot; , &quot;ay&quot; , &quot;az&quot; , &quot;ba&quot; , &quot;bal&quot; , &quot;ban&quot; , &quot;bar&quot; , &quot;bas&quot; , &quot;bax&quot; , &quot;bbc&quot; , &quot;bbj&quot; , ... ]","ref":"Bonfire.Common.Localise.Cldr.Language.html#available_languages/1","title":"Bonfire.Common.Localise.Cldr.Language.available_languages/1","type":"function"},{"doc":"Return a map of iso-code keyed maps of language names in any available formats for the given locale. Defaults to the current locale. Example &gt; Bonfire.Common.Localise.Cldr.Language.Language . known_languages ( :en ) %{ &quot;bez&quot; =&gt; %{ standard : &quot;Bena&quot; } , &quot;lo&quot; =&gt; %{ standard : &quot;Lao&quot; } , &quot;kha&quot; =&gt; %{ standard : &quot;Khasi&quot; } , &quot;eo&quot; =&gt; %{ standard : &quot;Esperanto&quot; } , &quot;rm&quot; =&gt; %{ standard : &quot;Romansh&quot; } , &quot;ja&quot; =&gt; %{ standard : &quot;Japanese&quot; } , &quot;sw-CD&quot; =&gt; %{ standard : &quot;Congo Swahili&quot; } , &quot;pdc&quot; =&gt; %{ standard : &quot;Pennsylvania German&quot; } , &quot;om&quot; =&gt; %{ standard : &quot;Oromo&quot; } , &quot;jut&quot; =&gt; %{ standard : &quot;Jutish&quot; } , &quot;lij&quot; =&gt; %{ standard : &quot;Ligurian&quot; } , &quot;kut&quot; =&gt; %{ standard : &quot;Kutenai&quot; } , &quot;vep&quot; =&gt; %{ standard : &quot;Veps&quot; } , &quot;yao&quot; =&gt; %{ standard : &quot;Yao&quot; } , &quot;gez&quot; =&gt; %{ standard : &quot;Geez&quot; } , &quot;cr&quot; =&gt; %{ standard : &quot;Cree&quot; } , &quot;ne&quot; =&gt; %{ standard : &quot;Nepali&quot; } , &quot;zbl&quot; =&gt; %{ standard : &quot;Blissymbols&quot; } , &quot;ae&quot; =&gt; %{ standard : &quot;Avestan&quot; } , &quot;rof&quot; =&gt; %{ standard : &quot;Rombo&quot; } , &quot;tkl&quot; =&gt; %{ standard : &quot;Tokelau&quot; } , &quot;rgn&quot; =&gt; %{ standard : &quot;Romagnol&quot; } , &quot;el&quot; =&gt; %{ standard : &quot;Greek&quot; } , &quot;myv&quot; =&gt; %{ standard : &quot;Erzya&quot; } , &quot;smj&quot; =&gt; %{ standard : &quot;Lule Sami&quot; } , &quot;fo&quot; =&gt; %{ standard : &quot;Faroese&quot; } , &quot;ii&quot; =&gt; %{ standard : &quot;Sichuan Yi&quot; } , &quot;bum&quot; =&gt; %{ standard : &quot;Bulu&quot; } , &quot;za&quot; =&gt; %{ standard : &quot;Zhuang&quot; } , &quot;raj&quot; =&gt; %{ standard : &quot;Rajasthani&quot; } , &quot;mrj&quot; =&gt; %{ standard : &quot;Western Mari&quot; } , &quot;stq&quot; =&gt; %{ standard : &quot;Saterland Frisian&quot; } , &quot;hu&quot; =&gt; %{ standard : &quot;Hungarian&quot; } , &quot;mga&quot; =&gt; %{ standard : &quot;Middle Irish&quot; } , &quot;bej&quot; =&gt; %{ standard : &quot;Beja&quot; } , &quot;yue&quot; =&gt; %{ standard : &quot;Cantonese&quot; } , &quot;xog&quot; =&gt; %{ standard : &quot;Soga&quot; } , &quot;ttt&quot; =&gt; %{ standard : &quot;Muslim Tat&quot; } , &quot;uga&quot; =&gt; %{ standard : &quot;Ugaritic&quot; } , &quot;rup&quot; =&gt; %{ standard : &quot;Aromanian&quot; } , &quot;crs&quot; =&gt; %{ standard : &quot;Seselwa Creole French&quot; } , &quot;oc&quot; =&gt; %{ standard : &quot;Occitan&quot; } , &quot;chp&quot; =&gt; %{ standard : &quot;Chipewyan&quot; } , &quot;zen&quot; =&gt; %{ standard : &quot;Zenaga&quot; } , &quot;kmb&quot; =&gt; %{ standard : &quot;Kimbundu&quot; } , &quot;nr&quot; =&gt; %{ standard : &quot;South Ndebele&quot; } , &quot;tiv&quot; =&gt; %{ standard : &quot;Tiv&quot; } , &quot;aln&quot; =&gt; %{ standard : &quot;Gheg Albanian&quot; } , &quot;sh&quot; =&gt; %{ standard : &quot;Serbo-Croatian&quot; } , &quot;fil&quot; =&gt; %{ ... } , ... }","ref":"Bonfire.Common.Localise.Cldr.Language.html#known_languages/1","title":"Bonfire.Common.Localise.Cldr.Language.known_languages/1","type":"function"},{"doc":"Try to translate the given language iso code or language tag. Example iex&gt; Bonfire.Common.Localise.Cldr.Language.Language . to_string ( &quot;eo&quot; ) { :ok , &quot;Esperanto&quot; }","ref":"Bonfire.Common.Localise.Cldr.Language.html#to_string/2","title":"Bonfire.Common.Localise.Cldr.Language.to_string/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Localise.Cldr.Language.html#t:styles/0","title":"Bonfire.Common.Localise.Cldr.Language.styles/0","type":"type"},{"doc":"Backend module that provides functions to define new locales and display human-readable locale names for presentation purposes.","ref":"Bonfire.Common.Localise.Cldr.Locale.html","title":"Bonfire.Common.Localise.Cldr.Locale","type":"module"},{"doc":"Returns the list of fallback locale names, starting with the provided locale name. Fallbacks are a list of locate names which can be used to resolve translation or other localization data if such localised data does not exist for this specific locale. After locale-specific fallbacks are determined, the the default locale and its fallbacks are added to the chain. Arguments locale_name is any locale name returned by Bonfire.Common.Localise.Cldr.known_locale_names/0 Returns {:ok, list_of_locale_names} or {:error, {exception, reason}} Examples In these examples the default locale is :&quot;en-001&quot; . iex&gt; Bonfire.Common.Localise.Cldr.Locale . fallback_locale_names ( :&quot;fr-CA&quot; ) { :ok , [ :&quot;fr-CA&quot; , :fr , :&quot;en-001&quot; , :en ] } # Fallbacks are typically formed by progressively # stripping variant, territory and script from the # given locale name. But not always - there are # certain fallbacks that take a different path. iex&gt; Bonfire.Common.Localise.Cldr.Locale . fallback_locale_names ( :nb ) { :ok , [ :nb , :no , :&quot;en-001&quot; , :en ] }","ref":"Bonfire.Common.Localise.Cldr.Locale.html#fallback_locale_names/1","title":"Bonfire.Common.Localise.Cldr.Locale.fallback_locale_names/1","type":"function"},{"doc":"Returns the list of fallback locales, starting with the provided locale name. Fallbacks are a list of locate names which can be used to resolve translation or other localization data if such localised data does not exist for this specific locale. After locale-specific fallbacks are determined, the the default locale and its fallbacks are added to the chain. Arguments locale_name is any locale name returned by Bonfire.Common.Localise.Cldr.known_locale_names/0 Returns {:ok, list_of_locales} or {:error, {exception, reason}} Examples In these examples the default locale is :&quot;en-001&quot; . Bonfire.Common.Localise.Cldr.Locale . fallback_locales ( :&quot;fr-CA&quot; ) =&gt; { :ok , [ # Cldr.LanguageTag &lt; fr - CA [ validated ] &gt; , # Cldr.LanguageTag &lt; fr [ validated ] &gt; , # Cldr.LanguageTag &lt; en [ validated ] &gt; ] } # Fallbacks are typically formed by progressively # stripping variant, territory and script from the # given locale name. But not always - there are # certain fallbacks that take a different path. Bonfire.Common.Localise.Cldr.Locale . fallback_locales ( :nb ) ) =&gt; { :ok , [ # Cldr.LanguageTag &lt; nb [ validated ] &gt; , # Cldr.LanguageTag &lt; no [ validated ] &gt; , # Cldr.LanguageTag &lt; en [ validated ] &gt; ] }","ref":"Bonfire.Common.Localise.Cldr.Locale.html#fallback_locales/1","title":"Bonfire.Common.Localise.Cldr.Locale.fallback_locales/1","type":"function"},{"doc":"Returns the &quot;best fit&quot; locale for a given territory. Using the population percentage data from CLDR, the language most commonly spoken in the given territory is used to form a locale name which is then validated against the given backend. First a territory-specific locale is validated and if that fails, the base language only is validate. For example, if the territory is AU then then the language most spoken is &quot;en&quot;. First, the locale &quot;en-AU&quot; is validated and if that fails, &quot;en&quot; is validated. Arguments territory is any ISO 3166 Alpha-2 territory code that can be validated by Cldr.validate_territory/1 Returns {:ok, language_tag} or {:error, {exception, reason}} Examples iex&gt; Bonfire.Common.Localise.Cldr.Locale.locale_for_territory(:AU) Elixir.Bonfire.Common.Localise.Cldr.validate_locale(:&quot;en-AU&quot;) iex&gt; Bonfire.Common.Localise.Cldr.Locale.locale_for_territory(:US) Elixir.Bonfire.Common.Localise.Cldr.validate_locale(:&quot;en-US&quot;) iex&gt; Bonfire.Common.Localise.Cldr.Locale.locale_for_territory(:ZZ) {:error, {Cldr.UnknownTerritoryError, &quot;The territory :ZZ is unknown&quot;}}","ref":"Bonfire.Common.Localise.Cldr.Locale.html#locale_for_territory/1","title":"Bonfire.Common.Localise.Cldr.Locale.locale_for_territory/1","type":"function"},{"doc":"Returns a &quot;best fit&quot; locale for a host name. Arguments host is any valid host name options is a keyword list of options. The default is [] . Options :tlds is a list of territory codes as upper-cased atoms that are to be considered as top-level domains. See Cldr.Locale.locale_from_host/2 for the default list. Returns {:ok, langauge_tag} or {:error, {exception, reason}} Notes Certain top-level domains have become associated with content underlated to the territory for who the domain is registered. Therefore Google (and perhaps others) do not associate these TLDs as belonging to the territory but rather are considered generic top-level domain names. Examples iex&gt; Bonfire.Common.Localise.Cldr.Locale . locale_from_host &quot;a.b.com.au&quot; Elixir.Bonfire.Common.Localise.Cldr . validate_locale ( :&quot;en-AU&quot; ) iex&gt; Bonfire.Common.Localise.Cldr.Locale . locale_from_host ( &quot;a.b.com.tv&quot; ) { :error , { Cldr.UnknownLocaleError , &quot;No locale was identified for territory \\&quot; tv \\&quot; &quot; } } iex&gt; Bonfire.Common.Localise.Cldr.Locale . locale_from_host ( &quot;a.b.com&quot; ) { :error , { Cldr.UnknownLocaleError , &quot;No locale was identified for territory \\&quot; com \\&quot; &quot; } }","ref":"Bonfire.Common.Localise.Cldr.Locale.html#locale_from_host/2","title":"Bonfire.Common.Localise.Cldr.Locale.locale_from_host/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Localise.Cldr.Locale.html#new!/1","title":"Bonfire.Common.Localise.Cldr.Locale.new!/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Localise.Cldr.Locale.html#new/1","title":"Bonfire.Common.Localise.Cldr.Locale.new/1","type":"function"},{"doc":"Returns the last segment of a host that might be a territory. Arguments host is any valid host name Returns {:ok, territory} or {:error, {exception, reason}} Examples iex&gt; Cldr.Locale . territory_from_host ( &quot;a.b.com.au&quot; ) { :ok , :AU } iex&gt; Cldr.Locale . territory_from_host ( &quot;a.b.com&quot; ) { :error , { Cldr.UnknownLocaleError , &quot;No locale was identified for territory \\&quot; com \\&quot; &quot; } }","ref":"Bonfire.Common.Localise.Cldr.Locale.html#territory_from_host/1","title":"Bonfire.Common.Localise.Cldr.Locale.territory_from_host/1","type":"function"},{"doc":"Returns the territory from a language tag or locale name. Arguments locale is any language tag returned by Bonfire.Common.Localise.Cldr.Locale.new/1 or a locale name in the list returned by Bonfire.Common.Localise.Cldr.known_locale_names/0 Returns A territory code as an atom Examples iex&gt; Bonfire.Common.Localise.Cldr.Locale . territory_from_locale &quot;en-US&quot; :US iex&gt; Bonfire.Common.Localise.Cldr.Locale . territory_from_locale &quot;en-US-u-rg-GBzzzz&quot; :GB","ref":"Bonfire.Common.Localise.Cldr.Locale.html#territory_from_locale/1","title":"Bonfire.Common.Localise.Cldr.Locale.territory_from_locale/1","type":"function"},{"doc":"Returns the time zone from a language tag or locale name. Arguments locale is any language tag returned by Bonfire.Common.Localise.Cldr.Locale.new/1 or a locale name in the list returned by Bonfire.Common.Localise.Cldr.known_locale_names/0 Returns A time zone ID as a string or :error if no time zone can be determined Examples iex&gt; Bonfire.Common.Localise.Cldr.Locale . timezone_from_locale &quot;en-US-u-tz-ausyd&quot; &quot;Australia/Sydney&quot;","ref":"Bonfire.Common.Localise.Cldr.Locale.html#timezone_from_locale/1","title":"Bonfire.Common.Localise.Cldr.Locale.timezone_from_locale/1","type":"function"},{"doc":"Implements cardinal plural rules for numbers.","ref":"Bonfire.Common.Localise.Cldr.Number.Cardinal.html","title":"Bonfire.Common.Localise.Cldr.Number.Cardinal","type":"module"},{"doc":"The locale names for which plural rules are defined.","ref":"Bonfire.Common.Localise.Cldr.Number.Cardinal.html#available_locale_names/0","title":"Bonfire.Common.Localise.Cldr.Number.Cardinal.available_locale_names/0","type":"function"},{"doc":"The configured locales for which plural rules are defined. Returns the intersection of Bonfire.Common.Localise.Cldr.known_locale_names/0 and the locales for which Cardinal plural rules are defined. There are many Cldr locales which don't have their own plural rules so this list is the intersection of Cldr 's configured locales and those that have rules.","ref":"Bonfire.Common.Localise.Cldr.Number.Cardinal.html#known_locale_names/0","title":"Bonfire.Common.Localise.Cldr.Number.Cardinal.known_locale_names/0","type":"function"},{"doc":"Return the plural key for a given number in a given locale Returns which plural key ( :zero , :one , :two , :few , :many or :other ) a given number fits into within the context of a given locale. Note that these key names should not be interpreted literally. For example, the key returned from Cldr.Number.Ordinal.plural_rule(0, &quot;en&quot;) is actually :other , not :zero . This key can then be used to format a number, date, time, unit, list or other content in a plural-sensitive way. Arguments number is any integer , float or Decimal locale is any locale returned by Cldr.Locale.new!/2 or any locale_name returned by Bonfire.Common.Localise.Cldr.known_locale_names/0 rounding is one of [:down, :up, :ceiling, :floor, :half_even, :half_up, :half_down] . The default is :half_even . Examples iex&gt; Bonfire.Common.Localise.Cldr.Number.Cardinal . plural_rule 0 , &quot;fr&quot; :one iex&gt; Bonfire.Common.Localise.Cldr.Number.Cardinal . plural_rule 0 , &quot;en&quot; :other","ref":"Bonfire.Common.Localise.Cldr.Number.Cardinal.html#plural_rule/3","title":"Bonfire.Common.Localise.Cldr.Number.Cardinal.plural_rule/3","type":"function"},{"doc":"Returns all the plural rules defined in CLDR.","ref":"Bonfire.Common.Localise.Cldr.Number.Cardinal.html#plural_rules/0","title":"Bonfire.Common.Localise.Cldr.Number.Cardinal.plural_rules/0","type":"function"},{"doc":"Return the plural rules for a locale. Arguments locale is any locale returned by Bonfire.Common.Localise.Cldr.Locale.new!/1 or any locale_name returned by Bonfire.Common.Localise.Cldr.known_locale_names/0 The rules are returned in AST form after parsing.","ref":"Bonfire.Common.Localise.Cldr.Number.Cardinal.html#plural_rules_for/1","title":"Bonfire.Common.Localise.Cldr.Number.Cardinal.plural_rules_for/1","type":"function"},{"doc":"Pluralize a number using cardinal plural rules and a substitution map. Arguments number is an integer, float or Decimal locale is any locale returned by Bonfire.Common.Localise.Cldr.Locale.new!/1 or any locale_name returned by Bonfire.Common.Localise.Cldr.known_locale_names/0 substitutions is a map that maps plural keys to a string. The valid substitution keys are :zero , :one , :two , :few , :many and :other . See also Bonfire.Common.Localise.Cldr.Number.Cardinal.Cardinal.plural_rule/3 . Examples iex&gt; Bonfire.Common.Localise.Cldr.Number.Cardinal . pluralize 1 , &quot;en&quot; , %{ one : &quot;one&quot; } &quot;one&quot; iex&gt; Bonfire.Common.Localise.Cldr.Number.Cardinal . pluralize 2 , &quot;en&quot; , %{ one : &quot;one&quot; } nil iex&gt; Bonfire.Common.Localise.Cldr.Number.Cardinal . pluralize 2 , &quot;en&quot; , %{ one : &quot;one&quot; , two : &quot;two&quot; , other : &quot;other&quot; } &quot;other&quot; iex&gt; Bonfire.Common.Localise.Cldr.Number.Cardinal . pluralize 22 , &quot;en&quot; , %{ one : &quot;one&quot; , two : &quot;two&quot; , other : &quot;other&quot; } &quot;other&quot; iex&gt; Bonfire.Common.Localise.Cldr.Number.Cardinal . pluralize Decimal . new ( 1 ) , &quot;en&quot; , %{ one : &quot;one&quot; } &quot;one&quot; iex&gt; Bonfire.Common.Localise.Cldr.Number.Cardinal . pluralize Decimal . new ( 2 ) , &quot;en&quot; , %{ one : &quot;one&quot; } nil iex&gt; Bonfire.Common.Localise.Cldr.Number.Cardinal . pluralize Decimal . new ( 2 ) , &quot;en&quot; , %{ one : &quot;one&quot; , two : &quot;two&quot; } nil iex&gt; Bonfire.Common.Localise.Cldr.Number.Cardinal . pluralize 1 .. 10 , &quot;ar&quot; , %{ one : &quot;one&quot; , few : &quot;few&quot; , other : &quot;other&quot; } &quot;few&quot; iex&gt; Bonfire.Common.Localise.Cldr.Number.Cardinal . pluralize 1 .. 10 , &quot;en&quot; , %{ one : &quot;one&quot; , few : &quot;few&quot; , other : &quot;other&quot; } &quot;other&quot;","ref":"Bonfire.Common.Localise.Cldr.Number.Cardinal.html#pluralize/3","title":"Bonfire.Common.Localise.Cldr.Number.Cardinal.pluralize/3","type":"function"},{"doc":"Implements ordinal plural rules for numbers.","ref":"Bonfire.Common.Localise.Cldr.Number.Ordinal.html","title":"Bonfire.Common.Localise.Cldr.Number.Ordinal","type":"module"},{"doc":"The locale names for which plural rules are defined.","ref":"Bonfire.Common.Localise.Cldr.Number.Ordinal.html#available_locale_names/0","title":"Bonfire.Common.Localise.Cldr.Number.Ordinal.available_locale_names/0","type":"function"},{"doc":"The configured locales for which plural rules are defined. Returns the intersection of Bonfire.Common.Localise.Cldr.known_locale_names/0 and the locales for which Ordinal plural rules are defined. There are many Cldr locales which don't have their own plural rules so this list is the intersection of Cldr 's configured locales and those that have rules.","ref":"Bonfire.Common.Localise.Cldr.Number.Ordinal.html#known_locale_names/0","title":"Bonfire.Common.Localise.Cldr.Number.Ordinal.known_locale_names/0","type":"function"},{"doc":"Return the plural key for a given number in a given locale Returns which plural key ( :zero , :one , :two , :few , :many or :other ) a given number fits into within the context of a given locale. Note that these key names should not be interpreted literally. For example, the key returned from Cldr.Number.Ordinal.plural_rule(0, &quot;en&quot;) is actually :other , not :zero . This key can then be used to format a number, date, time, unit, list or other content in a plural-sensitive way. Arguments number is any integer , float or Decimal locale is any locale returned by Cldr.Locale.new!/2 or any locale_name returned by Bonfire.Common.Localise.Cldr.known_locale_names/0 rounding is one of [:down, :up, :ceiling, :floor, :half_even, :half_up, :half_down] . The default is :half_even . Examples iex&gt; Bonfire.Common.Localise.Cldr.Number.Ordinal . plural_rule 0 , &quot;fr&quot; :other iex&gt; Bonfire.Common.Localise.Cldr.Number.Ordinal . plural_rule 1 , &quot;en&quot; :one","ref":"Bonfire.Common.Localise.Cldr.Number.Ordinal.html#plural_rule/3","title":"Bonfire.Common.Localise.Cldr.Number.Ordinal.plural_rule/3","type":"function"},{"doc":"Returns all the plural rules defined in CLDR.","ref":"Bonfire.Common.Localise.Cldr.Number.Ordinal.html#plural_rules/0","title":"Bonfire.Common.Localise.Cldr.Number.Ordinal.plural_rules/0","type":"function"},{"doc":"Return the plural rules for a locale. Arguments locale is any locale returned by Bonfire.Common.Localise.Cldr.Locale.new!/1 or any locale_name returned by Bonfire.Common.Localise.Cldr.known_locale_names/0 The rules are returned in AST form after parsing.","ref":"Bonfire.Common.Localise.Cldr.Number.Ordinal.html#plural_rules_for/1","title":"Bonfire.Common.Localise.Cldr.Number.Ordinal.plural_rules_for/1","type":"function"},{"doc":"Pluralize a number using ordinal plural rules and a substitution map. Arguments number is an integer, float or Decimal or a Range.t{} . When a range, The is that in any usage, the start value is strictly less than the end value, and that no values are negative. Results for any cases that do not meet these criteria are undefined. locale is any locale returned by Bonfire.Common.Localise.Cldr.Locale.new!/1 or any locale_name returned by Bonfire.Common.Localise.Cldr.known_locale_names/0 substitutions is a map that maps plural keys to a string. The valid substitution keys are :zero , :one , :two , :few , :many and :other . See also Bonfire.Common.Localise.Cldr.Number.Ordinal.Ordinal.plural_rule/3 . Examples iex&gt; Bonfire.Common.Localise.Cldr.Number.Ordinal . pluralize 1 , :en , %{ one : &quot;one&quot; } &quot;one&quot; iex&gt; Bonfire.Common.Localise.Cldr.Number.Ordinal . pluralize 2 , :en , %{ one : &quot;one&quot; } nil iex&gt; Bonfire.Common.Localise.Cldr.Number.Ordinal . pluralize 2 , :en , %{ one : &quot;one&quot; , two : &quot;two&quot; } &quot;two&quot; iex&gt; Bonfire.Common.Localise.Cldr.Number.Ordinal . pluralize 22 , :en , %{ one : &quot;one&quot; , two : &quot;two&quot; , other : &quot;other&quot; } &quot;two&quot; iex&gt; Bonfire.Common.Localise.Cldr.Number.Ordinal . pluralize Decimal . new ( 1 ) , :en , %{ one : &quot;one&quot; } &quot;one&quot; iex&gt; Bonfire.Common.Localise.Cldr.Number.Ordinal . pluralize Decimal . new ( 2 ) , :en , %{ one : &quot;one&quot; } nil iex&gt; Bonfire.Common.Localise.Cldr.Number.Ordinal . pluralize Decimal . new ( 2 ) , :en , %{ one : &quot;one&quot; , two : &quot;two&quot; } &quot;two&quot; iex&gt; Bonfire.Common.Localise.Cldr.Number.Ordinal . pluralize 1 .. 10 , &quot;ar&quot; , %{ one : &quot;one&quot; , few : &quot;few&quot; , other : &quot;other&quot; } &quot;other&quot; iex&gt; Bonfire.Common.Localise.Cldr.Number.Ordinal . pluralize 1 .. 10 , &quot;en&quot; , %{ one : &quot;one&quot; , few : &quot;few&quot; , other : &quot;other&quot; } &quot;other&quot;","ref":"Bonfire.Common.Localise.Cldr.Number.Ordinal.html#pluralize/3","title":"Bonfire.Common.Localise.Cldr.Number.Ordinal.pluralize/3","type":"function"},{"doc":"Implements plural rules for ranges","ref":"Bonfire.Common.Localise.Cldr.Number.PluralRule.Range.html","title":"Bonfire.Common.Localise.Cldr.Number.PluralRule.Range","type":"module"},{"doc":"Returns a final plural type for a start-of-range plural type, an end-of-range plural type and a locale. Arguments first is a plural type for the start of a range last is a plural type for the end of a range locale is any Cldr.LanguageTag.t or a language name (not locale name) Example iex&gt; Bonfire.Common.Localise.Cldr.Number.PluralRule.Range . plural_rule :other , :few , &quot;ar&quot; :few","ref":"Bonfire.Common.Localise.Cldr.Number.PluralRule.Range.html#plural_rule/3","title":"Bonfire.Common.Localise.Cldr.Number.PluralRule.Range.plural_rule/3","type":"function"},{"doc":"Default Gettext module It is recommended to use the more convenient macros in Bonfire.Common.Localise.Gettext.Helpers instead.","ref":"Bonfire.Common.Localise.Gettext.html","title":"Bonfire.Common.Localise.Gettext","type":"module"},{"doc":"Callback implementation for Gettext.Backend.dgettext/3 .","ref":"Bonfire.Common.Localise.Gettext.html#dgettext/3","title":"Bonfire.Common.Localise.Gettext.dgettext/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dgettext_noop/2 .","ref":"Bonfire.Common.Localise.Gettext.html#dgettext_noop/2","title":"Bonfire.Common.Localise.Gettext.dgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext/5 .","ref":"Bonfire.Common.Localise.Gettext.html#dngettext/5","title":"Bonfire.Common.Localise.Gettext.dngettext/5","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext_noop/3 .","ref":"Bonfire.Common.Localise.Gettext.html#dngettext_noop/3","title":"Bonfire.Common.Localise.Gettext.dngettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpgettext/4 .","ref":"Bonfire.Common.Localise.Gettext.html#dpgettext/4","title":"Bonfire.Common.Localise.Gettext.dpgettext/4","type":"macro"},{"doc":"","ref":"Bonfire.Common.Localise.Gettext.html#dpgettext_noop/3","title":"Bonfire.Common.Localise.Gettext.dpgettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpngettext/6 .","ref":"Bonfire.Common.Localise.Gettext.html#dpngettext/6","title":"Bonfire.Common.Localise.Gettext.dpngettext/6","type":"macro"},{"doc":"","ref":"Bonfire.Common.Localise.Gettext.html#dpngettext_noop/4","title":"Bonfire.Common.Localise.Gettext.dpngettext_noop/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext/2 .","ref":"Bonfire.Common.Localise.Gettext.html#gettext/2","title":"Bonfire.Common.Localise.Gettext.gettext/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_comment/1 .","ref":"Bonfire.Common.Localise.Gettext.html#gettext_comment/1","title":"Bonfire.Common.Localise.Gettext.gettext_comment/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_noop/1 .","ref":"Bonfire.Common.Localise.Gettext.html#gettext_noop/1","title":"Bonfire.Common.Localise.Gettext.gettext_noop/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_bindings/2 .","ref":"Bonfire.Common.Localise.Gettext.html#handle_missing_bindings/2","title":"Bonfire.Common.Localise.Gettext.handle_missing_bindings/2","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_plural_translation/7 .","ref":"Bonfire.Common.Localise.Gettext.html#handle_missing_plural_translation/7","title":"Bonfire.Common.Localise.Gettext.handle_missing_plural_translation/7","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_translation/5 .","ref":"Bonfire.Common.Localise.Gettext.html#handle_missing_translation/5","title":"Bonfire.Common.Localise.Gettext.handle_missing_translation/5","type":"function"},{"doc":"","ref":"Bonfire.Common.Localise.Gettext.html#lgettext/5","title":"Bonfire.Common.Localise.Gettext.lgettext/5","type":"function"},{"doc":"","ref":"Bonfire.Common.Localise.Gettext.html#lngettext/7","title":"Bonfire.Common.Localise.Gettext.lngettext/7","type":"function"},{"doc":"Callback implementation for Gettext.Backend.ngettext/4 .","ref":"Bonfire.Common.Localise.Gettext.html#ngettext/4","title":"Bonfire.Common.Localise.Gettext.ngettext/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.ngettext_noop/2 .","ref":"Bonfire.Common.Localise.Gettext.html#ngettext_noop/2","title":"Bonfire.Common.Localise.Gettext.ngettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pgettext/3 .","ref":"Bonfire.Common.Localise.Gettext.html#pgettext/3","title":"Bonfire.Common.Localise.Gettext.pgettext/3","type":"macro"},{"doc":"","ref":"Bonfire.Common.Localise.Gettext.html#pgettext_noop/2","title":"Bonfire.Common.Localise.Gettext.pgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pngettext/5 .","ref":"Bonfire.Common.Localise.Gettext.html#pngettext/5","title":"Bonfire.Common.Localise.Gettext.pngettext/5","type":"macro"},{"doc":"","ref":"Bonfire.Common.Localise.Gettext.html#pngettext_noop/3","title":"Bonfire.Common.Localise.Gettext.pngettext_noop/3","type":"macro"},{"doc":"A module providing Internationalization with a gettext-based API. By using Gettext , your module gains a set of macros for translations, for example: import Bonfire.Common.Localise.Gettext # Simple translation usage : &lt; % = l ( &quot;Hello&quot; ) % &gt; &lt; % = l ( &quot;Hello %{name}&quot; , name : &quot;Bookchin&quot; ) % &gt; &lt; % = l ( &quot;Hi&quot; , [ ] , &quot;test context&quot; ) % &gt; output : Hello Hello Bookchin Hi # Plural translation usage : &lt; % = lp ( &quot;Hi friend&quot; , &quot;Hi friends&quot; , 2 ) % &gt; &lt; % = lp ( &quot;Hiya %{user_or_users}&quot; , &quot;Hiyas %{user_or_users}&quot; , 1 , [ user_or_users : &quot;Bookchin&quot; ] , &quot;test context&quot; ) % &gt; output : Hi friends Hiya Bookchin See the Gettext Docs for details.","ref":"Bonfire.Common.Localise.Gettext.Helpers.html","title":"Bonfire.Common.Localise.Gettext.Helpers","type":"module"},{"doc":"","ref":"Bonfire.Common.Localise.Gettext.Helpers.html#l/4","title":"Bonfire.Common.Localise.Gettext.Helpers.l/4","type":"macro"},{"doc":"","ref":"Bonfire.Common.Localise.Gettext.Helpers.html#localise_dynamic/2","title":"Bonfire.Common.Localise.Gettext.Helpers.localise_dynamic/2","type":"function"},{"doc":"Localise a list of strings at compile time","ref":"Bonfire.Common.Localise.Gettext.Helpers.html#localise_strings/2","title":"Bonfire.Common.Localise.Gettext.Helpers.localise_strings/2","type":"macro"},{"doc":"","ref":"Bonfire.Common.Localise.Gettext.Helpers.html#lp/6","title":"Bonfire.Common.Localise.Gettext.Helpers.lp/6","type":"macro"},{"doc":"Defines a plural forms module for Gettext that uses CLDR plural rules https://cldr.unicode.org/index/cldr-spec/plural-rules","ref":"Bonfire.Common.Localise.Gettext.Plural.html","title":"Bonfire.Common.Localise.Gettext.Plural","type":"module"},{"doc":"Returns the number of plural forms for a given locale. locale is either a locale name in the list {:__aliases__, [counter: {Bonfire.Common.Localise.Gettext.Plural, 2}, line: 6], [:Bonfire, :Common, :Localise, :Cldr]}.known_locale_names/0 or a %LanguageTag{} as returned by Cldr.Locale.new/2 Examples iex&gt; Bonfire.Common.Localise.Gettext.Plural . nplurals ( &quot;pl&quot; ) 4 iex&gt; Bonfire.Common.Localise.Gettext.Plural . nplurals ( &quot;en&quot; ) 2","ref":"Bonfire.Common.Localise.Gettext.Plural.html#nplurals/1","title":"Bonfire.Common.Localise.Gettext.Plural.nplurals/1","type":"function"},{"doc":"Returns the plural form of a number for a given locale. locale is either a locale name in the list {:__aliases__, [counter: {Bonfire.Common.Localise.Gettext.Plural, 2}, line: 6], [:Bonfire, :Common, :Localise, :Cldr]}.known_locale_names/0 or a %LanguageTag{} as returned by Cldr.Locale.new/2 Examples iex&gt; Bonfire.Common.Localise.Gettext.Plural . plural ( &quot;pl&quot; , 1 ) 0 iex&gt; Bonfire.Common.Localise.Gettext.Plural . plural ( &quot;pl&quot; , 2 ) 1 iex&gt; Bonfire.Common.Localise.Gettext.Plural . plural ( &quot;pl&quot; , 5 ) 2 iex&gt; Bonfire.Common.Localise.Gettext.Plural . plural ( &quot;pl&quot; , 112 ) 2 iex&gt; Bonfire.Common.Localise.Gettext.Plural . plural ( &quot;en&quot; , 1 ) 0 iex&gt; Bonfire.Common.Localise.Gettext.Plural . plural ( &quot;en&quot; , 2 ) 1 iex&gt; Bonfire.Common.Localise.Gettext.Plural . plural ( &quot;en&quot; , 112 ) 1","ref":"Bonfire.Common.Localise.Gettext.Plural.html#plural/2","title":"Bonfire.Common.Localise.Gettext.Plural.plural/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html","title":"Bonfire.Common.Pointers","type":"module"},{"doc":"Batch loading of associations for GraphQL API","ref":"Bonfire.Common.Pointers.html#dataloader/1","title":"Bonfire.Common.Pointers.dataloader/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#exists?/2","title":"Bonfire.Common.Pointers.exists?/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#filter_one/1","title":"Bonfire.Common.Pointers.filter_one/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#filters/3","title":"Bonfire.Common.Pointers.filters/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#follow!/2","title":"Bonfire.Common.Pointers.follow!/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#follow_function_error/2","title":"Bonfire.Common.Pointers.follow_function_error/2","type":"function"},{"doc":"Forge a pointer from a pointable object Does not hit the database. Is safe so long as the provided struct participates in the meta abstraction.","ref":"Bonfire.Common.Pointers.html#forge!/1","title":"Bonfire.Common.Pointers.forge!/1","type":"function"},{"doc":"Forges a pointer to a participating meta entity. Does not hit the database, is safe so long as the entry we wish to synthesise a pointer for represents a legitimate entry in the database.","ref":"Bonfire.Common.Pointers.html#forge!/2","title":"Bonfire.Common.Pointers.forge!/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#get!/2","title":"Bonfire.Common.Pointers.get!/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#get/2","title":"Bonfire.Common.Pointers.get/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#id_binary/1","title":"Bonfire.Common.Pointers.id_binary/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#id_filter/2","title":"Bonfire.Common.Pointers.id_filter/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#is_pointable?/1","title":"Bonfire.Common.Pointers.is_pointable?/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#list!/1","title":"Bonfire.Common.Pointers.list!/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#list_ids/0","title":"Bonfire.Common.Pointers.list_ids/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#many!/2","title":"Bonfire.Common.Pointers.many!/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#many/2","title":"Bonfire.Common.Pointers.many/2","type":"function"},{"doc":"Turns a thing into a pointer if it is not already. Errors if it cannot be performed","ref":"Bonfire.Common.Pointers.html#maybe_forge!/1","title":"Bonfire.Common.Pointers.maybe_forge!/1","type":"function"},{"doc":"Turns a thing into a pointer if it is not already or returns nil","ref":"Bonfire.Common.Pointers.html#maybe_forge/1","title":"Bonfire.Common.Pointers.maybe_forge/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#one!/2","title":"Bonfire.Common.Pointers.one!/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#one/2","title":"Bonfire.Common.Pointers.one/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#pointer_preloads/2","title":"Bonfire.Common.Pointers.pointer_preloads/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#pointer_query/2","title":"Bonfire.Common.Pointers.pointer_query/2","type":"function"},{"doc":"Follows one or more pointers and adds the pointed records to the pointed attrs","ref":"Bonfire.Common.Pointers.html#preload!/2","title":"Bonfire.Common.Pointers.preload!/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.html#query/3","title":"Bonfire.Common.Pointers.query/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Preload.html","title":"Bonfire.Common.Pointers.Preload","type":"module"},{"doc":"","ref":"Bonfire.Common.Pointers.Preload.html#maybe_preload_nested_pointers/3","title":"Bonfire.Common.Pointers.Preload.maybe_preload_nested_pointers/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Preload.html#maybe_preload_pointer/2","title":"Bonfire.Common.Pointers.Preload.maybe_preload_pointer/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Preload.html#maybe_preload_pointers/3","title":"Bonfire.Common.Pointers.Preload.maybe_preload_pointers/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Queries.html","title":"Bonfire.Common.Pointers.Queries","type":"module"},{"doc":"Filter the query according to arbitrary criteria","ref":"Bonfire.Common.Pointers.Queries.html#filter/2","title":"Bonfire.Common.Pointers.Queries.filter/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Queries.html#queries_module/0","title":"Bonfire.Common.Pointers.Queries.queries_module/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Queries.html#query/1","title":"Bonfire.Common.Pointers.Queries.query/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Queries.html#query/2","title":"Bonfire.Common.Pointers.Queries.query/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Tables.html","title":"Bonfire.Common.Pointers.Tables","type":"module"},{"doc":"","ref":"Bonfire.Common.Pointers.Tables.html#list_ids/0","title":"Bonfire.Common.Pointers.Tables.list_ids/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Tables.html#list_schemas/0","title":"Bonfire.Common.Pointers.Tables.list_schemas/0","type":"function"},{"doc":"Lists all Pointable Tables","ref":"Bonfire.Common.Pointers.Tables.html#list_tables/1","title":"Bonfire.Common.Pointers.Tables.list_tables/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Tables.html#list_tables_debug/0","title":"Bonfire.Common.Pointers.Tables.list_tables_debug/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Tables.html#many/1","title":"Bonfire.Common.Pointers.Tables.many/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Tables.html#one!/1","title":"Bonfire.Common.Pointers.Tables.one!/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Tables.html#one/1","title":"Bonfire.Common.Pointers.Tables.one/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Tables.html#schema_or_table!/1","title":"Bonfire.Common.Pointers.Tables.schema_or_table!/1","type":"function"},{"doc":"Retrieves the Table that a pointer points to Note: Throws an error if the table cannot be found","ref":"Bonfire.Common.Pointers.Tables.html#table!/1","title":"Bonfire.Common.Pointers.Tables.table!/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Tables.html#table_fields/1","title":"Bonfire.Common.Pointers.Tables.table_fields/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Tables.Queries.html","title":"Bonfire.Common.Pointers.Tables.Queries","type":"module"},{"doc":"Filter the query according to arbitrary criteria","ref":"Bonfire.Common.Pointers.Tables.Queries.html#filter/2","title":"Bonfire.Common.Pointers.Tables.Queries.filter/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Tables.Queries.html#query/1","title":"Bonfire.Common.Pointers.Tables.Queries.query/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Pointers.Tables.Queries.html#query/2","title":"Bonfire.Common.Pointers.Tables.Queries.query/2","type":"function"},{"doc":"Properly query some data using the appropriate module depending on its schema. Back by a global cache of known query_modules to be queried by their schema, or vice versa. Use of the QueryModules Service requires: Exporting queries_module/0 in relevant modules (in schemas pointing to query modules and/or in query modules pointing to schemas), returning a Module atom To populate :pointers, :search_path in config the list of OTP applications where query_modules are declared. Start the Bonfire.Common.QueryModules application before querying. OTP 21.2 or greater, though we recommend using the most recent release available. While this module is a GenServer, it is only responsible for setup of the cache and then exits with :ignore having done so. It is not recommended to restart the service as this will lead to a stop the world garbage collection of all processes and the copying of the entire cache to each process that has queried it since its last local garbage collection.","ref":"Bonfire.Common.QueryModules.html","title":"Bonfire.Common.QueryModules","type":"module"},{"doc":"","ref":"Bonfire.Common.QueryModules.html#apply_error/2","title":"Bonfire.Common.QueryModules.apply_error/2","type":"function"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Bonfire.Common.QueryModules.html#child_spec/1","title":"Bonfire.Common.QueryModules.child_spec/1","type":"function"},{"doc":"","ref":"Bonfire.Common.QueryModules.html#data/0","title":"Bonfire.Common.QueryModules.data/0","type":"function"},{"doc":"","ref":"Bonfire.Common.QueryModules.html#maybe_query/3","title":"Bonfire.Common.QueryModules.maybe_query/3","type":"function"},{"doc":"","ref":"Bonfire.Common.QueryModules.html#maybe_query_module/1","title":"Bonfire.Common.QueryModules.maybe_query_module/1","type":"function"},{"doc":"","ref":"Bonfire.Common.QueryModules.html#populate/0","title":"Bonfire.Common.QueryModules.populate/0","type":"function"},{"doc":"","ref":"Bonfire.Common.QueryModules.html#query_function_error/3","title":"Bonfire.Common.QueryModules.query_function_error/3","type":"function"},{"doc":"Look up a Queryable by name or id, throw :not_found if not found.","ref":"Bonfire.Common.QueryModules.html#query_module!/1","title":"Bonfire.Common.QueryModules.query_module!/1","type":"function"},{"doc":"Get a Queryable identified by name or id.","ref":"Bonfire.Common.QueryModules.html#query_module/1","title":"Bonfire.Common.QueryModules.query_module/1","type":"function"},{"doc":"Look up many ids at once, throw :not_found if any of them are not found","ref":"Bonfire.Common.QueryModules.html#query_modules/1","title":"Bonfire.Common.QueryModules.query_modules/1","type":"function"},{"doc":"Populates the global cache with query_module data via introspection.","ref":"Bonfire.Common.QueryModules.html#start_link/1","title":"Bonfire.Common.QueryModules.start_link/1","type":"function"},{"doc":"A query is either a query_module name atom or (Pointer) id binary","ref":"Bonfire.Common.QueryModules.html#t:query/0","title":"Bonfire.Common.QueryModules.query/0","type":"type"},{"doc":"Ecto Repo and related common functions","ref":"Bonfire.Common.Repo.html","title":"Bonfire.Common.Repo","type":"module"},{"doc":"Callback implementation for Ecto.Repo.aggregate/3 .","ref":"Bonfire.Common.Repo.html#aggregate/3","title":"Bonfire.Common.Repo.aggregate/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.aggregate/4 .","ref":"Bonfire.Common.Repo.html#aggregate/4","title":"Bonfire.Common.Repo.aggregate/4","type":"function"},{"doc":"Callback implementation for Ecto.Repo.all/2 .","ref":"Bonfire.Common.Repo.html#all/2","title":"Bonfire.Common.Repo.all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.checked_out?/0 .","ref":"Bonfire.Common.Repo.html#checked_out?/0","title":"Bonfire.Common.Repo.checked_out?/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.checkout/2 .","ref":"Bonfire.Common.Repo.html#checkout/2","title":"Bonfire.Common.Repo.checkout/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Repo.html#child_spec/1","title":"Bonfire.Common.Repo.child_spec/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.config/0 .","ref":"Bonfire.Common.Repo.html#config/0","title":"Bonfire.Common.Repo.config/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.default_options/1 .","ref":"Bonfire.Common.Repo.html#default_options/1","title":"Bonfire.Common.Repo.default_options/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete!/2 .","ref":"Bonfire.Common.Repo.html#delete!/2","title":"Bonfire.Common.Repo.delete!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete/2 .","ref":"Bonfire.Common.Repo.html#delete/2","title":"Bonfire.Common.Repo.delete/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete_all/2 .","ref":"Bonfire.Common.Repo.html#delete_all/2","title":"Bonfire.Common.Repo.delete_all/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Repo.html#delete_many/1","title":"Bonfire.Common.Repo.delete_many/1","type":"function"},{"doc":"A convenience function for SQL-based repositories that forces all connections in the pool to disconnect within the given interval. See Ecto.Adapters.SQL.disconnect_all/3 for more information.","ref":"Bonfire.Common.Repo.html#disconnect_all/2","title":"Bonfire.Common.Repo.disconnect_all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.exists?/2 .","ref":"Bonfire.Common.Repo.html#exists?/2","title":"Bonfire.Common.Repo.exists?/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes an EXPLAIN statement or similar depending on the adapter to obtain statistics for the given query. See Ecto.Adapters.SQL.explain/4 for more information.","ref":"Bonfire.Common.Repo.html#explain/3","title":"Bonfire.Common.Repo.explain/3","type":"function"},{"doc":"Like Repo.get, but returns an ok/error tuple","ref":"Bonfire.Common.Repo.html#fetch/2","title":"Bonfire.Common.Repo.fetch/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Repo.html#fetch_all/2","title":"Bonfire.Common.Repo.fetch_all/2","type":"function"},{"doc":"Like Repo.get_by, but returns an ok/error tuple","ref":"Bonfire.Common.Repo.html#fetch_by/2","title":"Bonfire.Common.Repo.fetch_by/2","type":"function"},{"doc":"Like Repo.single, except on failure, adds an error to the changeset","ref":"Bonfire.Common.Repo.html#find/3","title":"Bonfire.Common.Repo.find/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get!/3 .","ref":"Bonfire.Common.Repo.html#get!/3","title":"Bonfire.Common.Repo.get!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get/3 .","ref":"Bonfire.Common.Repo.html#get/3","title":"Bonfire.Common.Repo.get/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by!/3 .","ref":"Bonfire.Common.Repo.html#get_by!/3","title":"Bonfire.Common.Repo.get_by!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by/3 .","ref":"Bonfire.Common.Repo.html#get_by/3","title":"Bonfire.Common.Repo.get_by/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_dynamic_repo/0 .","ref":"Bonfire.Common.Repo.html#get_dynamic_repo/0","title":"Bonfire.Common.Repo.get_dynamic_repo/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.in_transaction?/0 .","ref":"Bonfire.Common.Repo.html#in_transaction?/0","title":"Bonfire.Common.Repo.in_transaction?/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert!/2 .","ref":"Bonfire.Common.Repo.html#insert!/2","title":"Bonfire.Common.Repo.insert!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert/2 .","ref":"Bonfire.Common.Repo.html#insert/2","title":"Bonfire.Common.Repo.insert/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_all/3 .","ref":"Bonfire.Common.Repo.html#insert_all/3","title":"Bonfire.Common.Repo.insert_all/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Repo.html#insert_all_or_ignore/2","title":"Bonfire.Common.Repo.insert_all_or_ignore/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Repo.html#insert_or_ignore/1","title":"Bonfire.Common.Repo.insert_or_ignore/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update!/2 .","ref":"Bonfire.Common.Repo.html#insert_or_update!/2","title":"Bonfire.Common.Repo.insert_or_update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update/2 .","ref":"Bonfire.Common.Repo.html#insert_or_update/2","title":"Bonfire.Common.Repo.insert_or_update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.load/2 .","ref":"Bonfire.Common.Repo.html#load/2","title":"Bonfire.Common.Repo.load/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Repo.html#many/2","title":"Bonfire.Common.Repo.many/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Repo.html#many_paginated/3","title":"Bonfire.Common.Repo.many_paginated/3","type":"function"},{"doc":"See Bonfire.Common.Repo.Preload.maybe_preload/3 .","ref":"Bonfire.Common.Repo.html#maybe_preload/3","title":"Bonfire.Common.Repo.maybe_preload/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one!/2 .","ref":"Bonfire.Common.Repo.html#one!/2","title":"Bonfire.Common.Repo.one!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one/2 .","ref":"Bonfire.Common.Repo.html#one/2","title":"Bonfire.Common.Repo.one/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.preload/3 .","ref":"Bonfire.Common.Repo.html#preload/3","title":"Bonfire.Common.Repo.preload/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.prepare_query/3 .","ref":"Bonfire.Common.Repo.html#prepare_query/3","title":"Bonfire.Common.Repo.prepare_query/3","type":"function"},{"doc":"Like insert/1 , but understands remapping changeset errors to attr names from config (and only config, no overrides at present!)","ref":"Bonfire.Common.Repo.html#put/1","title":"Bonfire.Common.Repo.put/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.put_dynamic_repo/1 .","ref":"Bonfire.Common.Repo.html#put_dynamic_repo/1","title":"Bonfire.Common.Repo.put_dynamic_repo/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Repo.html#put_many/1","title":"Bonfire.Common.Repo.put_many/1","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query. See Ecto.Adapters.SQL.query!/4 for more information.","ref":"Bonfire.Common.Repo.html#query!/3","title":"Bonfire.Common.Repo.query!/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query. See Ecto.Adapters.SQL.query/4 for more information.","ref":"Bonfire.Common.Repo.html#query/3","title":"Bonfire.Common.Repo.query/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given multi-result query. See Ecto.Adapters.SQL.query_many!/4 for more information.","ref":"Bonfire.Common.Repo.html#query_many!/3","title":"Bonfire.Common.Repo.query_many!/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given multi-result query. See Ecto.Adapters.SQL.query_many/4 for more information.","ref":"Bonfire.Common.Repo.html#query_many/3","title":"Bonfire.Common.Repo.query_many/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.reload!/2 .","ref":"Bonfire.Common.Repo.html#reload!/2","title":"Bonfire.Common.Repo.reload!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.reload/2 .","ref":"Bonfire.Common.Repo.html#reload/2","title":"Bonfire.Common.Repo.reload/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.rollback/1 .","ref":"Bonfire.Common.Repo.html#rollback/1","title":"Bonfire.Common.Repo.rollback/1","type":"function"},{"doc":"Like Repo.one, but returns an ok/error tuple.","ref":"Bonfire.Common.Repo.html#single/1","title":"Bonfire.Common.Repo.single/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Repo.html#sql/3","title":"Bonfire.Common.Repo.sql/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.start_link/1 .","ref":"Bonfire.Common.Repo.html#start_link/1","title":"Bonfire.Common.Repo.start_link/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stop/1 .","ref":"Bonfire.Common.Repo.html#stop/1","title":"Bonfire.Common.Repo.stop/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stream/2 .","ref":"Bonfire.Common.Repo.html#stream/2","title":"Bonfire.Common.Repo.stream/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that translates the given query to SQL. See Ecto.Adapters.SQL.to_sql/3 for more information.","ref":"Bonfire.Common.Repo.html#to_sql/2","title":"Bonfire.Common.Repo.to_sql/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Repo.html#transact_many/1","title":"Bonfire.Common.Repo.transact_many/1","type":"function"},{"doc":"Run a transaction, similar to Repo.transaction/1 , but it expects an ok or error tuple. If an error tuple is returned, the transaction is aborted.","ref":"Bonfire.Common.Repo.html#transact_with/1","title":"Bonfire.Common.Repo.transact_with/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.transaction/2 .","ref":"Bonfire.Common.Repo.html#transaction/2","title":"Bonfire.Common.Repo.transaction/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update!/2 .","ref":"Bonfire.Common.Repo.html#update!/2","title":"Bonfire.Common.Repo.update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update/2 .","ref":"Bonfire.Common.Repo.html#update/2","title":"Bonfire.Common.Repo.update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update_all/3 .","ref":"Bonfire.Common.Repo.html#update_all/3","title":"Bonfire.Common.Repo.update_all/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Repo.html#upsert/3","title":"Bonfire.Common.Repo.upsert/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Repo.Delete.html","title":"Bonfire.Common.Repo.Delete","type":"module"},{"doc":"","ref":"Bonfire.Common.Repo.Delete.html#deletion_result!/1","title":"Bonfire.Common.Repo.Delete.deletion_result!/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Repo.Delete.html#deletion_result/1","title":"Bonfire.Common.Repo.Delete.deletion_result/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Repo.Delete.html#federation_module/0","title":"Bonfire.Common.Repo.Delete.federation_module/0","type":"function"},{"doc":"Deletes an entry from the database, or throws an error","ref":"Bonfire.Common.Repo.Delete.html#hard_delete!/1","title":"Bonfire.Common.Repo.Delete.hard_delete!/1","type":"function"},{"doc":"Actually deletes an entry from the database","ref":"Bonfire.Common.Repo.Delete.html#hard_delete/1","title":"Bonfire.Common.Repo.Delete.hard_delete/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Repo.Delete.html#maybe_allow_delete?/2","title":"Bonfire.Common.Repo.Delete.maybe_allow_delete?/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Repo.Delete.html#schema/1","title":"Bonfire.Common.Repo.Delete.schema/1","type":"function"},{"doc":"Marks an entry as deleted in the database or throws an error","ref":"Bonfire.Common.Repo.Delete.html#soft_delete!/1","title":"Bonfire.Common.Repo.Delete.soft_delete!/1","type":"function"},{"doc":"Just marks an entry as deleted in the database","ref":"Bonfire.Common.Repo.Delete.html#soft_delete/1","title":"Bonfire.Common.Repo.Delete.soft_delete/1","type":"function"},{"doc":"Creates a changeset for deleting an entity","ref":"Bonfire.Common.Repo.Delete.html#soft_delete_changeset/4","title":"Bonfire.Common.Repo.Delete.soft_delete_changeset/4","type":"function"},{"doc":"","ref":"Bonfire.Common.Repo.Delete.html#undelete/1","title":"Bonfire.Common.Repo.Delete.undelete/1","type":"function"},{"doc":"Preload helpers for Ecto Repo","ref":"Bonfire.Common.Repo.Preload.html","title":"Bonfire.Common.Repo.Preload","type":"module"},{"doc":"Callback implementation for Ecto.Repo.aggregate/3 .","ref":"Bonfire.Common.Repo.Preload.html#aggregate/3","title":"Bonfire.Common.Repo.Preload.aggregate/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.aggregate/4 .","ref":"Bonfire.Common.Repo.Preload.html#aggregate/4","title":"Bonfire.Common.Repo.Preload.aggregate/4","type":"function"},{"doc":"Callback implementation for Ecto.Repo.all/2 .","ref":"Bonfire.Common.Repo.Preload.html#all/2","title":"Bonfire.Common.Repo.Preload.all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.checked_out?/0 .","ref":"Bonfire.Common.Repo.Preload.html#checked_out?/0","title":"Bonfire.Common.Repo.Preload.checked_out?/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.checkout/2 .","ref":"Bonfire.Common.Repo.Preload.html#checkout/2","title":"Bonfire.Common.Repo.Preload.checkout/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Repo.Preload.html#child_spec/1","title":"Bonfire.Common.Repo.Preload.child_spec/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.config/0 .","ref":"Bonfire.Common.Repo.Preload.html#config/0","title":"Bonfire.Common.Repo.Preload.config/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.default_options/1 .","ref":"Bonfire.Common.Repo.Preload.html#default_options/1","title":"Bonfire.Common.Repo.Preload.default_options/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete!/2 .","ref":"Bonfire.Common.Repo.Preload.html#delete!/2","title":"Bonfire.Common.Repo.Preload.delete!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete/2 .","ref":"Bonfire.Common.Repo.Preload.html#delete/2","title":"Bonfire.Common.Repo.Preload.delete/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete_all/2 .","ref":"Bonfire.Common.Repo.Preload.html#delete_all/2","title":"Bonfire.Common.Repo.Preload.delete_all/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that forces all connections in the pool to disconnect within the given interval. See Ecto.Adapters.SQL.disconnect_all/3 for more information.","ref":"Bonfire.Common.Repo.Preload.html#disconnect_all/2","title":"Bonfire.Common.Repo.Preload.disconnect_all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.exists?/2 .","ref":"Bonfire.Common.Repo.Preload.html#exists?/2","title":"Bonfire.Common.Repo.Preload.exists?/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes an EXPLAIN statement or similar depending on the adapter to obtain statistics for the given query. See Ecto.Adapters.SQL.explain/4 for more information.","ref":"Bonfire.Common.Repo.Preload.html#explain/3","title":"Bonfire.Common.Repo.Preload.explain/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get!/3 .","ref":"Bonfire.Common.Repo.Preload.html#get!/3","title":"Bonfire.Common.Repo.Preload.get!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get/3 .","ref":"Bonfire.Common.Repo.Preload.html#get/3","title":"Bonfire.Common.Repo.Preload.get/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by!/3 .","ref":"Bonfire.Common.Repo.Preload.html#get_by!/3","title":"Bonfire.Common.Repo.Preload.get_by!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by/3 .","ref":"Bonfire.Common.Repo.Preload.html#get_by/3","title":"Bonfire.Common.Repo.Preload.get_by/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_dynamic_repo/0 .","ref":"Bonfire.Common.Repo.Preload.html#get_dynamic_repo/0","title":"Bonfire.Common.Repo.Preload.get_dynamic_repo/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.in_transaction?/0 .","ref":"Bonfire.Common.Repo.Preload.html#in_transaction?/0","title":"Bonfire.Common.Repo.Preload.in_transaction?/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert!/2 .","ref":"Bonfire.Common.Repo.Preload.html#insert!/2","title":"Bonfire.Common.Repo.Preload.insert!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert/2 .","ref":"Bonfire.Common.Repo.Preload.html#insert/2","title":"Bonfire.Common.Repo.Preload.insert/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_all/3 .","ref":"Bonfire.Common.Repo.Preload.html#insert_all/3","title":"Bonfire.Common.Repo.Preload.insert_all/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update!/2 .","ref":"Bonfire.Common.Repo.Preload.html#insert_or_update!/2","title":"Bonfire.Common.Repo.Preload.insert_or_update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update/2 .","ref":"Bonfire.Common.Repo.Preload.html#insert_or_update/2","title":"Bonfire.Common.Repo.Preload.insert_or_update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.load/2 .","ref":"Bonfire.Common.Repo.Preload.html#load/2","title":"Bonfire.Common.Repo.Preload.load/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Repo.Preload.html#maybe_preload/3","title":"Bonfire.Common.Repo.Preload.maybe_preload/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Repo.Preload.html#maybe_preloads_per_nested_schema/4","title":"Bonfire.Common.Repo.Preload.maybe_preloads_per_nested_schema/4","type":"function"},{"doc":"","ref":"Bonfire.Common.Repo.Preload.html#maybe_preloads_per_schema/3","title":"Bonfire.Common.Repo.Preload.maybe_preloads_per_schema/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one!/2 .","ref":"Bonfire.Common.Repo.Preload.html#one!/2","title":"Bonfire.Common.Repo.Preload.one!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one/2 .","ref":"Bonfire.Common.Repo.Preload.html#one/2","title":"Bonfire.Common.Repo.Preload.one/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.preload/3 .","ref":"Bonfire.Common.Repo.Preload.html#preload/3","title":"Bonfire.Common.Repo.Preload.preload/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.prepare_query/3 .","ref":"Bonfire.Common.Repo.Preload.html#prepare_query/3","title":"Bonfire.Common.Repo.Preload.prepare_query/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.put_dynamic_repo/1 .","ref":"Bonfire.Common.Repo.Preload.html#put_dynamic_repo/1","title":"Bonfire.Common.Repo.Preload.put_dynamic_repo/1","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query. See Ecto.Adapters.SQL.query!/4 for more information.","ref":"Bonfire.Common.Repo.Preload.html#query!/3","title":"Bonfire.Common.Repo.Preload.query!/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query. See Ecto.Adapters.SQL.query/4 for more information.","ref":"Bonfire.Common.Repo.Preload.html#query/3","title":"Bonfire.Common.Repo.Preload.query/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given multi-result query. See Ecto.Adapters.SQL.query_many!/4 for more information.","ref":"Bonfire.Common.Repo.Preload.html#query_many!/3","title":"Bonfire.Common.Repo.Preload.query_many!/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given multi-result query. See Ecto.Adapters.SQL.query_many/4 for more information.","ref":"Bonfire.Common.Repo.Preload.html#query_many/3","title":"Bonfire.Common.Repo.Preload.query_many/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.reload!/2 .","ref":"Bonfire.Common.Repo.Preload.html#reload!/2","title":"Bonfire.Common.Repo.Preload.reload!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.reload/2 .","ref":"Bonfire.Common.Repo.Preload.html#reload/2","title":"Bonfire.Common.Repo.Preload.reload/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.rollback/1 .","ref":"Bonfire.Common.Repo.Preload.html#rollback/1","title":"Bonfire.Common.Repo.Preload.rollback/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.start_link/1 .","ref":"Bonfire.Common.Repo.Preload.html#start_link/1","title":"Bonfire.Common.Repo.Preload.start_link/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stop/1 .","ref":"Bonfire.Common.Repo.Preload.html#stop/1","title":"Bonfire.Common.Repo.Preload.stop/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stream/2 .","ref":"Bonfire.Common.Repo.Preload.html#stream/2","title":"Bonfire.Common.Repo.Preload.stream/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that translates the given query to SQL. See Ecto.Adapters.SQL.to_sql/3 for more information.","ref":"Bonfire.Common.Repo.Preload.html#to_sql/2","title":"Bonfire.Common.Repo.Preload.to_sql/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.transaction/2 .","ref":"Bonfire.Common.Repo.Preload.html#transaction/2","title":"Bonfire.Common.Repo.Preload.transaction/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update!/2 .","ref":"Bonfire.Common.Repo.Preload.html#update!/2","title":"Bonfire.Common.Repo.Preload.update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update/2 .","ref":"Bonfire.Common.Repo.Preload.html#update/2","title":"Bonfire.Common.Repo.Preload.update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update_all/3 .","ref":"Bonfire.Common.Repo.Preload.html#update_all/3","title":"Bonfire.Common.Repo.Preload.update_all/3","type":"function"},{"doc":"Helper functions for changesets","ref":"Bonfire.Common.Repo.Utils.html","title":"Bonfire.Common.Repo.Utils","type":"module"},{"doc":"Keeps disabled_at in accord with is_disabled","ref":"Bonfire.Common.Repo.Utils.html#change_disabled/1","title":"Bonfire.Common.Repo.Utils.change_disabled/1","type":"function"},{"doc":"Keeps muted_at in accord with is_muted","ref":"Bonfire.Common.Repo.Utils.html#change_muted/1","title":"Bonfire.Common.Repo.Utils.change_muted/1","type":"function"},{"doc":"Keeps published_at in accord with is_public","ref":"Bonfire.Common.Repo.Utils.html#change_public/1","title":"Bonfire.Common.Repo.Utils.change_public/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Repo.Utils.html#match_admin/0","title":"Bonfire.Common.Repo.Utils.match_admin/0","type":"macro"},{"doc":"Validates an email for correctness","ref":"Bonfire.Common.Repo.Utils.html#validate_email/2","title":"Bonfire.Common.Repo.Utils.validate_email/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Repo.Utils.html#validate_email_domain/2","title":"Bonfire.Common.Repo.Utils.validate_email_domain/2","type":"function"},{"doc":"","ref":"Bonfire.Common.RuntimeConfig.html","title":"Bonfire.Common.RuntimeConfig","type":"module"},{"doc":"","ref":"Bonfire.Common.RuntimeConfig.html#config/0","title":"Bonfire.Common.RuntimeConfig.config/0","type":"function"},{"doc":"","ref":"Bonfire.Common.RuntimeConfig.html#config_module/0","title":"Bonfire.Common.RuntimeConfig.config_module/0","type":"function"},{"doc":"","ref":"Bonfire.Common.RuntimeConfig.html#skip_test_tags/1","title":"Bonfire.Common.RuntimeConfig.skip_test_tags/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Simulation.html","title":"Bonfire.Common.Simulation","type":"module"},{"doc":"Picks a unique random url for an ap endpoint","ref":"Bonfire.Common.Simulation.html#ap_url_base/0","title":"Bonfire.Common.Simulation.ap_url_base/0","type":"function"},{"doc":"Generates random base64 text","ref":"Bonfire.Common.Simulation.html#base64/0","title":"Bonfire.Common.Simulation.base64/0","type":"function"},{"doc":"Generates a random boolean","ref":"Bonfire.Common.Simulation.html#bool/0","title":"Bonfire.Common.Simulation.bool/0","type":"function"},{"doc":"Picks a random canonical url and makes it unique","ref":"Bonfire.Common.Simulation.html#canonical_url/0","title":"Bonfire.Common.Simulation.canonical_url/0","type":"function"},{"doc":"Generate a random content type","ref":"Bonfire.Common.Simulation.html#content_type/0","title":"Bonfire.Common.Simulation.content_type/0","type":"function"},{"doc":"Picks a remote url from a set of available ones.","ref":"Bonfire.Common.Simulation.html#content_url/0","title":"Bonfire.Common.Simulation.content_url/0","type":"function"},{"doc":"Generates a random date of birth based on an age range of 18-99","ref":"Bonfire.Common.Simulation.html#date_of_birth/0","title":"Bonfire.Common.Simulation.date_of_birth/0","type":"function"},{"doc":"Generates a random domain name","ref":"Bonfire.Common.Simulation.html#domain/0","title":"Bonfire.Common.Simulation.domain/0","type":"function"},{"doc":"Generates a random unique email","ref":"Bonfire.Common.Simulation.html#email/0","title":"Bonfire.Common.Simulation.email/0","type":"function"},{"doc":"Generates the first half of an email address","ref":"Bonfire.Common.Simulation.html#email_user/0","title":"Bonfire.Common.Simulation.email_user/0","type":"function"},{"doc":"Returns false","ref":"Bonfire.Common.Simulation.html#falsehood/0","title":"Bonfire.Common.Simulation.falsehood/0","type":"function"},{"doc":"Generate a random floating point number","ref":"Bonfire.Common.Simulation.html#float/0","title":"Bonfire.Common.Simulation.float/0","type":"function"},{"doc":"Picks a date up to 300 days in the future, not including today","ref":"Bonfire.Common.Simulation.html#future_date/0","title":"Bonfire.Common.Simulation.future_date/0","type":"function"},{"doc":"Picks a datetime up to 300 days in the future, not including today","ref":"Bonfire.Common.Simulation.html#future_datetime/0","title":"Bonfire.Common.Simulation.future_datetime/0","type":"function"},{"doc":"Same as future_datetime, but as an ISO8601 formatted string.","ref":"Bonfire.Common.Simulation.html#future_datetime_iso/0","title":"Bonfire.Common.Simulation.future_datetime_iso/0","type":"function"},{"doc":"Picks an icon url","ref":"Bonfire.Common.Simulation.html#icon/0","title":"Bonfire.Common.Simulation.icon/0","type":"function"},{"doc":"Picks an image url","ref":"Bonfire.Common.Simulation.html#image/0","title":"Bonfire.Common.Simulation.image/0","type":"function"},{"doc":"Generate a random signed integer","ref":"Bonfire.Common.Simulation.html#integer/0","title":"Bonfire.Common.Simulation.integer/0","type":"function"},{"doc":"A random license for content","ref":"Bonfire.Common.Simulation.html#license/0","title":"Bonfire.Common.Simulation.license/0","type":"function"},{"doc":"Returns a city and country","ref":"Bonfire.Common.Simulation.html#location/0","title":"Bonfire.Common.Simulation.location/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Simulation.html#long_count/0","title":"Bonfire.Common.Simulation.long_count/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Simulation.html#long_list/1","title":"Bonfire.Common.Simulation.long_list/1","type":"function"},{"doc":"Generate a random boolean that can also be nil","ref":"Bonfire.Common.Simulation.html#maybe_bool/0","title":"Bonfire.Common.Simulation.maybe_bool/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Simulation.html#maybe_one_of/1","title":"Bonfire.Common.Simulation.maybe_one_of/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Simulation.html#med_count/0","title":"Bonfire.Common.Simulation.med_count/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Simulation.html#med_list/1","title":"Bonfire.Common.Simulation.med_list/1","type":"function"},{"doc":"Picks a name","ref":"Bonfire.Common.Simulation.html#name/0","title":"Bonfire.Common.Simulation.name/0","type":"function"},{"doc":"Generate a random negative integer","ref":"Bonfire.Common.Simulation.html#neg_integer/0","title":"Bonfire.Common.Simulation.neg_integer/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Simulation.html#one_of/1","title":"Bonfire.Common.Simulation.one_of/1","type":"function"},{"doc":"Generates a random paragraph","ref":"Bonfire.Common.Simulation.html#paragraph/0","title":"Bonfire.Common.Simulation.paragraph/0","type":"function"},{"doc":"Generates a random password string","ref":"Bonfire.Common.Simulation.html#password/0","title":"Bonfire.Common.Simulation.password/0","type":"function"},{"doc":"Picks a date up to 300 days in the past, not including today","ref":"Bonfire.Common.Simulation.html#past_date/0","title":"Bonfire.Common.Simulation.past_date/0","type":"function"},{"doc":"Picks a datetime up to 300 days in the past, not including today","ref":"Bonfire.Common.Simulation.html#past_datetime/0","title":"Bonfire.Common.Simulation.past_datetime/0","type":"function"},{"doc":"Same as past_datetime, but as an ISO8601 formatted string.","ref":"Bonfire.Common.Simulation.html#past_datetime_iso/0","title":"Bonfire.Common.Simulation.past_datetime_iso/0","type":"function"},{"doc":"Picks a path from a set of available files.","ref":"Bonfire.Common.Simulation.html#path/0","title":"Bonfire.Common.Simulation.path/0","type":"function"},{"doc":"Generate a random positive integer","ref":"Bonfire.Common.Simulation.html#pos_integer/0","title":"Bonfire.Common.Simulation.pos_integer/0","type":"function"},{"doc":"Picks a unique preferred_username","ref":"Bonfire.Common.Simulation.html#preferred_username/0","title":"Bonfire.Common.Simulation.preferred_username/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Simulation.html#short_count/0","title":"Bonfire.Common.Simulation.short_count/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Simulation.html#short_list/1","title":"Bonfire.Common.Simulation.short_list/1","type":"function"},{"doc":"Picks a fake signing key","ref":"Bonfire.Common.Simulation.html#signing_key/0","title":"Bonfire.Common.Simulation.signing_key/0","type":"function"},{"doc":"Repeats a function count times if count_or_range is a positive integer. If count_or_range is a positive range, a random number from this range is selected and that value used as a count","ref":"Bonfire.Common.Simulation.html#some/2","title":"Bonfire.Common.Simulation.some/2","type":"function"},{"doc":"Picks a summary text paragraph","ref":"Bonfire.Common.Simulation.html#summary/0","title":"Bonfire.Common.Simulation.summary/0","type":"function"},{"doc":"Returns true","ref":"Bonfire.Common.Simulation.html#truth/0","title":"Bonfire.Common.Simulation.truth/0","type":"function"},{"doc":"Generates a random unique ulid","ref":"Bonfire.Common.Simulation.html#ulid/0","title":"Bonfire.Common.Simulation.ulid/0","type":"function"},{"doc":"Generates a random url","ref":"Bonfire.Common.Simulation.html#url/0","title":"Bonfire.Common.Simulation.url/0","type":"function"},{"doc":"Generates a random username","ref":"Bonfire.Common.Simulation.html#username/0","title":"Bonfire.Common.Simulation.username/0","type":"function"},{"doc":"Generates a random unique uuid","ref":"Bonfire.Common.Simulation.html#uuid/0","title":"Bonfire.Common.Simulation.uuid/0","type":"function"},{"doc":"A verb to be used for an activity.","ref":"Bonfire.Common.Simulation.html#verb/0","title":"Bonfire.Common.Simulation.verb/0","type":"function"},{"doc":"A website address","ref":"Bonfire.Common.Simulation.html#website/0","title":"Bonfire.Common.Simulation.website/0","type":"function"},{"doc":"This utility allows to get the same effect of using fcwatch | mix test --stale --listen-on-stdin to watch for code changes and run stale tests, but with more control and without the starting time penalty. Note that watching requires fswatch on your system. Eg on Mac run brew install fswatch . To use it, in your project's .iex file add: unless GenServer . whereis ( Bonfire.Common.Test.Interactive ) do { :ok , pid } = Bonfire.Common.Test.Interactive . start_link ( ) # Process will not exit when the iex goes out Process . unlink ( pid ) end import Bonfire.Common.Test.Interactive.Helpers Then to call iex and run tests just do: MIX_ENV = test iex - S mix The Bonfire.Common.Test.Interactive.Helpers allows to call f and s and a to run failed, stale and all tests respectively. You can call w to watch tests and uw to unwatch. There is a really simple throttle mecanism that disallow running the suite concurrently.","ref":"Bonfire.Common.Test.Interactive.html","title":"Bonfire.Common.Test.Interactive","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Bonfire.Common.Test.Interactive.html#child_spec/1","title":"Bonfire.Common.Test.Interactive.child_spec/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Test.Interactive.html#run_all_tests/1","title":"Bonfire.Common.Test.Interactive.run_all_tests/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Test.Interactive.html#run_failed_tests/1","title":"Bonfire.Common.Test.Interactive.run_failed_tests/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Test.Interactive.html#run_stale_tests/1","title":"Bonfire.Common.Test.Interactive.run_stale_tests/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Test.Interactive.html#setup_test_repo/1","title":"Bonfire.Common.Test.Interactive.setup_test_repo/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Test.Interactive.html#start_link/0","title":"Bonfire.Common.Test.Interactive.start_link/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Test.Interactive.html#unlock/0","title":"Bonfire.Common.Test.Interactive.unlock/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Test.Interactive.html#unwatch_tests/0","title":"Bonfire.Common.Test.Interactive.unwatch_tests/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Test.Interactive.html#watch_tests/1","title":"Bonfire.Common.Test.Interactive.watch_tests/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Test.Interactive.Helpers.html","title":"Bonfire.Common.Test.Interactive.Helpers","type":"module"},{"doc":"See Bonfire.Common.Test.Interactive.run_failed_tests/1 .","ref":"Bonfire.Common.Test.Interactive.Helpers.html#f/1","title":"Bonfire.Common.Test.Interactive.Helpers.f/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Test.Interactive.Helpers.html#ready/0","title":"Bonfire.Common.Test.Interactive.Helpers.ready/0","type":"function"},{"doc":"See Bonfire.Common.Test.Interactive.run_stale_tests/1 .","ref":"Bonfire.Common.Test.Interactive.Helpers.html#s/1","title":"Bonfire.Common.Test.Interactive.Helpers.s/1","type":"function"},{"doc":"See Bonfire.Common.Test.Interactive.run_all_tests/1 .","ref":"Bonfire.Common.Test.Interactive.Helpers.html#ta/1","title":"Bonfire.Common.Test.Interactive.Helpers.ta/1","type":"function"},{"doc":"See Bonfire.Common.Test.Interactive.unwatch_tests/0 .","ref":"Bonfire.Common.Test.Interactive.Helpers.html#uw/0","title":"Bonfire.Common.Test.Interactive.Helpers.uw/0","type":"function"},{"doc":"See Bonfire.Common.Test.Interactive.watch_tests/1 .","ref":"Bonfire.Common.Test.Interactive.Helpers.html#w/1","title":"Bonfire.Common.Test.Interactive.Helpers.w/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Test.Interactive.Observer.html","title":"Bonfire.Common.Test.Interactive.Observer","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Bonfire.Common.Test.Interactive.Observer.html#child_spec/1","title":"Bonfire.Common.Test.Interactive.Observer.child_spec/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html","title":"Bonfire.Common.Text","type":"module"},{"doc":"","ref":"Bonfire.Common.Text.html#blank?/1","title":"Bonfire.Common.Text.blank?/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#camelise/1","title":"Bonfire.Common.Text.camelise/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#contains_html?/1","title":"Bonfire.Common.Text.contains_html?/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#list_checkboxes/1","title":"Bonfire.Common.Text.list_checkboxes/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#list_checked_boxes/1","title":"Bonfire.Common.Text.list_checked_boxes/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#list_unchecked_boxes/1","title":"Bonfire.Common.Text.list_unchecked_boxes/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#markdown_checkboxes/1","title":"Bonfire.Common.Text.markdown_checkboxes/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#maybe_emote/1","title":"Bonfire.Common.Text.maybe_emote/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#maybe_markdown_to_html/1","title":"Bonfire.Common.Text.maybe_markdown_to_html/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#maybe_normalize_html/1","title":"Bonfire.Common.Text.maybe_normalize_html/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#maybe_render_templated/2","title":"Bonfire.Common.Text.maybe_render_templated/2","type":"function"},{"doc":"It is recommended to call this before storing any that data is coming in from the user or from a remote instance","ref":"Bonfire.Common.Text.html#maybe_sane_html/1","title":"Bonfire.Common.Text.maybe_sane_html/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#normalise_links/1","title":"Bonfire.Common.Text.normalise_links/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#regex_list/2","title":"Bonfire.Common.Text.regex_list/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#sentence_truncate/3","title":"Bonfire.Common.Text.sentence_truncate/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#text_only/1","title":"Bonfire.Common.Text.text_only/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#truncate/3","title":"Bonfire.Common.Text.truncate/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#underscore_truncate/2","title":"Bonfire.Common.Text.underscore_truncate/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Text.html#upcase_first/1","title":"Bonfire.Common.Text.upcase_first/1","type":"function"},{"doc":"Uses the Verbs library to convert an English conjugated verb back to inifinitive form. Currently only supports irregular verbs.","ref":"Bonfire.Common.Text.html#verb_infinitive/1","title":"Bonfire.Common.Text.verb_infinitive/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Types.html","title":"Bonfire.Common.Types","type":"module"},{"doc":"Outputs the names all object types, for the purpose of adding to the localisation strings, as long as the output is piped through to localise_strings/1 at compile time.","ref":"Bonfire.Common.Types.html#all_object_type_names/0","title":"Bonfire.Common.Types.all_object_type_names/0","type":"function"},{"doc":"","ref":"Bonfire.Common.Types.html#object_type/1","title":"Bonfire.Common.Types.object_type/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Types.html#object_type_display/1","title":"Bonfire.Common.Types.object_type_display/1","type":"function"},{"doc":"","ref":"Bonfire.Common.URIs.html","title":"Bonfire.Common.URIs","type":"module"},{"doc":"","ref":"Bonfire.Common.URIs.html#base_url/1","title":"Bonfire.Common.URIs.base_url/1","type":"function"},{"doc":"","ref":"Bonfire.Common.URIs.html#canonical_url/1","title":"Bonfire.Common.URIs.canonical_url/1","type":"function"},{"doc":"","ref":"Bonfire.Common.URIs.html#fallback/1","title":"Bonfire.Common.URIs.fallback/1","type":"function"},{"doc":"","ref":"Bonfire.Common.URIs.html#fallback/2","title":"Bonfire.Common.URIs.fallback/2","type":"function"},{"doc":"","ref":"Bonfire.Common.URIs.html#instance_domain/1","title":"Bonfire.Common.URIs.instance_domain/1","type":"function"},{"doc":"","ref":"Bonfire.Common.URIs.html#is_uri?/1","title":"Bonfire.Common.URIs.is_uri?/1","type":"function"},{"doc":"","ref":"Bonfire.Common.URIs.html#path/2","title":"Bonfire.Common.URIs.path/2","type":"function"},{"doc":"","ref":"Bonfire.Common.URIs.html#path_by_id/3","title":"Bonfire.Common.URIs.path_by_id/3","type":"function"},{"doc":"","ref":"Bonfire.Common.URIs.html#url/2","title":"Bonfire.Common.URIs.url/2","type":"function"},{"doc":"","ref":"Bonfire.Common.URIs.html#validate_uri/1","title":"Bonfire.Common.URIs.validate_uri/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html","title":"Bonfire.Common.Utils","type":"module"},{"doc":"","ref":"Bonfire.Common.Utils.html#apply_error/2","title":"Bonfire.Common.Utils.apply_error/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#attr_get_id/2","title":"Bonfire.Common.Utils.attr_get_id/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#avatar_fallback/1","title":"Bonfire.Common.Utils.avatar_fallback/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#avatar_url/1","title":"Bonfire.Common.Utils.avatar_url/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#banner_url/1","title":"Bonfire.Common.Utils.banner_url/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#contains?/2","title":"Bonfire.Common.Utils.contains?/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#current_account/1","title":"Bonfire.Common.Utils.current_account/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#current_account_and_or_user_ids/1","title":"Bonfire.Common.Utils.current_account_and_or_user_ids/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#current_user/1","title":"Bonfire.Common.Utils.current_user/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#date_from_now/1","title":"Bonfire.Common.Utils.date_from_now/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#date_from_pointer/1","title":"Bonfire.Common.Utils.date_from_pointer/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#debug_banner_with_trace/3","title":"Bonfire.Common.Utils.debug_banner_with_trace/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#debug_exception/4","title":"Bonfire.Common.Utils.debug_exception/4","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#debug_log/4","title":"Bonfire.Common.Utils.debug_log/4","type":"function"},{"doc":"recursively merge maps or lists","ref":"Bonfire.Common.Utils.html#deep_merge/2","title":"Bonfire.Common.Utils.deep_merge/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#deep_merge_reduce/1","title":"Bonfire.Common.Utils.deep_merge_reduce/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#defines_struct?/1","title":"Bonfire.Common.Utils.defines_struct?/1","type":"function"},{"doc":"Returns a value, or a fallback if nil/false","ref":"Bonfire.Common.Utils.html#e/2","title":"Bonfire.Common.Utils.e/2","type":"function"},{"doc":"Returns a value from a map, or a fallback if not present","ref":"Bonfire.Common.Utils.html#e/3","title":"Bonfire.Common.Utils.e/3","type":"function"},{"doc":"Returns a value from a nested map, or a fallback if not present","ref":"Bonfire.Common.Utils.html#e/4","title":"Bonfire.Common.Utils.e/4","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#e/5","title":"Bonfire.Common.Utils.e/5","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#e/6","title":"Bonfire.Common.Utils.e/6","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#e/7","title":"Bonfire.Common.Utils.e/7","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#e/8","title":"Bonfire.Common.Utils.e/8","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#elem_or/3","title":"Bonfire.Common.Utils.elem_or/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#error_msg/1","title":"Bonfire.Common.Utils.error_msg/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#filter_empty/2","title":"Bonfire.Common.Utils.filter_empty/2","type":"function"},{"doc":"Flattens a list by recursively flattening the head and tail of the list","ref":"Bonfire.Common.Utils.html#flatter/1","title":"Bonfire.Common.Utils.flatter/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#image_url/1","title":"Bonfire.Common.Utils.image_url/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#input_to_atoms/3","title":"Bonfire.Common.Utils.input_to_atoms/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#is_numeric/1","title":"Bonfire.Common.Utils.is_numeric/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#is_ulid?/1","title":"Bonfire.Common.Utils.is_ulid?/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#macro_inspect/1","title":"Bonfire.Common.Utils.macro_inspect/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#magic_filter_empty/4","title":"Bonfire.Common.Utils.magic_filter_empty/4","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#map_error/2","title":"Bonfire.Common.Utils.map_error/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#map_filter_empty/1","title":"Bonfire.Common.Utils.map_filter_empty/1","type":"function"},{"doc":"Attempt geting a value out of a map by atom key, or try with string key, or return a fallback","ref":"Bonfire.Common.Utils.html#map_get/3","title":"Bonfire.Common.Utils.map_get/3","type":"function"},{"doc":"Rename a key in a map","ref":"Bonfire.Common.Utils.html#map_key_replace/4","title":"Bonfire.Common.Utils.map_key_replace/4","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#map_key_replace_existing/4","title":"Bonfire.Common.Utils.map_key_replace_existing/4","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#map_new/2","title":"Bonfire.Common.Utils.map_new/2","type":"function"},{"doc":"Applies change_fn if the first parameter is not nil.","ref":"Bonfire.Common.Utils.html#maybe/2","title":"Bonfire.Common.Utils.maybe/2","type":"function"},{"doc":"Append an item to a list if it is not nil","ref":"Bonfire.Common.Utils.html#maybe_append/2","title":"Bonfire.Common.Utils.maybe_append/2","type":"function"},{"doc":"Helpers for calling hypothetical functions in other modules","ref":"Bonfire.Common.Utils.html#maybe_apply/4","title":"Bonfire.Common.Utils.maybe_apply/4","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_convert_ulids/1","title":"Bonfire.Common.Utils.maybe_convert_ulids/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_flatten/1","title":"Bonfire.Common.Utils.maybe_flatten/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_from_opts/3","title":"Bonfire.Common.Utils.maybe_from_opts/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_from_struct/1","title":"Bonfire.Common.Utils.maybe_from_struct/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_get/3","title":"Bonfire.Common.Utils.maybe_get/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_list/2","title":"Bonfire.Common.Utils.maybe_list/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_merge_to_struct/2","title":"Bonfire.Common.Utils.maybe_merge_to_struct/2","type":"function"},{"doc":"Applies change_fn if the first parameter is an {:ok, val} tuple, else returns the value","ref":"Bonfire.Common.Utils.html#maybe_ok_error/2","title":"Bonfire.Common.Utils.maybe_ok_error/2","type":"function"},{"doc":"conditionally update a map","ref":"Bonfire.Common.Utils.html#maybe_put/3","title":"Bonfire.Common.Utils.maybe_put/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_to_atom!/1","title":"Bonfire.Common.Utils.maybe_to_atom!/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_to_atom/1","title":"Bonfire.Common.Utils.maybe_to_atom/1","type":"function"},{"doc":"Converts an enumerable to a list recursively Note: make sure that all keys are atoms, i.e. using input_to_atoms first","ref":"Bonfire.Common.Utils.html#maybe_to_keyword_list/2","title":"Bonfire.Common.Utils.maybe_to_keyword_list/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_to_map/2","title":"Bonfire.Common.Utils.maybe_to_map/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_to_module/1","title":"Bonfire.Common.Utils.maybe_to_module/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_to_snake/1","title":"Bonfire.Common.Utils.maybe_to_snake/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_to_snake_atom/1","title":"Bonfire.Common.Utils.maybe_to_snake_atom/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_to_string/1","title":"Bonfire.Common.Utils.maybe_to_string/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_to_struct/2","title":"Bonfire.Common.Utils.maybe_to_struct/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#maybe_to_structs/1","title":"Bonfire.Common.Utils.maybe_to_structs/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#media_url/1","title":"Bonfire.Common.Utils.media_url/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#merge_structs_as_map/2","title":"Bonfire.Common.Utils.merge_structs_as_map/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#module_to_human_readable/1","title":"Bonfire.Common.Utils.module_to_human_readable/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#module_to_str/1","title":"Bonfire.Common.Utils.module_to_str/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#nested_structs_to_maps/1","title":"Bonfire.Common.Utils.nested_structs_to_maps/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#ok_or/2","title":"Bonfire.Common.Utils.ok_or/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#put_new_in/3","title":"Bonfire.Common.Utils.put_new_in/3","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#random_string/1","title":"Bonfire.Common.Utils.random_string/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#replace_error/2","title":"Bonfire.Common.Utils.replace_error/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#replace_nil/2","title":"Bonfire.Common.Utils.replace_nil/2","type":"function"},{"doc":"Convert map atom keys to strings","ref":"Bonfire.Common.Utils.html#stringify_keys/2","title":"Bonfire.Common.Utils.stringify_keys/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#strlen/1","title":"Bonfire.Common.Utils.strlen/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#struct_from_map/2","title":"Bonfire.Common.Utils.struct_from_map/2","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#struct_to_map/1","title":"Bonfire.Common.Utils.struct_to_map/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#to_number/1","title":"Bonfire.Common.Utils.to_number/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#to_options/1","title":"Bonfire.Common.Utils.to_options/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#ulid!/1","title":"Bonfire.Common.Utils.ulid!/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#ulid/1","title":"Bonfire.Common.Utils.ulid/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#ulids/1","title":"Bonfire.Common.Utils.ulids/1","type":"function"},{"doc":"","ref":"Bonfire.Common.Utils.html#uniq_by_id/1","title":"Bonfire.Common.Utils.uniq_by_id/1","type":"function"},{"doc":"Bonfire.Epics helpers for working with Ecto","ref":"Bonfire.Ecto.html","title":"Bonfire.Ecto","type":"module"},{"doc":"An Act that enters a transaction unless it senses that it would be futile.","ref":"Bonfire.Ecto.Acts.Begin.html","title":"Bonfire.Ecto.Acts.Begin","type":"module"},{"doc":"","ref":"Bonfire.Ecto.Acts.Begin.html#run/2","title":"Bonfire.Ecto.Acts.Begin.run/2","type":"function"},{"doc":"A placeholder marker used by Begin to identify when to commit the transaction.","ref":"Bonfire.Ecto.Acts.Commit.html","title":"Bonfire.Ecto.Acts.Commit","type":"module"},{"doc":"","ref":"Bonfire.Ecto.Acts.Commit.html#run/2","title":"Bonfire.Ecto.Acts.Commit.run/2","type":"function"},{"doc":"An act that marks a changeset or struct for deletion","ref":"Bonfire.Ecto.Acts.Delete.html","title":"Bonfire.Ecto.Acts.Delete","type":"module"},{"doc":"","ref":"Bonfire.Ecto.Acts.Delete.html#maybe_delete/2","title":"Bonfire.Ecto.Acts.Delete.maybe_delete/2","type":"function"},{"doc":"","ref":"Bonfire.Ecto.Acts.Delete.html#run/2","title":"Bonfire.Ecto.Acts.Delete.run/2","type":"function"},{"doc":"An act that performs queued up work in a transaction. Work is queued up with calls to add/2 in earlier acts and when run, this act will apply the appropriate actions. Only runs if there are no epic or changesets errors.","ref":"Bonfire.Ecto.Acts.Work.html","title":"Bonfire.Ecto.Acts.Work","type":"module"},{"doc":"Records that a particular key contains a changeset for processing. Use in earlier acts, to schedule work for in-transaction. If you wish to delete, you must ensure you set the changeset's :action key to :delete .","ref":"Bonfire.Ecto.Acts.Work.html#add/2","title":"Bonfire.Ecto.Acts.Work.add/2","type":"function"},{"doc":"","ref":"Bonfire.Epics.html","title":"Bonfire.Epics","type":"module"},{"doc":"Log some inspect output to debug if the :debug key is set in the act or epic options","ref":"Bonfire.Epics.html#debug/4","title":"Bonfire.Epics.debug/4","type":"macro"},{"doc":"","ref":"Bonfire.Epics.html#maybe_debug/3","title":"Bonfire.Epics.maybe_debug/3","type":"macro"},{"doc":"","ref":"Bonfire.Epics.html#maybe_debug/4","title":"Bonfire.Epics.maybe_debug/4","type":"macro"},{"doc":"Like verbose , but will omit fully outputting the inspectable thing and still print the message if only :debug is set","ref":"Bonfire.Epics.html#smart/4","title":"Bonfire.Epics.smart/4","type":"macro"},{"doc":"Like debug , but additionally checks for the :verbose option. Intended for output that could get large.","ref":"Bonfire.Epics.html#verbose/4","title":"Bonfire.Epics.verbose/4","type":"macro"},{"doc":"","ref":"Bonfire.Epics.Act.html","title":"Bonfire.Epics.Act","type":"behaviour"},{"doc":"","ref":"Bonfire.Epics.Act.html#debug/3","title":"Bonfire.Epics.Act.debug/3","type":"macro"},{"doc":"","ref":"Bonfire.Epics.Act.html#new/1","title":"Bonfire.Epics.Act.new/1","type":"function"},{"doc":"","ref":"Bonfire.Epics.Act.html#new/2","title":"Bonfire.Epics.Act.new/2","type":"function"},{"doc":"","ref":"Bonfire.Epics.Act.html#new/3","title":"Bonfire.Epics.Act.new/3","type":"function"},{"doc":"","ref":"Bonfire.Epics.Act.html#c:run/2","title":"Bonfire.Epics.Act.run/2","type":"callback"},{"doc":"","ref":"Bonfire.Epics.Act.html#t:ret/0","title":"Bonfire.Epics.Act.ret/0","type":"type"},{"doc":"","ref":"Bonfire.Epics.Act.html#t:t/0","title":"Bonfire.Epics.Act.t/0","type":"type"},{"doc":"","ref":"Bonfire.Epics.Debug.html","title":"Bonfire.Epics.Debug","type":"module"},{"doc":"","ref":"Bonfire.Epics.Debug.html#do_maybe_debug/4","title":"Bonfire.Epics.Debug.do_maybe_debug/4","type":"function"},{"doc":"","ref":"Bonfire.Epics.Epic.html","title":"Bonfire.Epics.Epic","type":"module"},{"doc":"","ref":"Bonfire.Epics.Epic.html#add_error/2","title":"Bonfire.Epics.Epic.add_error/2","type":"function"},{"doc":"","ref":"Bonfire.Epics.Epic.html#add_error/3","title":"Bonfire.Epics.Epic.add_error/3","type":"function"},{"doc":"","ref":"Bonfire.Epics.Epic.html#add_error/5","title":"Bonfire.Epics.Epic.add_error/5","type":"function"},{"doc":"","ref":"Bonfire.Epics.Epic.html#append/2","title":"Bonfire.Epics.Epic.append/2","type":"function"},{"doc":"","ref":"Bonfire.Epics.Epic.html#assign/2","title":"Bonfire.Epics.Epic.assign/2","type":"function"},{"doc":"","ref":"Bonfire.Epics.Epic.html#assign/3","title":"Bonfire.Epics.Epic.assign/3","type":"function"},{"doc":"","ref":"Bonfire.Epics.Epic.html#debug/3","title":"Bonfire.Epics.Epic.debug/3","type":"macro"},{"doc":"Loads an epic from the app's config","ref":"Bonfire.Epics.Epic.html#from_config!/2","title":"Bonfire.Epics.Epic.from_config!/2","type":"function"},{"doc":"Loads an epic from a specification of steps","ref":"Bonfire.Epics.Epic.html#from_spec!/1","title":"Bonfire.Epics.Epic.from_spec!/1","type":"function"},{"doc":"","ref":"Bonfire.Epics.Epic.html#maybe_debug/3","title":"Bonfire.Epics.Epic.maybe_debug/3","type":"macro"},{"doc":"","ref":"Bonfire.Epics.Epic.html#new/1","title":"Bonfire.Epics.Epic.new/1","type":"function"},{"doc":"","ref":"Bonfire.Epics.Epic.html#prepend/2","title":"Bonfire.Epics.Epic.prepend/2","type":"function"},{"doc":"","ref":"Bonfire.Epics.Epic.html#run/1","title":"Bonfire.Epics.Epic.run/1","type":"function"},{"doc":"","ref":"Bonfire.Epics.Epic.html#update/4","title":"Bonfire.Epics.Epic.update/4","type":"function"},{"doc":"","ref":"Bonfire.Epics.Epic.html#t:t/0","title":"Bonfire.Epics.Epic.t/0","type":"type"},{"doc":"","ref":"Bonfire.Epics.Error.html","title":"Bonfire.Epics.Error","type":"exception"},{"doc":"Callback implementation for Exception.message/1 .","ref":"Bonfire.Epics.Error.html#message/1","title":"Bonfire.Epics.Error.message/1","type":"function"},{"doc":"","ref":"Bonfire.Epics.Test.html","title":"Bonfire.Epics.Test","type":"module"},{"doc":"","ref":"Bonfire.Epics.Test.html#assert_epic_ok/1","title":"Bonfire.Epics.Test.assert_epic_ok/1","type":"macro"},{"doc":"","ref":"Bonfire.Epics.Test.html#debug_error/1","title":"Bonfire.Epics.Test.debug_error/1","type":"function"},{"doc":"This module contains general functions for handling files, and also an Ecto schema which is a multimixin for storing one or more media attached to a Pointable object. An uploader definition must be provided for each new upload, or will be automatically chosen based on the file type. A few definitions exist as defaults inside of this namespace, but you can also define your own - a Bonfire.Files.Definition is an extension of Waffle.Definition , however the allowed_media_types/0 callback is added, forcing you to define what media types are accepted for these types of uploads. (You can also return :all to accept everything). To use the uploader: iex&gt; { :ok , media } = Bonfire.Files . upload ( MyUploader , context , %{ path : &quot;./150.png&quot; } ) iex&gt; media . media_type &quot;image/png&quot; iex&gt; Bonfire.Files . remote_url ( MyUploader , media ) &quot;/uploads/my/01F3AY6JV30G06BY4DR9BTW5EH&quot;","ref":"Bonfire.Files.html","title":"Bonfire.Files","type":"module"},{"doc":"","ref":"Bonfire.Files.html#ap_publish_activity/1","title":"Bonfire.Files.ap_publish_activity/1","type":"function"},{"doc":"","ref":"Bonfire.Files.html#ap_receive_attachments/2","title":"Bonfire.Files.ap_receive_attachments/2","type":"function"},{"doc":"","ref":"Bonfire.Files.html#data_url/2","title":"Bonfire.Files.data_url/2","type":"function"},{"doc":"","ref":"Bonfire.Files.html#extract_metadata/1","title":"Bonfire.Files.extract_metadata/1","type":"function"},{"doc":"","ref":"Bonfire.Files.html#file_extension/1","title":"Bonfire.Files.file_extension/1","type":"function"},{"doc":"","ref":"Bonfire.Files.html#file_extension_only/1","title":"Bonfire.Files.file_extension_only/1","type":"function"},{"doc":"","ref":"Bonfire.Files.html#full_url/2","title":"Bonfire.Files.full_url/2","type":"function"},{"doc":"Return the URL that a local file has.","ref":"Bonfire.Files.html#remote_url/3","title":"Bonfire.Files.remote_url/3","type":"function"},{"doc":"Attempt to store a file, returning an upload, for any parent item that participates in the meta abstraction, providing the user/context of the upload.","ref":"Bonfire.Files.html#upload/5","title":"Bonfire.Files.upload/5","type":"function"},{"doc":"","ref":"Bonfire.Files.html#verify_media_type/2","title":"Bonfire.Files.verify_media_type/2","type":"function"},{"doc":"Uploader for larger images, for example, a profile page banner. Does not do any type of image resizing/thumbnailing.","ref":"Bonfire.Files.BannerUploader.html","title":"Bonfire.Files.BannerUploader","type":"module"},{"doc":"","ref":"Bonfire.Files.BannerUploader.html#acl/2","title":"Bonfire.Files.BannerUploader.acl/2","type":"function"},{"doc":"Callback implementation for Bonfire.Files.Definition.allowed_media_types/0 .","ref":"Bonfire.Files.BannerUploader.html#allowed_media_types/0","title":"Bonfire.Files.BannerUploader.allowed_media_types/0","type":"function"},{"doc":"","ref":"Bonfire.Files.BannerUploader.html#asset_host/0","title":"Bonfire.Files.BannerUploader.asset_host/0","type":"function"},{"doc":"","ref":"Bonfire.Files.BannerUploader.html#async/0","title":"Bonfire.Files.BannerUploader.async/0","type":"function"},{"doc":"","ref":"Bonfire.Files.BannerUploader.html#blurred/1","title":"Bonfire.Files.BannerUploader.blurred/1","type":"function"},{"doc":"","ref":"Bonfire.Files.BannerUploader.html#bucket/0","title":"Bonfire.Files.BannerUploader.bucket/0","type":"function"},{"doc":"","ref":"Bonfire.Files.BannerUploader.html#bucket/1","title":"Bonfire.Files.BannerUploader.bucket/1","type":"function"},{"doc":"","ref":"Bonfire.Files.BannerUploader.html#default_url/1","title":"Bonfire.Files.BannerUploader.default_url/1","type":"function"},{"doc":"","ref":"Bonfire.Files.BannerUploader.html#default_url/2","title":"Bonfire.Files.BannerUploader.default_url/2","type":"function"},{"doc":"","ref":"Bonfire.Files.BannerUploader.html#delete/1","title":"Bonfire.Files.BannerUploader.delete/1","type":"function"},{"doc":"","ref":"Bonfire.Files.BannerUploader.html#filename/2","title":"Bonfire.Files.BannerUploader.filename/2","type":"function"},{"doc":"","ref":"Bonfire.Files.BannerUploader.html#remote_file_headers/1","title":"Bonfire.Files.BannerUploader.remote_file_headers/1","type":"function"},{"doc":"","ref":"Bonfire.Files.BannerUploader.html#remote_url/2","title":"Bonfire.Files.BannerUploader.remote_url/2","type":"function"},{"doc":"","ref":"Bonfire.Files.BannerUploader.html#s3_object_headers/2","title":"Bonfire.Files.BannerUploader.s3_object_headers/2","type":"function"},{"doc":"","ref":"Bonfire.Files.BannerUploader.html#storage_dir/2","title":"Bonfire.Files.BannerUploader.storage_dir/2","type":"function"},{"doc":"","ref":"Bonfire.Files.BannerUploader.html#storage_dir_prefix/0","title":"Bonfire.Files.BannerUploader.storage_dir_prefix/0","type":"function"},{"doc":"","ref":"Bonfire.Files.BannerUploader.html#store/1","title":"Bonfire.Files.BannerUploader.store/1","type":"function"},{"doc":"","ref":"Bonfire.Files.BannerUploader.html#transform/2","title":"Bonfire.Files.BannerUploader.transform/2","type":"function"},{"doc":"","ref":"Bonfire.Files.BannerUploader.html#upload/4","title":"Bonfire.Files.BannerUploader.upload/4","type":"function"},{"doc":"","ref":"Bonfire.Files.BannerUploader.html#url/1","title":"Bonfire.Files.BannerUploader.url/1","type":"function"},{"doc":"","ref":"Bonfire.Files.BannerUploader.html#url/2","title":"Bonfire.Files.BannerUploader.url/2","type":"function"},{"doc":"","ref":"Bonfire.Files.BannerUploader.html#url/3","title":"Bonfire.Files.BannerUploader.url/3","type":"function"},{"doc":"","ref":"Bonfire.Files.BannerUploader.html#urls/2","title":"Bonfire.Files.BannerUploader.urls/2","type":"function"},{"doc":"","ref":"Bonfire.Files.BannerUploader.html#validate/1","title":"Bonfire.Files.BannerUploader.validate/1","type":"function"},{"doc":"","ref":"Bonfire.Files.Blurred.html","title":"Bonfire.Files.Blurred","type":"module"},{"doc":"","ref":"Bonfire.Files.Blurred.html#blurred/2","title":"Bonfire.Files.Blurred.blurred/2","type":"function"},{"doc":"Extension to Waffle.Definition, adding support for checking against media types parsed through magic bytes instead of file extensions, which can be modified by the user. You can still use validate/2 and other waffle callbacks.","ref":"Bonfire.Files.Definition.html","title":"Bonfire.Files.Definition","type":"behaviour"},{"doc":"","ref":"Bonfire.Files.Definition.html#c:allowed_media_types/0","title":"Bonfire.Files.Definition.allowed_media_types/0","type":"callback"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html","title":"Bonfire.Files.DocumentUploader","type":"module"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#acl/2","title":"Bonfire.Files.DocumentUploader.acl/2","type":"function"},{"doc":"Callback implementation for Bonfire.Files.Definition.allowed_media_types/0 .","ref":"Bonfire.Files.DocumentUploader.html#allowed_media_types/0","title":"Bonfire.Files.DocumentUploader.allowed_media_types/0","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#asset_host/0","title":"Bonfire.Files.DocumentUploader.asset_host/0","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#async/0","title":"Bonfire.Files.DocumentUploader.async/0","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#blurred/1","title":"Bonfire.Files.DocumentUploader.blurred/1","type":"function"},{"doc":"Definition for any type of document, allows most media types that support documents, archives, video and audio.","ref":"Bonfire.Files.DocumentUploader.html#bucket/0","title":"Bonfire.Files.DocumentUploader.bucket/0","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#bucket/1","title":"Bonfire.Files.DocumentUploader.bucket/1","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#default_url/1","title":"Bonfire.Files.DocumentUploader.default_url/1","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#default_url/2","title":"Bonfire.Files.DocumentUploader.default_url/2","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#delete/1","title":"Bonfire.Files.DocumentUploader.delete/1","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#filename/2","title":"Bonfire.Files.DocumentUploader.filename/2","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#remote_file_headers/1","title":"Bonfire.Files.DocumentUploader.remote_file_headers/1","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#remote_url/2","title":"Bonfire.Files.DocumentUploader.remote_url/2","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#s3_object_headers/2","title":"Bonfire.Files.DocumentUploader.s3_object_headers/2","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#storage_dir/2","title":"Bonfire.Files.DocumentUploader.storage_dir/2","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#storage_dir_prefix/0","title":"Bonfire.Files.DocumentUploader.storage_dir_prefix/0","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#store/1","title":"Bonfire.Files.DocumentUploader.store/1","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#transform/2","title":"Bonfire.Files.DocumentUploader.transform/2","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#upload/4","title":"Bonfire.Files.DocumentUploader.upload/4","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#url/1","title":"Bonfire.Files.DocumentUploader.url/1","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#url/2","title":"Bonfire.Files.DocumentUploader.url/2","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#url/3","title":"Bonfire.Files.DocumentUploader.url/3","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#urls/2","title":"Bonfire.Files.DocumentUploader.urls/2","type":"function"},{"doc":"","ref":"Bonfire.Files.DocumentUploader.html#validate/1","title":"Bonfire.Files.DocumentUploader.validate/1","type":"function"},{"doc":"","ref":"Bonfire.Files.FaviconStore.html","title":"Bonfire.Files.FaviconStore","type":"module"},{"doc":"","ref":"Bonfire.Files.FaviconStore.html#acl/2","title":"Bonfire.Files.FaviconStore.acl/2","type":"function"},{"doc":"Callback implementation for Bonfire.Files.Definition.allowed_media_types/0 .","ref":"Bonfire.Files.FaviconStore.html#allowed_media_types/0","title":"Bonfire.Files.FaviconStore.allowed_media_types/0","type":"function"},{"doc":"","ref":"Bonfire.Files.FaviconStore.html#asset_host/0","title":"Bonfire.Files.FaviconStore.asset_host/0","type":"function"},{"doc":"","ref":"Bonfire.Files.FaviconStore.html#async/0","title":"Bonfire.Files.FaviconStore.async/0","type":"function"},{"doc":"","ref":"Bonfire.Files.FaviconStore.html#blurred/1","title":"Bonfire.Files.FaviconStore.blurred/1","type":"function"},{"doc":"Definition for storing media types for a URL","ref":"Bonfire.Files.FaviconStore.html#bucket/0","title":"Bonfire.Files.FaviconStore.bucket/0","type":"function"},{"doc":"","ref":"Bonfire.Files.FaviconStore.html#bucket/1","title":"Bonfire.Files.FaviconStore.bucket/1","type":"function"},{"doc":"","ref":"Bonfire.Files.FaviconStore.html#cached_or_fetch/2","title":"Bonfire.Files.FaviconStore.cached_or_fetch/2","type":"function"},{"doc":"","ref":"Bonfire.Files.FaviconStore.html#default_url/1","title":"Bonfire.Files.FaviconStore.default_url/1","type":"function"},{"doc":"","ref":"Bonfire.Files.FaviconStore.html#default_url/2","title":"Bonfire.Files.FaviconStore.default_url/2","type":"function"},{"doc":"","ref":"Bonfire.Files.FaviconStore.html#delete/1","title":"Bonfire.Files.FaviconStore.delete/1","type":"function"},{"doc":"","ref":"Bonfire.Files.FaviconStore.html#favicon_url/2","title":"Bonfire.Files.FaviconStore.favicon_url/2","type":"function"},{"doc":"","ref":"Bonfire.Files.FaviconStore.html#filename/2","title":"Bonfire.Files.FaviconStore.filename/2","type":"function"},{"doc":"","ref":"Bonfire.Files.FaviconStore.html#remote_file_headers/1","title":"Bonfire.Files.FaviconStore.remote_file_headers/1","type":"function"},{"doc":"","ref":"Bonfire.Files.FaviconStore.html#remote_url/2","title":"Bonfire.Files.FaviconStore.remote_url/2","type":"function"},{"doc":"","ref":"Bonfire.Files.FaviconStore.html#s3_object_headers/2","title":"Bonfire.Files.FaviconStore.s3_object_headers/2","type":"function"},{"doc":"","ref":"Bonfire.Files.FaviconStore.html#storage_dir/2","title":"Bonfire.Files.FaviconStore.storage_dir/2","type":"function"},{"doc":"","ref":"Bonfire.Files.FaviconStore.html#storage_dir_prefix/0","title":"Bonfire.Files.FaviconStore.storage_dir_prefix/0","type":"function"},{"doc":"","ref":"Bonfire.Files.FaviconStore.html#store/1","title":"Bonfire.Files.FaviconStore.store/1","type":"function"},{"doc":"","ref":"Bonfire.Files.FaviconStore.html#transform/2","title":"Bonfire.Files.FaviconStore.transform/2","type":"function"},{"doc":"","ref":"Bonfire.Files.FaviconStore.html#upload/4","title":"Bonfire.Files.FaviconStore.upload/4","type":"function"},{"doc":"","ref":"Bonfire.Files.FaviconStore.html#url/1","title":"Bonfire.Files.FaviconStore.url/1","type":"function"},{"doc":"","ref":"Bonfire.Files.FaviconStore.html#url/2","title":"Bonfire.Files.FaviconStore.url/2","type":"function"},{"doc":"","ref":"Bonfire.Files.FaviconStore.html#url/3","title":"Bonfire.Files.FaviconStore.url/3","type":"function"},{"doc":"","ref":"Bonfire.Files.FaviconStore.html#urls/2","title":"Bonfire.Files.FaviconStore.urls/2","type":"function"},{"doc":"","ref":"Bonfire.Files.FaviconStore.html#validate/1","title":"Bonfire.Files.FaviconStore.validate/1","type":"function"},{"doc":"","ref":"Bonfire.Files.FileDenied.html","title":"Bonfire.Files.FileDenied","type":"module"},{"doc":"","ref":"Bonfire.Files.FileDenied.html#new/1","title":"Bonfire.Files.FileDenied.new/1","type":"function"},{"doc":"","ref":"Bonfire.Files.FileDenied.html#t:t/0","title":"Bonfire.Files.FileDenied.t/0","type":"type"},{"doc":"","ref":"Bonfire.Files.GraphQL.html","title":"Bonfire.Files.GraphQL","type":"module"},{"doc":"","ref":"Bonfire.Files.GraphQL.html#upload/3","title":"Bonfire.Files.GraphQL.upload/3","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html","title":"Bonfire.Files.IconUploader","type":"module"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#acl/2","title":"Bonfire.Files.IconUploader.acl/2","type":"function"},{"doc":"Callback implementation for Bonfire.Files.Definition.allowed_media_types/0 .","ref":"Bonfire.Files.IconUploader.html#allowed_media_types/0","title":"Bonfire.Files.IconUploader.allowed_media_types/0","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#asset_host/0","title":"Bonfire.Files.IconUploader.asset_host/0","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#async/0","title":"Bonfire.Files.IconUploader.async/0","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#blurred/1","title":"Bonfire.Files.IconUploader.blurred/1","type":"function"},{"doc":"Uploader for smaller image icons, usually used as avatars. TODO: Support resizing.","ref":"Bonfire.Files.IconUploader.html#bucket/0","title":"Bonfire.Files.IconUploader.bucket/0","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#bucket/1","title":"Bonfire.Files.IconUploader.bucket/1","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#default_url/1","title":"Bonfire.Files.IconUploader.default_url/1","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#default_url/2","title":"Bonfire.Files.IconUploader.default_url/2","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#delete/1","title":"Bonfire.Files.IconUploader.delete/1","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#filename/2","title":"Bonfire.Files.IconUploader.filename/2","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#remote_file_headers/1","title":"Bonfire.Files.IconUploader.remote_file_headers/1","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#remote_url/2","title":"Bonfire.Files.IconUploader.remote_url/2","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#s3_object_headers/2","title":"Bonfire.Files.IconUploader.s3_object_headers/2","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#storage_dir/2","title":"Bonfire.Files.IconUploader.storage_dir/2","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#storage_dir_prefix/0","title":"Bonfire.Files.IconUploader.storage_dir_prefix/0","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#store/1","title":"Bonfire.Files.IconUploader.store/1","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#transform/2","title":"Bonfire.Files.IconUploader.transform/2","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#upload/4","title":"Bonfire.Files.IconUploader.upload/4","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#url/1","title":"Bonfire.Files.IconUploader.url/1","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#url/2","title":"Bonfire.Files.IconUploader.url/2","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#url/3","title":"Bonfire.Files.IconUploader.url/3","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#urls/2","title":"Bonfire.Files.IconUploader.urls/2","type":"function"},{"doc":"","ref":"Bonfire.Files.IconUploader.html#validate/1","title":"Bonfire.Files.IconUploader.validate/1","type":"function"},{"doc":"","ref":"Bonfire.Files.Image.Edit.html","title":"Bonfire.Files.Image.Edit","type":"module"},{"doc":"","ref":"Bonfire.Files.Image.Edit.html#banner/3","title":"Bonfire.Files.Image.Edit.banner/3","type":"function"},{"doc":"","ref":"Bonfire.Files.Image.Edit.html#blur/2","title":"Bonfire.Files.Image.Edit.blur/2","type":"function"},{"doc":"","ref":"Bonfire.Files.Image.Edit.html#image/3","title":"Bonfire.Files.Image.Edit.image/3","type":"function"},{"doc":"","ref":"Bonfire.Files.Image.Edit.html#thumbnail/1","title":"Bonfire.Files.Image.Edit.thumbnail/1","type":"function"},{"doc":"Uploader for larger images, for example, a profile page banner. Does not do any type of image resizing/thumbnailing.","ref":"Bonfire.Files.ImageUploader.html","title":"Bonfire.Files.ImageUploader","type":"module"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#acl/2","title":"Bonfire.Files.ImageUploader.acl/2","type":"function"},{"doc":"Callback implementation for Bonfire.Files.Definition.allowed_media_types/0 .","ref":"Bonfire.Files.ImageUploader.html#allowed_media_types/0","title":"Bonfire.Files.ImageUploader.allowed_media_types/0","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#asset_host/0","title":"Bonfire.Files.ImageUploader.asset_host/0","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#async/0","title":"Bonfire.Files.ImageUploader.async/0","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#blurred/1","title":"Bonfire.Files.ImageUploader.blurred/1","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#bucket/0","title":"Bonfire.Files.ImageUploader.bucket/0","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#bucket/1","title":"Bonfire.Files.ImageUploader.bucket/1","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#default_url/1","title":"Bonfire.Files.ImageUploader.default_url/1","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#default_url/2","title":"Bonfire.Files.ImageUploader.default_url/2","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#delete/1","title":"Bonfire.Files.ImageUploader.delete/1","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#filename/2","title":"Bonfire.Files.ImageUploader.filename/2","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#remote_file_headers/1","title":"Bonfire.Files.ImageUploader.remote_file_headers/1","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#remote_url/2","title":"Bonfire.Files.ImageUploader.remote_url/2","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#s3_object_headers/2","title":"Bonfire.Files.ImageUploader.s3_object_headers/2","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#storage_dir/2","title":"Bonfire.Files.ImageUploader.storage_dir/2","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#storage_dir_prefix/0","title":"Bonfire.Files.ImageUploader.storage_dir_prefix/0","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#store/1","title":"Bonfire.Files.ImageUploader.store/1","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#transform/2","title":"Bonfire.Files.ImageUploader.transform/2","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#upload/4","title":"Bonfire.Files.ImageUploader.upload/4","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#url/1","title":"Bonfire.Files.ImageUploader.url/1","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#url/2","title":"Bonfire.Files.ImageUploader.url/2","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#url/3","title":"Bonfire.Files.ImageUploader.url/3","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#urls/2","title":"Bonfire.Files.ImageUploader.urls/2","type":"function"},{"doc":"","ref":"Bonfire.Files.ImageUploader.html#validate/1","title":"Bonfire.Files.ImageUploader.validate/1","type":"function"},{"doc":"","ref":"Bonfire.Files.Media.html","title":"Bonfire.Files.Media","type":"module"},{"doc":"","ref":"Bonfire.Files.Media.html#changeset/2","title":"Bonfire.Files.Media.changeset/2","type":"function"},{"doc":"Delete an upload, removing any associated files.","ref":"Bonfire.Files.Media.html#hard_delete/2","title":"Bonfire.Files.Media.hard_delete/2","type":"function"},{"doc":"","ref":"Bonfire.Files.Media.html#insert/4","title":"Bonfire.Files.Media.insert/4","type":"function"},{"doc":"","ref":"Bonfire.Files.Media.html#many/1","title":"Bonfire.Files.Media.many/1","type":"function"},{"doc":"","ref":"Bonfire.Files.Media.html#one/1","title":"Bonfire.Files.Media.one/1","type":"function"},{"doc":"Delete an upload, removing it from indexing, but the files remain available.","ref":"Bonfire.Files.Media.html#soft_delete/1","title":"Bonfire.Files.Media.soft_delete/1","type":"function"},{"doc":"","ref":"Bonfire.Files.Media.html#update_by/2","title":"Bonfire.Files.Media.update_by/2","type":"function"},{"doc":"","ref":"Bonfire.Files.Media.html#t:t/0","title":"Bonfire.Files.Media.t/0","type":"type"},{"doc":"","ref":"Bonfire.Files.Media.Migrations.html","title":"Bonfire.Files.Media.Migrations","type":"module"},{"doc":"","ref":"Bonfire.Files.Media.Migrations.html#create_media_table/0","title":"Bonfire.Files.Media.Migrations.create_media_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Files.Media.Migrations.html#create_media_table/1","title":"Bonfire.Files.Media.Migrations.create_media_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Files.Media.Migrations.html#drop_media_path_index/1","title":"Bonfire.Files.Media.Migrations.drop_media_path_index/1","type":"function"},{"doc":"","ref":"Bonfire.Files.Media.Migrations.html#drop_media_table/0","title":"Bonfire.Files.Media.Migrations.drop_media_table/0","type":"function"},{"doc":"","ref":"Bonfire.Files.Media.Migrations.html#migrate_media/0","title":"Bonfire.Files.Media.Migrations.migrate_media/0","type":"macro"},{"doc":"","ref":"Bonfire.Files.Media.Migrations.html#migrate_media/1","title":"Bonfire.Files.Media.Migrations.migrate_media/1","type":"macro"},{"doc":"","ref":"Bonfire.Files.Media.Queries.html","title":"Bonfire.Files.Media.Queries","type":"module"},{"doc":"Filter the query according to arbitrary criteria","ref":"Bonfire.Files.Media.Queries.html#filter/2","title":"Bonfire.Files.Media.Queries.filter/2","type":"function"},{"doc":"","ref":"Bonfire.Files.Media.Queries.html#query/1","title":"Bonfire.Files.Media.Queries.query/1","type":"function"},{"doc":"","ref":"Bonfire.Files.Media.Queries.html#query/2","title":"Bonfire.Files.Media.Queries.query/2","type":"function"},{"doc":"","ref":"Bonfire.Files.Migrations.html","title":"Bonfire.Files.Migrations","type":"module"},{"doc":"","ref":"Bonfire.Files.Migrations.html#create_files_table/0","title":"Bonfire.Files.Migrations.create_files_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Files.Migrations.html#create_files_table/1","title":"Bonfire.Files.Migrations.create_files_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Files.Migrations.html#drop_files_table/0","title":"Bonfire.Files.Migrations.drop_files_table/0","type":"function"},{"doc":"","ref":"Bonfire.Files.Migrations.html#migrate_files/0","title":"Bonfire.Files.Migrations.migrate_files/0","type":"macro"},{"doc":"","ref":"Bonfire.Files.Migrations.html#migrate_files/1","title":"Bonfire.Files.Migrations.migrate_files/1","type":"macro"},{"doc":"","ref":"Bonfire.Files.Migrations.html#migrate_files_media_index/2","title":"Bonfire.Files.Migrations.migrate_files_media_index/2","type":"function"},{"doc":"","ref":"Bonfire.Files.RuntimeConfig.html","title":"Bonfire.Files.RuntimeConfig","type":"module"},{"doc":"","ref":"Bonfire.Files.RuntimeConfig.html#config/0","title":"Bonfire.Files.RuntimeConfig.config/0","type":"function"},{"doc":"","ref":"Bonfire.Files.RuntimeConfig.html#config_module/0","title":"Bonfire.Files.RuntimeConfig.config_module/0","type":"function"},{"doc":"","ref":"Bonfire.Mailer.html","title":"Bonfire.Mailer","type":"module"},{"doc":"","ref":"Bonfire.Mailer.html#deliver/1","title":"Bonfire.Mailer.deliver/1","type":"function"},{"doc":"","ref":"Bonfire.Mailer.html#deliver_later!/2","title":"Bonfire.Mailer.deliver_later!/2","type":"function"},{"doc":"","ref":"Bonfire.Mailer.html#deliver_later/2","title":"Bonfire.Mailer.deliver_later/2","type":"function"},{"doc":"","ref":"Bonfire.Mailer.html#deliver_now!/2","title":"Bonfire.Mailer.deliver_now!/2","type":"function"},{"doc":"","ref":"Bonfire.Mailer.html#deliver_now/2","title":"Bonfire.Mailer.deliver_now/2","type":"function"},{"doc":"","ref":"Bonfire.Mailer.html#handle_error/2","title":"Bonfire.Mailer.handle_error/2","type":"function"},{"doc":"","ref":"Bonfire.Mailer.html#send_app_feedback/3","title":"Bonfire.Mailer.send_app_feedback/3","type":"function"},{"doc":"","ref":"Bonfire.Mailer.html#send_now/3","title":"Bonfire.Mailer.send_now/3","type":"function"},{"doc":"Functions for checking the validity of email addresses and domains","ref":"Bonfire.Mailer.Checker.html","title":"Bonfire.Mailer.Checker","type":"module"},{"doc":"Checks whether an email domain is valid, returns a reason if not","ref":"Bonfire.Mailer.Checker.html#validate_domain/1","title":"Bonfire.Mailer.Checker.validate_domain/1","type":"function"},{"doc":"Checks whether an email is valid, returns a reason if not","ref":"Bonfire.Mailer.Checker.html#validate_email/1","title":"Bonfire.Mailer.Checker.validate_email/1","type":"function"},{"doc":"","ref":"Bonfire.Mailer.Checker.html#t:error_reason/0","title":"Bonfire.Mailer.Checker.error_reason/0","type":"type"},{"doc":"","ref":"Bonfire.Mailer.RuntimeConfig.html","title":"Bonfire.Mailer.RuntimeConfig","type":"module"},{"doc":"","ref":"Bonfire.Mailer.RuntimeConfig.html#config/0","title":"Bonfire.Mailer.RuntimeConfig.config/0","type":"function"},{"doc":"","ref":"Bonfire.Mailer.RuntimeConfig.html#config_module/0","title":"Bonfire.Mailer.RuntimeConfig.config_module/0","type":"function"},{"doc":"","ref":"Bonfire.Web.Endpoint.html","title":"Bonfire.Web.Endpoint","type":"module"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast!/3 .","ref":"Bonfire.Web.Endpoint.html#broadcast!/3","title":"Bonfire.Web.Endpoint.broadcast!/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast/3 .","ref":"Bonfire.Web.Endpoint.html#broadcast/3","title":"Bonfire.Web.Endpoint.broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from!/4 .","ref":"Bonfire.Web.Endpoint.html#broadcast_from!/4","title":"Bonfire.Web.Endpoint.broadcast_from!/4","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from/4 .","ref":"Bonfire.Web.Endpoint.html#broadcast_from/4","title":"Bonfire.Web.Endpoint.broadcast_from/4","type":"function"},{"doc":"Callback implementation for Plug.call/2 .","ref":"Bonfire.Web.Endpoint.html#call/2","title":"Bonfire.Web.Endpoint.call/2","type":"function"},{"doc":"Returns the child specification to start the endpoint under a supervision tree.","ref":"Bonfire.Web.Endpoint.html#child_spec/1","title":"Bonfire.Web.Endpoint.child_spec/1","type":"function"},{"doc":"Returns the endpoint configuration for key Returns default if the key does not exist.","ref":"Bonfire.Web.Endpoint.html#config/2","title":"Bonfire.Web.Endpoint.config/2","type":"function"},{"doc":"Reloads the configuration given the application environment changes.","ref":"Bonfire.Web.Endpoint.html#config_change/2","title":"Bonfire.Web.Endpoint.config_change/2","type":"function"},{"doc":"Returns the host for the given endpoint.","ref":"Bonfire.Web.Endpoint.html#host/0","title":"Bonfire.Web.Endpoint.host/0","type":"function"},{"doc":"","ref":"Bonfire.Web.Endpoint.html#include_assets/1","title":"Bonfire.Web.Endpoint.include_assets/1","type":"function"},{"doc":"","ref":"Bonfire.Web.Endpoint.html#include_assets/2","title":"Bonfire.Web.Endpoint.include_assets/2","type":"function"},{"doc":"Callback implementation for Plug.init/1 .","ref":"Bonfire.Web.Endpoint.html#init/1","title":"Bonfire.Web.Endpoint.init/1","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast/3 .","ref":"Bonfire.Web.Endpoint.html#local_broadcast/3","title":"Bonfire.Web.Endpoint.local_broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast_from/4 .","ref":"Bonfire.Web.Endpoint.html#local_broadcast_from/4","title":"Bonfire.Web.Endpoint.local_broadcast_from/4","type":"function"},{"doc":"Callback implementation for Absinthe.Subscription.Pubsub.node_name/0 .","ref":"Bonfire.Web.Endpoint.html#node_name/0","title":"Bonfire.Web.Endpoint.node_name/0","type":"function"},{"doc":"Generates the path information when routing to this endpoint.","ref":"Bonfire.Web.Endpoint.html#path/1","title":"Bonfire.Web.Endpoint.path/1","type":"function"},{"doc":"Callback implementation for Absinthe.Subscription.Pubsub.publish_mutation/3 .","ref":"Bonfire.Web.Endpoint.html#publish_mutation/3","title":"Bonfire.Web.Endpoint.publish_mutation/3","type":"function"},{"doc":"Callback implementation for Absinthe.Subscription.Pubsub.publish_subscription/2 .","ref":"Bonfire.Web.Endpoint.html#publish_subscription/2","title":"Bonfire.Web.Endpoint.publish_subscription/2","type":"function"},{"doc":"Generates the script name.","ref":"Bonfire.Web.Endpoint.html#script_name/0","title":"Bonfire.Web.Endpoint.script_name/0","type":"function"},{"doc":"Starts the endpoint supervision tree. Options :log_access_url - if the access url should be logged once the endpoint starts All other options are merged into the endpoint configuration.","ref":"Bonfire.Web.Endpoint.html#start_link/1","title":"Bonfire.Web.Endpoint.start_link/1","type":"function"},{"doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file in priv/static . Meant to be used for Subresource Integrity with CDNs.","ref":"Bonfire.Web.Endpoint.html#static_integrity/1","title":"Bonfire.Web.Endpoint.static_integrity/1","type":"function"},{"doc":"Returns a two item tuple with the first item being the static_path and the second item being the static_integrity .","ref":"Bonfire.Web.Endpoint.html#static_lookup/1","title":"Bonfire.Web.Endpoint.static_lookup/1","type":"function"},{"doc":"Generates a route to a static file in priv/static .","ref":"Bonfire.Web.Endpoint.html#static_path/1","title":"Bonfire.Web.Endpoint.static_path/1","type":"function"},{"doc":"Generates the static URL without any path information. It uses the configuration under :static_url to generate such. It falls back to :url if :static_url is not set.","ref":"Bonfire.Web.Endpoint.html#static_url/0","title":"Bonfire.Web.Endpoint.static_url/0","type":"function"},{"doc":"Generates the endpoint base URL but as a URI struct. It uses the configuration under :url to generate such. Useful for manipulating the URL data and passing it to URL helpers.","ref":"Bonfire.Web.Endpoint.html#struct_url/0","title":"Bonfire.Web.Endpoint.struct_url/0","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.subscribe/2 .","ref":"Bonfire.Web.Endpoint.html#subscribe/2","title":"Bonfire.Web.Endpoint.subscribe/2","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.unsubscribe/1 .","ref":"Bonfire.Web.Endpoint.html#unsubscribe/1","title":"Bonfire.Web.Endpoint.unsubscribe/1","type":"function"},{"doc":"Generates the endpoint base URL without any path information. It uses the configuration under :url to generate such.","ref":"Bonfire.Web.Endpoint.html#url/0","title":"Bonfire.Web.Endpoint.url/0","type":"function"},{"doc":"","ref":"Bonfire.Web.EndpointTemplate.html","title":"Bonfire.Web.EndpointTemplate","type":"module"},{"doc":"","ref":"Bonfire.Web.EndpointTemplate.html#session_options/0","title":"Bonfire.Web.EndpointTemplate.session_options/0","type":"function"},{"doc":"","ref":"Bonfire.Web.FakeRemoteEndpoint.html","title":"Bonfire.Web.FakeRemoteEndpoint","type":"module"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast!/3 .","ref":"Bonfire.Web.FakeRemoteEndpoint.html#broadcast!/3","title":"Bonfire.Web.FakeRemoteEndpoint.broadcast!/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast/3 .","ref":"Bonfire.Web.FakeRemoteEndpoint.html#broadcast/3","title":"Bonfire.Web.FakeRemoteEndpoint.broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from!/4 .","ref":"Bonfire.Web.FakeRemoteEndpoint.html#broadcast_from!/4","title":"Bonfire.Web.FakeRemoteEndpoint.broadcast_from!/4","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from/4 .","ref":"Bonfire.Web.FakeRemoteEndpoint.html#broadcast_from/4","title":"Bonfire.Web.FakeRemoteEndpoint.broadcast_from/4","type":"function"},{"doc":"Callback implementation for Plug.call/2 .","ref":"Bonfire.Web.FakeRemoteEndpoint.html#call/2","title":"Bonfire.Web.FakeRemoteEndpoint.call/2","type":"function"},{"doc":"Returns the child specification to start the endpoint under a supervision tree.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#child_spec/1","title":"Bonfire.Web.FakeRemoteEndpoint.child_spec/1","type":"function"},{"doc":"Returns the endpoint configuration for key Returns default if the key does not exist.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#config/2","title":"Bonfire.Web.FakeRemoteEndpoint.config/2","type":"function"},{"doc":"Reloads the configuration given the application environment changes.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#config_change/2","title":"Bonfire.Web.FakeRemoteEndpoint.config_change/2","type":"function"},{"doc":"Returns the host for the given endpoint.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#host/0","title":"Bonfire.Web.FakeRemoteEndpoint.host/0","type":"function"},{"doc":"Callback implementation for Plug.init/1 .","ref":"Bonfire.Web.FakeRemoteEndpoint.html#init/1","title":"Bonfire.Web.FakeRemoteEndpoint.init/1","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast/3 .","ref":"Bonfire.Web.FakeRemoteEndpoint.html#local_broadcast/3","title":"Bonfire.Web.FakeRemoteEndpoint.local_broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast_from/4 .","ref":"Bonfire.Web.FakeRemoteEndpoint.html#local_broadcast_from/4","title":"Bonfire.Web.FakeRemoteEndpoint.local_broadcast_from/4","type":"function"},{"doc":"Callback implementation for Absinthe.Subscription.Pubsub.node_name/0 .","ref":"Bonfire.Web.FakeRemoteEndpoint.html#node_name/0","title":"Bonfire.Web.FakeRemoteEndpoint.node_name/0","type":"function"},{"doc":"Generates the path information when routing to this endpoint.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#path/1","title":"Bonfire.Web.FakeRemoteEndpoint.path/1","type":"function"},{"doc":"Callback implementation for Absinthe.Subscription.Pubsub.publish_mutation/3 .","ref":"Bonfire.Web.FakeRemoteEndpoint.html#publish_mutation/3","title":"Bonfire.Web.FakeRemoteEndpoint.publish_mutation/3","type":"function"},{"doc":"Callback implementation for Absinthe.Subscription.Pubsub.publish_subscription/2 .","ref":"Bonfire.Web.FakeRemoteEndpoint.html#publish_subscription/2","title":"Bonfire.Web.FakeRemoteEndpoint.publish_subscription/2","type":"function"},{"doc":"Generates the script name.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#script_name/0","title":"Bonfire.Web.FakeRemoteEndpoint.script_name/0","type":"function"},{"doc":"Starts the endpoint supervision tree. Options :log_access_url - if the access url should be logged once the endpoint starts All other options are merged into the endpoint configuration.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#start_link/1","title":"Bonfire.Web.FakeRemoteEndpoint.start_link/1","type":"function"},{"doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file in priv/static . Meant to be used for Subresource Integrity with CDNs.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#static_integrity/1","title":"Bonfire.Web.FakeRemoteEndpoint.static_integrity/1","type":"function"},{"doc":"Returns a two item tuple with the first item being the static_path and the second item being the static_integrity .","ref":"Bonfire.Web.FakeRemoteEndpoint.html#static_lookup/1","title":"Bonfire.Web.FakeRemoteEndpoint.static_lookup/1","type":"function"},{"doc":"Generates a route to a static file in priv/static .","ref":"Bonfire.Web.FakeRemoteEndpoint.html#static_path/1","title":"Bonfire.Web.FakeRemoteEndpoint.static_path/1","type":"function"},{"doc":"Generates the static URL without any path information. It uses the configuration under :static_url to generate such. It falls back to :url if :static_url is not set.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#static_url/0","title":"Bonfire.Web.FakeRemoteEndpoint.static_url/0","type":"function"},{"doc":"Generates the endpoint base URL but as a URI struct. It uses the configuration under :url to generate such. Useful for manipulating the URL data and passing it to URL helpers.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#struct_url/0","title":"Bonfire.Web.FakeRemoteEndpoint.struct_url/0","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.subscribe/2 .","ref":"Bonfire.Web.FakeRemoteEndpoint.html#subscribe/2","title":"Bonfire.Web.FakeRemoteEndpoint.subscribe/2","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.unsubscribe/1 .","ref":"Bonfire.Web.FakeRemoteEndpoint.html#unsubscribe/1","title":"Bonfire.Web.FakeRemoteEndpoint.unsubscribe/1","type":"function"},{"doc":"Generates the endpoint base URL without any path information. It uses the configuration under :url to generate such.","ref":"Bonfire.Web.FakeRemoteEndpoint.html#url/0","title":"Bonfire.Web.FakeRemoteEndpoint.url/0","type":"function"},{"doc":"The main instance home page, mainly for guests visiting the instance Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_account :any current_user :any","ref":"Bonfire.Web.HomeLive.html","title":"Bonfire.Web.HomeLive","type":"module"},{"doc":"","ref":"Bonfire.Web.HomeLive.html#do_handle_params/3","title":"Bonfire.Web.HomeLive.do_handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.Web.HomeLive.html#handle_event/3","title":"Bonfire.Web.HomeLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.Web.HomeLive.html#handle_info/2","title":"Bonfire.Web.HomeLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.Web.HomeLive.html#handle_params/3","title":"Bonfire.Web.HomeLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Web.HomeLive.html#mount/3","title":"Bonfire.Web.HomeLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Web.HomeLive.html#render/1","title":"Bonfire.Web.HomeLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.html","title":"Bonfire.Web.Router","type":"module"},{"doc":"","ref":"Bonfire.Web.Router.html#absinthe_before_send/2","title":"Bonfire.Web.Router.absinthe_before_send/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.html#account_required/2","title":"Bonfire.Web.Router.account_required/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.html#activity_pub/2","title":"Bonfire.Web.Router.activity_pub/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.html#admin_required/2","title":"Bonfire.Web.Router.admin_required/2","type":"function"},{"doc":"Used to serve the GraphiQL API browser","ref":"Bonfire.Web.Router.html#api_browser/2","title":"Bonfire.Web.Router.api_browser/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.html#basic/2","title":"Bonfire.Web.Router.basic/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.html#browser/2","title":"Bonfire.Web.Router.browser/2","type":"function"},{"doc":"Callback invoked by Plug on every request.","ref":"Bonfire.Web.Router.html#call/2","title":"Bonfire.Web.Router.call/2","type":"function"},{"doc":"Used to serve GraphQL API queries","ref":"Bonfire.Web.Router.html#graphql/2","title":"Bonfire.Web.Router.graphql/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.html#guest_only/2","title":"Bonfire.Web.Router.guest_only/2","type":"function"},{"doc":"Callback required by Plug that initializes the router for serving web requests.","ref":"Bonfire.Web.Router.html#init/1","title":"Bonfire.Web.Router.init/1","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.html#load_current_auth/2","title":"Bonfire.Web.Router.load_current_auth/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.html#signed_activity_pub/2","title":"Bonfire.Web.Router.signed_activity_pub/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.html#user_required/2","title":"Bonfire.Web.Router.user_required/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.html#well_known/2","title":"Bonfire.Web.Router.well_known/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.html#well_known_nodeinfo/2","title":"Bonfire.Web.Router.well_known_nodeinfo/2","type":"function"},{"doc":"Module with named helpers generated from Bonfire.Web.Router.","ref":"Bonfire.Web.Router.Helpers.html","title":"Bonfire.Web.Router.Helpers","type":"module"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#activity_pub_path/2","title":"Bonfire.Web.Router.Helpers.activity_pub_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#activity_pub_path/3","title":"Bonfire.Web.Router.Helpers.activity_pub_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#activity_pub_path/4","title":"Bonfire.Web.Router.Helpers.activity_pub_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#activity_pub_url/2","title":"Bonfire.Web.Router.Helpers.activity_pub_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#activity_pub_url/3","title":"Bonfire.Web.Router.Helpers.activity_pub_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#activity_pub_url/4","title":"Bonfire.Web.Router.Helpers.activity_pub_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#admin_settings_path/2","title":"Bonfire.Web.Router.Helpers.admin_settings_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#admin_settings_path/3","title":"Bonfire.Web.Router.Helpers.admin_settings_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#admin_settings_url/2","title":"Bonfire.Web.Router.Helpers.admin_settings_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#admin_settings_url/3","title":"Bonfire.Web.Router.Helpers.admin_settings_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#authorize_path/2","title":"Bonfire.Web.Router.Helpers.authorize_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#authorize_path/3","title":"Bonfire.Web.Router.Helpers.authorize_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#authorize_url/2","title":"Bonfire.Web.Router.Helpers.authorize_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#authorize_url/3","title":"Bonfire.Web.Router.Helpers.authorize_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#autocomplete_path/4","title":"Bonfire.Web.Router.Helpers.autocomplete_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#autocomplete_path/5","title":"Bonfire.Web.Router.Helpers.autocomplete_path/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#autocomplete_path/6","title":"Bonfire.Web.Router.Helpers.autocomplete_path/6","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#autocomplete_url/4","title":"Bonfire.Web.Router.Helpers.autocomplete_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#autocomplete_url/5","title":"Bonfire.Web.Router.Helpers.autocomplete_url/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#autocomplete_url/6","title":"Bonfire.Web.Router.Helpers.autocomplete_url/6","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#change_password_path/2","title":"Bonfire.Web.Router.Helpers.change_password_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#change_password_path/3","title":"Bonfire.Web.Router.Helpers.change_password_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#change_password_url/2","title":"Bonfire.Web.Router.Helpers.change_password_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#change_password_url/3","title":"Bonfire.Web.Router.Helpers.change_password_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#confirm_email_path/2","title":"Bonfire.Web.Router.Helpers.confirm_email_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#confirm_email_path/3","title":"Bonfire.Web.Router.Helpers.confirm_email_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#confirm_email_path/4","title":"Bonfire.Web.Router.Helpers.confirm_email_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#confirm_email_url/2","title":"Bonfire.Web.Router.Helpers.confirm_email_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#confirm_email_url/3","title":"Bonfire.Web.Router.Helpers.confirm_email_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#confirm_email_url/4","title":"Bonfire.Web.Router.Helpers.confirm_email_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#create_user_path/2","title":"Bonfire.Web.Router.Helpers.create_user_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#create_user_path/3","title":"Bonfire.Web.Router.Helpers.create_user_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#create_user_url/2","title":"Bonfire.Web.Router.Helpers.create_user_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#create_user_url/3","title":"Bonfire.Web.Router.Helpers.create_user_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#dev_tools_path/2","title":"Bonfire.Web.Router.Helpers.dev_tools_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#dev_tools_path/3","title":"Bonfire.Web.Router.Helpers.dev_tools_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#dev_tools_url/2","title":"Bonfire.Web.Router.Helpers.dev_tools_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#dev_tools_url/3","title":"Bonfire.Web.Router.Helpers.dev_tools_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Classify.Category_path/2","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Classify.Category_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Classify.Category_path/3","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Classify.Category_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Classify.Category_path/4","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Classify.Category_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Classify.Category_path/5","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Classify.Category_path/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Classify.Category_url/2","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Classify.Category_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Classify.Category_url/3","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Classify.Category_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Classify.Category_url/4","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Classify.Category_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Classify.Category_url/5","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Classify.Category_url/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Identity.Character_path/3","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Identity.Character_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Identity.Character_path/4","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Identity.Character_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Identity.Character_url/3","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Identity.Character_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Identity.Character_url/4","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Identity.Character_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Identity.User_path/2","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Identity.User_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Identity.User_path/3","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Identity.User_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Identity.User_path/4","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Identity.User_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Identity.User_path/5","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Identity.User_path/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Identity.User_url/2","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Identity.User_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Identity.User_url/3","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Identity.User_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Identity.User_url/4","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Identity.User_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Identity.User_url/5","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Identity.User_url/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Like_path/2","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Like_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Like_path/3","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Like_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Like_url/2","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Like_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Like_url/3","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Like_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Message_path/2","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Message_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Message_path/3","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Message_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Message_path/4","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Message_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Message_path/5","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Message_path/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Message_url/2","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Message_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Message_url/3","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Message_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Message_url/4","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Message_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Message_url/5","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Message_url/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Post_path/3","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Post_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Post_path/4","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Post_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Post_url/3","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Post_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Post_url/4","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Post_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Profile_path/3","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Profile_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Profile_path/4","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Profile_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Profile_url/3","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Profile_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Bonfire.Data.Social.Profile_url/4","title":"Bonfire.Web.Router.Helpers.Elixir.Bonfire.Data.Social.Profile_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Pointers.Pointer_path/3","title":"Bonfire.Web.Router.Helpers.Elixir.Pointers.Pointer_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Pointers.Pointer_path/4","title":"Bonfire.Web.Router.Helpers.Elixir.Pointers.Pointer_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Pointers.Pointer_path/5","title":"Bonfire.Web.Router.Helpers.Elixir.Pointers.Pointer_path/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Pointers.Pointer_url/3","title":"Bonfire.Web.Router.Helpers.Elixir.Pointers.Pointer_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Pointers.Pointer_url/4","title":"Bonfire.Web.Router.Helpers.Elixir.Pointers.Pointer_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#Elixir.Pointers.Pointer_url/5","title":"Bonfire.Web.Router.Helpers.Elixir.Pointers.Pointer_url/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#error_path/2","title":"Bonfire.Web.Router.Helpers.error_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#error_path/3","title":"Bonfire.Web.Router.Helpers.error_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#error_url/2","title":"Bonfire.Web.Router.Helpers.error_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#error_url/3","title":"Bonfire.Web.Router.Helpers.error_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#federation_path/2","title":"Bonfire.Web.Router.Helpers.federation_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#federation_path/3","title":"Bonfire.Web.Router.Helpers.federation_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#federation_url/2","title":"Bonfire.Web.Router.Helpers.federation_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#federation_url/3","title":"Bonfire.Web.Router.Helpers.federation_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#feed_path/2","title":"Bonfire.Web.Router.Helpers.feed_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#feed_path/3","title":"Bonfire.Web.Router.Helpers.feed_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#feed_path/4","title":"Bonfire.Web.Router.Helpers.feed_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#feed_url/2","title":"Bonfire.Web.Router.Helpers.feed_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#feed_url/3","title":"Bonfire.Web.Router.Helpers.feed_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#feed_url/4","title":"Bonfire.Web.Router.Helpers.feed_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#forgot_password_path/2","title":"Bonfire.Web.Router.Helpers.forgot_password_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#forgot_password_path/3","title":"Bonfire.Web.Router.Helpers.forgot_password_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#forgot_password_path/4","title":"Bonfire.Web.Router.Helpers.forgot_password_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#forgot_password_url/2","title":"Bonfire.Web.Router.Helpers.forgot_password_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#forgot_password_url/3","title":"Bonfire.Web.Router.Helpers.forgot_password_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#forgot_password_url/4","title":"Bonfire.Web.Router.Helpers.forgot_password_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#forms_live_handler_fallback_path/3","title":"Bonfire.Web.Router.Helpers.forms_live_handler_fallback_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#forms_live_handler_fallback_path/4","title":"Bonfire.Web.Router.Helpers.forms_live_handler_fallback_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#forms_live_handler_fallback_url/3","title":"Bonfire.Web.Router.Helpers.forms_live_handler_fallback_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#forms_live_handler_fallback_url/4","title":"Bonfire.Web.Router.Helpers.forms_live_handler_fallback_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#graphi_ql_path/2","title":"Bonfire.Web.Router.Helpers.graphi_ql_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#graphi_ql_path/3","title":"Bonfire.Web.Router.Helpers.graphi_ql_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#graphi_ql_url/2","title":"Bonfire.Web.Router.Helpers.graphi_ql_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#graphi_ql_url/3","title":"Bonfire.Web.Router.Helpers.graphi_ql_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#home_path/2","title":"Bonfire.Web.Router.Helpers.home_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#home_path/3","title":"Bonfire.Web.Router.Helpers.home_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#home_url/2","title":"Bonfire.Web.Router.Helpers.home_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#home_url/3","title":"Bonfire.Web.Router.Helpers.home_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#introspect_path/2","title":"Bonfire.Web.Router.Helpers.introspect_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#introspect_path/3","title":"Bonfire.Web.Router.Helpers.introspect_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#introspect_url/2","title":"Bonfire.Web.Router.Helpers.introspect_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#introspect_url/3","title":"Bonfire.Web.Router.Helpers.introspect_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#invite_path/3","title":"Bonfire.Web.Router.Helpers.invite_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#invite_path/4","title":"Bonfire.Web.Router.Helpers.invite_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#invite_url/3","title":"Bonfire.Web.Router.Helpers.invite_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#invite_url/4","title":"Bonfire.Web.Router.Helpers.invite_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#jwks_path/2","title":"Bonfire.Web.Router.Helpers.jwks_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#jwks_path/3","title":"Bonfire.Web.Router.Helpers.jwks_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#jwks_url/2","title":"Bonfire.Web.Router.Helpers.jwks_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#jwks_url/3","title":"Bonfire.Web.Router.Helpers.jwks_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_dashboard_path/2","title":"Bonfire.Web.Router.Helpers.live_dashboard_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_dashboard_path/3","title":"Bonfire.Web.Router.Helpers.live_dashboard_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_dashboard_path/4","title":"Bonfire.Web.Router.Helpers.live_dashboard_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_dashboard_path/5","title":"Bonfire.Web.Router.Helpers.live_dashboard_path/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_dashboard_url/2","title":"Bonfire.Web.Router.Helpers.live_dashboard_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_dashboard_url/3","title":"Bonfire.Web.Router.Helpers.live_dashboard_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_dashboard_url/4","title":"Bonfire.Web.Router.Helpers.live_dashboard_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_dashboard_url/5","title":"Bonfire.Web.Router.Helpers.live_dashboard_url/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_path/2","title":"Bonfire.Web.Router.Helpers.live_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_path/3","title":"Bonfire.Web.Router.Helpers.live_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_path/4","title":"Bonfire.Web.Router.Helpers.live_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_path/5","title":"Bonfire.Web.Router.Helpers.live_path/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_url/2","title":"Bonfire.Web.Router.Helpers.live_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_url/3","title":"Bonfire.Web.Router.Helpers.live_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_url/4","title":"Bonfire.Web.Router.Helpers.live_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#live_url/5","title":"Bonfire.Web.Router.Helpers.live_url/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#local_path/2","title":"Bonfire.Web.Router.Helpers.local_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#local_path/3","title":"Bonfire.Web.Router.Helpers.local_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#local_url/2","title":"Bonfire.Web.Router.Helpers.local_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#local_url/3","title":"Bonfire.Web.Router.Helpers.local_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#login_path/2","title":"Bonfire.Web.Router.Helpers.login_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#login_path/3","title":"Bonfire.Web.Router.Helpers.login_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#login_path/4","title":"Bonfire.Web.Router.Helpers.login_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#login_url/2","title":"Bonfire.Web.Router.Helpers.login_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#login_url/3","title":"Bonfire.Web.Router.Helpers.login_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#login_url/4","title":"Bonfire.Web.Router.Helpers.login_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#logout_path/2","title":"Bonfire.Web.Router.Helpers.logout_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#logout_path/3","title":"Bonfire.Web.Router.Helpers.logout_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#logout_url/2","title":"Bonfire.Web.Router.Helpers.logout_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#logout_url/3","title":"Bonfire.Web.Router.Helpers.logout_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#nodeinfo_path/2","title":"Bonfire.Web.Router.Helpers.nodeinfo_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#nodeinfo_path/3","title":"Bonfire.Web.Router.Helpers.nodeinfo_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#nodeinfo_path/4","title":"Bonfire.Web.Router.Helpers.nodeinfo_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#nodeinfo_url/2","title":"Bonfire.Web.Router.Helpers.nodeinfo_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#nodeinfo_url/3","title":"Bonfire.Web.Router.Helpers.nodeinfo_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#nodeinfo_url/4","title":"Bonfire.Web.Router.Helpers.nodeinfo_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#notifications_path/2","title":"Bonfire.Web.Router.Helpers.notifications_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#notifications_path/3","title":"Bonfire.Web.Router.Helpers.notifications_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#notifications_url/2","title":"Bonfire.Web.Router.Helpers.notifications_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#notifications_url/3","title":"Bonfire.Web.Router.Helpers.notifications_url/3","type":"function"},{"doc":"Generates the path information including any necessary prefix.","ref":"Bonfire.Web.Router.Helpers.html#path/2","title":"Bonfire.Web.Router.Helpers.path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#redirect_path/2","title":"Bonfire.Web.Router.Helpers.redirect_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#redirect_path/3","title":"Bonfire.Web.Router.Helpers.redirect_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#redirect_url/2","title":"Bonfire.Web.Router.Helpers.redirect_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#redirect_url/3","title":"Bonfire.Web.Router.Helpers.redirect_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#revoke_path/2","title":"Bonfire.Web.Router.Helpers.revoke_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#revoke_path/3","title":"Bonfire.Web.Router.Helpers.revoke_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#revoke_url/2","title":"Bonfire.Web.Router.Helpers.revoke_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#revoke_url/3","title":"Bonfire.Web.Router.Helpers.revoke_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#session_redirect_path/2","title":"Bonfire.Web.Router.Helpers.session_redirect_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#session_redirect_path/3","title":"Bonfire.Web.Router.Helpers.session_redirect_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#session_redirect_url/2","title":"Bonfire.Web.Router.Helpers.session_redirect_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#session_redirect_url/3","title":"Bonfire.Web.Router.Helpers.session_redirect_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#settings_path/5","title":"Bonfire.Web.Router.Helpers.settings_path/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#settings_path/6","title":"Bonfire.Web.Router.Helpers.settings_path/6","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#settings_url/5","title":"Bonfire.Web.Router.Helpers.settings_url/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#settings_url/6","title":"Bonfire.Web.Router.Helpers.settings_url/6","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#signup_path/2","title":"Bonfire.Web.Router.Helpers.signup_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#signup_path/3","title":"Bonfire.Web.Router.Helpers.signup_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#signup_url/2","title":"Bonfire.Web.Router.Helpers.signup_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#signup_url/3","title":"Bonfire.Web.Router.Helpers.signup_url/3","type":"function"},{"doc":"Generates an integrity hash to a static asset given its file path.","ref":"Bonfire.Web.Router.Helpers.html#static_integrity/2","title":"Bonfire.Web.Router.Helpers.static_integrity/2","type":"function"},{"doc":"Generates path to a static asset given its file path.","ref":"Bonfire.Web.Router.Helpers.html#static_path/2","title":"Bonfire.Web.Router.Helpers.static_path/2","type":"function"},{"doc":"Generates url to a static asset given its file path.","ref":"Bonfire.Web.Router.Helpers.html#static_url/2","title":"Bonfire.Web.Router.Helpers.static_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#switch_user_path/2","title":"Bonfire.Web.Router.Helpers.switch_user_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#switch_user_path/3","title":"Bonfire.Web.Router.Helpers.switch_user_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#switch_user_path/4","title":"Bonfire.Web.Router.Helpers.switch_user_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#switch_user_url/2","title":"Bonfire.Web.Router.Helpers.switch_user_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#switch_user_url/3","title":"Bonfire.Web.Router.Helpers.switch_user_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#switch_user_url/4","title":"Bonfire.Web.Router.Helpers.switch_user_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#token_path/2","title":"Bonfire.Web.Router.Helpers.token_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#token_path/3","title":"Bonfire.Web.Router.Helpers.token_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#token_url/2","title":"Bonfire.Web.Router.Helpers.token_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#token_url/3","title":"Bonfire.Web.Router.Helpers.token_url/3","type":"function"},{"doc":"Generates the connection/endpoint base URL without any path information.","ref":"Bonfire.Web.Router.Helpers.html#url/1","title":"Bonfire.Web.Router.Helpers.url/1","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#user_profile_path/2","title":"Bonfire.Web.Router.Helpers.user_profile_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#user_profile_path/3","title":"Bonfire.Web.Router.Helpers.user_profile_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#user_profile_path/4","title":"Bonfire.Web.Router.Helpers.user_profile_path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#user_profile_path/5","title":"Bonfire.Web.Router.Helpers.user_profile_path/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#user_profile_url/2","title":"Bonfire.Web.Router.Helpers.user_profile_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#user_profile_url/3","title":"Bonfire.Web.Router.Helpers.user_profile_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#user_profile_url/4","title":"Bonfire.Web.Router.Helpers.user_profile_url/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#user_profile_url/5","title":"Bonfire.Web.Router.Helpers.user_profile_url/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#userinfo_path/2","title":"Bonfire.Web.Router.Helpers.userinfo_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#userinfo_path/3","title":"Bonfire.Web.Router.Helpers.userinfo_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#userinfo_url/2","title":"Bonfire.Web.Router.Helpers.userinfo_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#userinfo_url/3","title":"Bonfire.Web.Router.Helpers.userinfo_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#web_finger_path/2","title":"Bonfire.Web.Router.Helpers.web_finger_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#web_finger_path/3","title":"Bonfire.Web.Router.Helpers.web_finger_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#web_finger_url/2","title":"Bonfire.Web.Router.Helpers.web_finger_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#web_finger_url/3","title":"Bonfire.Web.Router.Helpers.web_finger_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#write_path/2","title":"Bonfire.Web.Router.Helpers.write_path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#write_path/3","title":"Bonfire.Web.Router.Helpers.write_path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#write_url/2","title":"Bonfire.Web.Router.Helpers.write_url/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Helpers.html#write_url/3","title":"Bonfire.Web.Router.Helpers.write_url/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Reverse.html","title":"Bonfire.Web.Router.Reverse","type":"module"},{"doc":"","ref":"Bonfire.Web.Router.Reverse.html#path/2","title":"Bonfire.Web.Router.Reverse.path/2","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Reverse.html#path/3","title":"Bonfire.Web.Router.Reverse.path/3","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Reverse.html#path/4","title":"Bonfire.Web.Router.Reverse.path/4","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Reverse.html#path/5","title":"Bonfire.Web.Router.Reverse.path/5","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Reverse.html#path/6","title":"Bonfire.Web.Router.Reverse.path/6","type":"function"},{"doc":"","ref":"Bonfire.Web.Router.Reverse.html#path/7","title":"Bonfire.Web.Router.Reverse.path/7","type":"function"},{"doc":"","ref":"Bonfire.Web.Telemetry.html","title":"Bonfire.Web.Telemetry","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Bonfire.Web.Telemetry.html#child_spec/1","title":"Bonfire.Web.Telemetry.child_spec/1","type":"function"},{"doc":"","ref":"Bonfire.Web.Telemetry.html#metrics/0","title":"Bonfire.Web.Telemetry.metrics/0","type":"function"},{"doc":"","ref":"Bonfire.Web.Telemetry.html#start_link/1","title":"Bonfire.Web.Telemetry.start_link/1","type":"function"},{"doc":"","ref":"Bonfire.Application.html","title":"Bonfire.Application","type":"module"},{"doc":"","ref":"Bonfire.Application.html#applications/2","title":"Bonfire.Application.applications/2","type":"function"},{"doc":"Callback implementation for Application.config_change/3 .","ref":"Bonfire.Application.html#config_change/3","title":"Bonfire.Application.config_change/3","type":"function"},{"doc":"","ref":"Bonfire.Application.html#deps/0","title":"Bonfire.Application.deps/0","type":"function"},{"doc":"","ref":"Bonfire.Application.html#name/0","title":"Bonfire.Application.name/0","type":"function"},{"doc":"","ref":"Bonfire.Application.html#named_version/0","title":"Bonfire.Application.named_version/0","type":"function"},{"doc":"","ref":"Bonfire.Application.html#repository/0","title":"Bonfire.Application.repository/0","type":"function"},{"doc":"Callback implementation for Application.start/2 .","ref":"Bonfire.Application.html#start/2","title":"Bonfire.Application.start/2","type":"function"},{"doc":"","ref":"Bonfire.Application.html#version/0","title":"Bonfire.Application.version/0","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.ChannelCase.html","title":"Bonfire.ChannelCase","type":"module"},{"doc":"","ref":"Bonfire.Classify.html","title":"Bonfire.Classify","type":"module"},{"doc":"","ref":"Bonfire.Classify.html#ensure_update_allowed/2","title":"Bonfire.Classify.ensure_update_allowed/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html","title":"Bonfire.Classify.Categories","type":"module"},{"doc":"","ref":"Bonfire.Classify.Categories.html#attrs_with_parent_category/1","title":"Bonfire.Classify.Categories.attrs_with_parent_category/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#attrs_with_username/1","title":"Bonfire.Classify.Categories.attrs_with_username/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#by_username/1","title":"Bonfire.Classify.Categories.by_username/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#clean_username/1","title":"Bonfire.Classify.Categories.clean_username/1","type":"function"},{"doc":"Create a brand-new category object, with info stored in profile and character mixins","ref":"Bonfire.Classify.Categories.html#create/3","title":"Bonfire.Classify.Categories.create/3","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#create_remote/1","title":"Bonfire.Classify.Categories.create_remote/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#federation_module/0","title":"Bonfire.Classify.Categories.federation_module/0","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#format_actor/1","title":"Bonfire.Classify.Categories.format_actor/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#get/2","title":"Bonfire.Classify.Categories.get/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#indexing_object_format/1","title":"Bonfire.Classify.Categories.indexing_object_format/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#indexing_object_format_name/1","title":"Bonfire.Classify.Categories.indexing_object_format_name/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#indexing_object_format_parent/1","title":"Bonfire.Classify.Categories.indexing_object_format_parent/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#list/0","title":"Bonfire.Classify.Categories.list/0","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#many/1","title":"Bonfire.Classify.Categories.many/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#maybe_index/1","title":"Bonfire.Classify.Categories.maybe_index/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#maybe_unindex/1","title":"Bonfire.Classify.Categories.maybe_unindex/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#name_already_taken?/1","title":"Bonfire.Classify.Categories.name_already_taken?/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#one/1","title":"Bonfire.Classify.Categories.one/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#put_attrs_with_parent_category/2","title":"Bonfire.Classify.Categories.put_attrs_with_parent_category/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#put_generated_username/2","title":"Bonfire.Classify.Categories.put_generated_username/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#soft_delete/2","title":"Bonfire.Classify.Categories.soft_delete/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#try_several_usernames/4","title":"Bonfire.Classify.Categories.try_several_usernames/4","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#update/3","title":"Bonfire.Classify.Categories.update/3","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#update_local_actor/2","title":"Bonfire.Classify.Categories.update_local_actor/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Categories.html#username_with_parent/2","title":"Bonfire.Classify.Categories.username_with_parent/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Category.html","title":"Bonfire.Classify.Category","type":"module"},{"doc":"","ref":"Bonfire.Classify.Category.html#context_module/0","title":"Bonfire.Classify.Category.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Classify.Category.html#create_changeset/3","title":"Bonfire.Classify.Category.create_changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Classify.Category.html#follow_filters/0","title":"Bonfire.Classify.Category.follow_filters/0","type":"function"},{"doc":"","ref":"Bonfire.Classify.Category.html#queries_module/0","title":"Bonfire.Classify.Category.queries_module/0","type":"function"},{"doc":"","ref":"Bonfire.Classify.Category.html#update_changeset/2","title":"Bonfire.Classify.Category.update_changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Category.html#t:t/0","title":"Bonfire.Classify.Category.t/0","type":"type"},{"doc":"","ref":"Bonfire.Classify.Category.Queries.html","title":"Bonfire.Classify.Category.Queries","type":"module"},{"doc":"Filter the query according to arbitrary criteria","ref":"Bonfire.Classify.Category.Queries.html#filter/2","title":"Bonfire.Classify.Category.Queries.filter/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Category.Queries.html#join_to/3","title":"Bonfire.Classify.Category.Queries.join_to/3","type":"function"},{"doc":"","ref":"Bonfire.Classify.Category.Queries.html#queries/4","title":"Bonfire.Classify.Category.Queries.queries/4","type":"function"},{"doc":"","ref":"Bonfire.Classify.Category.Queries.html#query/1","title":"Bonfire.Classify.Category.Queries.query/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Category.Queries.html#query/2","title":"Bonfire.Classify.Category.Queries.query/2","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Classify.ChannelCase.html","title":"Bonfire.Classify.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Classify.ConnCase.html","title":"Bonfire.Classify.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.Classify.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Classify.DataCase.html","title":"Bonfire.Classify.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.Classify.DataCase.html#errors_on/1","title":"Bonfire.Classify.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.DataHelpers.html","title":"Bonfire.Classify.DataHelpers","type":"module"},{"doc":"GraphQL tag/category queries","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html","title":"Bonfire.Classify.GraphQL.CategoryResolver","type":"module"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#categories/2","title":"Bonfire.Classify.GraphQL.CategoryResolver.categories/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#categories_toplevel/2","title":"Bonfire.Classify.GraphQL.CategoryResolver.categories_toplevel/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#category/2","title":"Bonfire.Classify.GraphQL.CategoryResolver.category/2","type":"function"},{"doc":"List child categories","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#category_children/3","title":"Bonfire.Classify.GraphQL.CategoryResolver.category_children/3","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#create_category/2","title":"Bonfire.Classify.GraphQL.CategoryResolver.create_category/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#cursor/0","title":"Bonfire.Classify.GraphQL.CategoryResolver.cursor/0","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#ensure_update_allowed/2","title":"Bonfire.Classify.GraphQL.CategoryResolver.ensure_update_allowed/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#fetch_categories/2","title":"Bonfire.Classify.GraphQL.CategoryResolver.fetch_categories/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#fetch_categories_children/3","title":"Bonfire.Classify.GraphQL.CategoryResolver.fetch_categories_children/3","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#fetch_categories_toplevel/2","title":"Bonfire.Classify.GraphQL.CategoryResolver.fetch_categories_toplevel/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#fetch_category/2","title":"Bonfire.Classify.GraphQL.CategoryResolver.fetch_category/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#fetch_parent_category/2","title":"Bonfire.Classify.GraphQL.CategoryResolver.fetch_parent_category/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#name/3","title":"Bonfire.Classify.GraphQL.CategoryResolver.name/3","type":"function"},{"doc":"Retrieves an Page of categorys according to various filters Used by: GraphQL resolver single-parent resolution","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#page/5","title":"Bonfire.Classify.GraphQL.CategoryResolver.page/5","type":"function"},{"doc":"Retrieves an Pages of categorys according to various filters Used by: GraphQL resolver bulk resolution","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#pages/6","title":"Bonfire.Classify.GraphQL.CategoryResolver.pages/6","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#parent_category/3","title":"Bonfire.Classify.GraphQL.CategoryResolver.parent_category/3","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#summary/3","title":"Bonfire.Classify.GraphQL.CategoryResolver.summary/3","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#test_cursor/0","title":"Bonfire.Classify.GraphQL.CategoryResolver.test_cursor/0","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.CategoryResolver.html#update_category/2","title":"Bonfire.Classify.GraphQL.CategoryResolver.update_category/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.GraphQL.ClassifySchema.html","title":"Bonfire.Classify.GraphQL.ClassifySchema","type":"module"},{"doc":"","ref":"Bonfire.Classify.LiveHandler.html","title":"Bonfire.Classify.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Classify.LiveHandler.html#handle_event/3","title":"Bonfire.Classify.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Classify.Migrations.html","title":"Bonfire.Classify.Migrations","type":"module"},{"doc":"","ref":"Bonfire.Classify.Migrations.html#down/0","title":"Bonfire.Classify.Migrations.down/0","type":"function"},{"doc":"","ref":"Bonfire.Classify.Migrations.html#up/0","title":"Bonfire.Classify.Migrations.up/0","type":"function"},{"doc":"","ref":"Bonfire.Classify.Simulate.html","title":"Bonfire.Classify.Simulate","type":"module"},{"doc":"","ref":"Bonfire.Classify.Simulate.html#category/1","title":"Bonfire.Classify.Simulate.category/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Simulate.html#fake_category!/3","title":"Bonfire.Classify.Simulate.fake_category!/3","type":"function"},{"doc":"","ref":"Bonfire.Classify.Test.ConnHelpers.html","title":"Bonfire.Classify.Test.ConnHelpers","type":"module"},{"doc":"Properties current_account :any current_user :any category :map top_level_category :string, default: nil","ref":"Bonfire.Classify.Web.BreadcrumbsLive.html","title":"Bonfire.Classify.Web.BreadcrumbsLive","type":"module"},{"doc":"","ref":"Bonfire.Classify.Web.BreadcrumbsLive.html#category_link/1","title":"Bonfire.Classify.Web.BreadcrumbsLive.category_link/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.Classify.Web.BreadcrumbsLive.html#render/1","title":"Bonfire.Classify.Web.BreadcrumbsLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Web.CategorieListLive.html","title":"Bonfire.Classify.Web.CategorieListLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Classify.Web.CategorieListLive.html#mount/3","title":"Bonfire.Classify.Web.CategorieListLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Classify.Web.CategorieListLive.html#render/1","title":"Bonfire.Classify.Web.CategorieListLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_account :any current_user :any","ref":"Bonfire.Classify.Web.CategoriesLive.html","title":"Bonfire.Classify.Web.CategoriesLive","type":"module"},{"doc":"","ref":"Bonfire.Classify.Web.CategoriesLive.html#do_handle_params/3","title":"Bonfire.Classify.Web.CategoriesLive.do_handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.Classify.Web.CategoriesLive.html#handle_event/3","title":"Bonfire.Classify.Web.CategoriesLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.Classify.Web.CategoriesLive.html#handle_params/3","title":"Bonfire.Classify.Web.CategoriesLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Classify.Web.CategoriesLive.html#mount/3","title":"Bonfire.Classify.Web.CategoriesLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Classify.Web.CategoriesLive.html#render/1","title":"Bonfire.Classify.Web.CategoriesLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_account :any current_user :any","ref":"Bonfire.Classify.Web.CategoriesNavLive.html","title":"Bonfire.Classify.Web.CategoriesNavLive","type":"module"},{"doc":"","ref":"Bonfire.Classify.Web.CategoriesNavLive.html#category_link/1","title":"Bonfire.Classify.Web.CategoriesNavLive.category_link/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.Classify.Web.CategoriesNavLive.html#mount/1","title":"Bonfire.Classify.Web.CategoriesNavLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Classify.Web.CategoriesNavLive.html#render/1","title":"Bonfire.Classify.Web.CategoriesNavLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.Classify.Web.CategoriesNavLive.html#update/2","title":"Bonfire.Classify.Web.CategoriesNavLive.update/2","type":"function"},{"doc":"Properties current_account :any current_user :any category :map subcategories :list, default: [] object_boundary :any, default: nil","ref":"Bonfire.Classify.Web.CategoryHeroLive.html","title":"Bonfire.Classify.Web.CategoryHeroLive","type":"module"},{"doc":"","ref":"Bonfire.Classify.Web.CategoryHeroLive.html#display_url/1","title":"Bonfire.Classify.Web.CategoryHeroLive.display_url/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.Classify.Web.CategoryHeroLive.html#render/1","title":"Bonfire.Classify.Web.CategoryHeroLive.render/1","type":"function"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_account :any current_user :any","ref":"Bonfire.Classify.Web.CategoryLive.html","title":"Bonfire.Classify.Web.CategoryLive","type":"module"},{"doc":"","ref":"Bonfire.Classify.Web.CategoryLive.html#do_handle_params/3","title":"Bonfire.Classify.Web.CategoryLive.do_handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.Classify.Web.CategoryLive.html#handle_event/3","title":"Bonfire.Classify.Web.CategoryLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.Classify.Web.CategoryLive.html#handle_params/3","title":"Bonfire.Classify.Web.CategoryLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Classify.Web.CategoryLive.html#mount/3","title":"Bonfire.Classify.Web.CategoryLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Classify.Web.CategoryLive.html#render/1","title":"Bonfire.Classify.Web.CategoryLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Web.CategoryLive.html#tab/1","title":"Bonfire.Classify.Web.CategoryLive.tab/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Web.CategoryLive.SubcategoriesLive.html","title":"Bonfire.Classify.Web.CategoryLive.SubcategoriesLive","type":"module"},{"doc":"","ref":"Bonfire.Classify.Web.CategoryLive.SubcategoriesLive.html#fetch/2","title":"Bonfire.Classify.Web.CategoryLive.SubcategoriesLive.fetch/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Classify.Web.CategoryLive.SubcategoriesLive.html#render/1","title":"Bonfire.Classify.Web.CategoryLive.SubcategoriesLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.Classify.Web.CategoryLive.SubcategoriesLive.html#update/2","title":"Bonfire.Classify.Web.CategoryLive.SubcategoriesLive.update/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Web.Component.CategoryPreviewLive.html","title":"Bonfire.Classify.Web.Component.CategoryPreviewLive","type":"module"},{"doc":"","ref":"Bonfire.Classify.Web.Component.CategoryPreviewLive.html#category_link/1","title":"Bonfire.Classify.Web.Component.CategoryPreviewLive.category_link/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Classify.Web.Component.CategoryPreviewLive.html#render/1","title":"Bonfire.Classify.Web.Component.CategoryPreviewLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.Classify.Web.Component.CategoryPreviewLive.html#update/2","title":"Bonfire.Classify.Web.Component.CategoryPreviewLive.update/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Web.InstanceLive.InstanceCategoriesLive.html","title":"Bonfire.Classify.Web.InstanceLive.InstanceCategoriesLive","type":"module"},{"doc":"","ref":"Bonfire.Classify.Web.InstanceLive.InstanceCategoriesLive.html#fetch/2","title":"Bonfire.Classify.Web.InstanceLive.InstanceCategoriesLive.fetch/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Classify.Web.InstanceLive.InstanceCategoriesLive.html#render/1","title":"Bonfire.Classify.Web.InstanceLive.InstanceCategoriesLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.Classify.Web.InstanceLive.InstanceCategoriesLive.html#update/2","title":"Bonfire.Classify.Web.InstanceLive.InstanceCategoriesLive.update/2","type":"function"},{"doc":"","ref":"Bonfire.Classify.Web.My.NewCategoryLive.html","title":"Bonfire.Classify.Web.My.NewCategoryLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.Classify.Web.My.NewCategoryLive.html#handle_event/3","title":"Bonfire.Classify.Web.My.NewCategoryLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Classify.Web.My.NewCategoryLive.html#render/1","title":"Bonfire.Classify.Web.My.NewCategoryLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.Classify.Web.My.NewCategoryLive.html#update/2","title":"Bonfire.Classify.Web.My.NewCategoryLive.update/2","type":"function"},{"doc":"Properties current_account :any current_user :any category :any, default: nil object :any, default: nil textarea_class :css_class, default: nil to_boundaries :list, default: nil open_boundaries :boolean, default: false Slots header","ref":"Bonfire.Classify.Web.NewCategoryLive.html","title":"Bonfire.Classify.Web.NewCategoryLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.Classify.Web.NewCategoryLive.html#render/1","title":"Bonfire.Classify.Web.NewCategoryLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Classify.Web.Routes.html","title":"Bonfire.Classify.Web.Routes","type":"module"},{"doc":"Properties current_account :any current_user :any category :map","ref":"Bonfire.Classify.Web.SettingsLive.html","title":"Bonfire.Classify.Web.SettingsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.Classify.Web.SettingsLive.html#render/1","title":"Bonfire.Classify.Web.SettingsLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any category :map, required: false subcategories :list, default: []","ref":"Bonfire.Classify.Web.SubcategoryBadgesLive.html","title":"Bonfire.Classify.Web.SubcategoryBadgesLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.Classify.Web.SubcategoryBadgesLive.html#render/1","title":"Bonfire.Classify.Web.SubcategoryBadgesLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any widget_title :string subcategories :list","ref":"Bonfire.Classify.Web.WidgetSubtopicsLive.html","title":"Bonfire.Classify.Web.WidgetSubtopicsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.Classify.Web.WidgetSubtopicsLive.html#render/1","title":"Bonfire.Classify.Web.WidgetSubtopicsLive.render/1","type":"function"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.ConnCase.html","title":"Bonfire.ConnCase","type":"module"},{"doc":"Component for embedding a CKeditor-based rich text editor Properties current_account :any current_user :any field_name :string placeholder :string content :string textarea_class :css_class insert_text :string","ref":"Bonfire.Editor.Ck.html","title":"Bonfire.Editor.Ck","type":"module"},{"doc":"","ref":"Bonfire.Editor.Ck.html#output_format/0","title":"Bonfire.Editor.Ck.output_format/0","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.Editor.Ck.html#render/1","title":"Bonfire.Editor.Ck.render/1","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Editor.Ck.ChannelCase.html","title":"Bonfire.Editor.Ck.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Editor.Ck.ConnCase.html","title":"Bonfire.Editor.Ck.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.Editor.Ck.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Editor.Ck.DataCase.html","title":"Bonfire.Editor.Ck.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.Editor.Ck.DataCase.html#errors_on/1","title":"Bonfire.Editor.Ck.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.Editor.Ck.DataHelpers.html","title":"Bonfire.Editor.Ck.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.Editor.Ck.Test.ConnHelpers.html","title":"Bonfire.Editor.Ck.Test.ConnHelpers","type":"module"},{"doc":"Not used currently Properties current_account :any current_user :any field_name :string placeholder :string content :string","ref":"Bonfire.Editor.Ck.TextArea.html","title":"Bonfire.Editor.Ck.TextArea","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.Editor.Ck.TextArea.html#render/1","title":"Bonfire.Editor.Ck.TextArea.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any field_name :string, default: &quot;html_body&quot; placeholder :string, default: &quot;&quot; content :string, default: &quot;&quot; smart_input_text :string, default: &quot;&quot; insert_text :string, default: &quot;&quot; textarea_class :css_class, default: nil thread_mode :any, default: nil showing_within :any, default: nil","ref":"Bonfire.Editor.Quill.html","title":"Bonfire.Editor.Quill","type":"module"},{"doc":"","ref":"Bonfire.Editor.Quill.html#output_format/0","title":"Bonfire.Editor.Quill.output_format/0","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.Editor.Quill.html#render/1","title":"Bonfire.Editor.Quill.render/1","type":"function"},{"doc":"This module defines the test case to be used by tests that require setting up a full browser. If the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyAppWeb.FeatureCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Editor.Quill.BrowserCase.html","title":"Bonfire.Editor.Quill.BrowserCase","type":"module"},{"doc":"","ref":"Bonfire.Editor.Quill.BrowserCase.html#disable_latency_sim/1","title":"Bonfire.Editor.Quill.BrowserCase.disable_latency_sim/1","type":"function"},{"doc":"","ref":"Bonfire.Editor.Quill.BrowserCase.html#enable_latency_sim/2","title":"Bonfire.Editor.Quill.BrowserCase.enable_latency_sim/2","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Editor.Quill.ChannelCase.html","title":"Bonfire.Editor.Quill.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Editor.Quill.ConnCase.html","title":"Bonfire.Editor.Quill.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.Editor.Quill.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Editor.Quill.DataCase.html","title":"Bonfire.Editor.Quill.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.Editor.Quill.DataCase.html#errors_on/1","title":"Bonfire.Editor.Quill.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.Editor.Quill.DataHelpers.html","title":"Bonfire.Editor.Quill.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.Editor.Quill.Integration.html","title":"Bonfire.Editor.Quill.Integration","type":"module"},{"doc":"","ref":"Bonfire.Editor.Quill.Integration.html#repo/0","title":"Bonfire.Editor.Quill.Integration.repo/0","type":"function"},{"doc":"","ref":"Bonfire.Editor.Quill.Test.ConnHelpers.html","title":"Bonfire.Editor.Quill.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.Editor.Quill.Test.FakeHelpers.html","title":"Bonfire.Editor.Quill.Test.FakeHelpers","type":"module"},{"doc":"","ref":"Bonfire.ErrorReporting.html","title":"Bonfire.ErrorReporting","type":"module"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.html","title":"Bonfire.Federate.ActivityPub","type":"module"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.html#is_admin?/1","title":"Bonfire.Federate.ActivityPub.is_admin?/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.html#repo/0","title":"Bonfire.Federate.ActivityPub.repo/0","type":"function"},{"doc":"Module for publishing ActivityPub activities. Intended entry point for this module is the __MODULE__.enqueue/2 function provided by ActivityPub.Workers.WorkerHelper module. Note that the &quot;context_id&quot; argument refers to the ID of the object being federated and not to the ID of the object context, if present.","ref":"Bonfire.Federate.ActivityPub.APPublishWorker.html","title":"Bonfire.Federate.ActivityPub.APPublishWorker","type":"module"},{"doc":"Enqueues a number of jobs provided a verb and a list of string IDs.","ref":"Bonfire.Federate.ActivityPub.APPublishWorker.html#batch_enqueue/2","title":"Bonfire.Federate.ActivityPub.APPublishWorker.batch_enqueue/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.APPublishWorker.html#enqueue/3","title":"Bonfire.Federate.ActivityPub.APPublishWorker.enqueue/3","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.APPublishWorker.html#enqueueable/3","title":"Bonfire.Federate.ActivityPub.APPublishWorker.enqueueable/3","type":"function"},{"doc":"Process queued-up incoming activities using Bonfire.Federate.ActivityPub.Receiver","ref":"Bonfire.Federate.ActivityPub.APReceiverWorker.html","title":"Bonfire.Federate.ActivityPub.APReceiverWorker","type":"module"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.APReceiverWorker.html#enqueue/3","title":"Bonfire.Federate.ActivityPub.APReceiverWorker.enqueue/3","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.APReceiverWorker.html#enqueueable/3","title":"Bonfire.Federate.ActivityPub.APReceiverWorker.enqueueable/3","type":"function"},{"doc":"Adapter functions delegated from the ActivityPub Library","ref":"Bonfire.Federate.ActivityPub.Adapter.html","title":"Bonfire.Federate.ActivityPub.Adapter","type":"module"},{"doc":"Callback implementation for ActivityPub.Adapter.base_url/0 .","ref":"Bonfire.Federate.ActivityPub.Adapter.html#base_url/0","title":"Bonfire.Federate.ActivityPub.Adapter.base_url/0","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Adapter.html#get_actor_by_ap_id/1","title":"Bonfire.Federate.ActivityPub.Adapter.get_actor_by_ap_id/1","type":"function"},{"doc":"Callback implementation for ActivityPub.Adapter.get_actor_by_id/1 .","ref":"Bonfire.Federate.ActivityPub.Adapter.html#get_actor_by_id/1","title":"Bonfire.Federate.ActivityPub.Adapter.get_actor_by_id/1","type":"function"},{"doc":"Callback implementation for ActivityPub.Adapter.get_actor_by_username/1 .","ref":"Bonfire.Federate.ActivityPub.Adapter.html#get_actor_by_username/1","title":"Bonfire.Federate.ActivityPub.Adapter.get_actor_by_username/1","type":"function"},{"doc":"Callback implementation for ActivityPub.Adapter.get_follower_local_ids/1 .","ref":"Bonfire.Federate.ActivityPub.Adapter.html#get_follower_local_ids/1","title":"Bonfire.Federate.ActivityPub.Adapter.get_follower_local_ids/1","type":"function"},{"doc":"Callback implementation for ActivityPub.Adapter.get_following_local_ids/1 .","ref":"Bonfire.Federate.ActivityPub.Adapter.html#get_following_local_ids/1","title":"Bonfire.Federate.ActivityPub.Adapter.get_following_local_ids/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Adapter.html#get_object_url/1","title":"Bonfire.Federate.ActivityPub.Adapter.get_object_url/1","type":"function"},{"doc":"Callback implementation for ActivityPub.Adapter.get_redirect_url/1 .","ref":"Bonfire.Federate.ActivityPub.Adapter.html#get_redirect_url/1","title":"Bonfire.Federate.ActivityPub.Adapter.get_redirect_url/1","type":"function"},{"doc":"Queue-up incoming activities to be processed by Bonfire.Federate.ActivityPub.APReceiverWorker","ref":"Bonfire.Federate.ActivityPub.Adapter.html#handle_activity/1","title":"Bonfire.Federate.ActivityPub.Adapter.handle_activity/1","type":"function"},{"doc":"Callback implementation for ActivityPub.Adapter.maybe_create_remote_actor/1 .","ref":"Bonfire.Federate.ActivityPub.Adapter.html#maybe_create_remote_actor/1","title":"Bonfire.Federate.ActivityPub.Adapter.maybe_create_remote_actor/1","type":"function"},{"doc":"Callback implementation for ActivityPub.Adapter.maybe_publish_object/1 .","ref":"Bonfire.Federate.ActivityPub.Adapter.html#maybe_publish_object/1","title":"Bonfire.Federate.ActivityPub.Adapter.maybe_publish_object/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Adapter.html#redirect_to_actor/1","title":"Bonfire.Federate.ActivityPub.Adapter.redirect_to_actor/1","type":"function"},{"doc":"Callback implementation for ActivityPub.Adapter.update_local_actor/2 .","ref":"Bonfire.Federate.ActivityPub.Adapter.html#update_local_actor/2","title":"Bonfire.Federate.ActivityPub.Adapter.update_local_actor/2","type":"function"},{"doc":"For updating an Actor in cache after a User/etc is updated","ref":"Bonfire.Federate.ActivityPub.Adapter.html#update_local_actor_cache/1","title":"Bonfire.Federate.ActivityPub.Adapter.update_local_actor_cache/1","type":"function"},{"doc":"Callback implementation for ActivityPub.Adapter.update_remote_actor/1 .","ref":"Bonfire.Federate.ActivityPub.Adapter.html#update_remote_actor/1","title":"Bonfire.Federate.ActivityPub.Adapter.update_remote_actor/1","type":"function"},{"doc":"Filter activities depending on their origin instance, actor, or other criteria","ref":"Bonfire.Federate.ActivityPub.BoundariesMRF.html","title":"Bonfire.Federate.ActivityPub.BoundariesMRF","type":"module"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.BoundariesMRF.html#all_actors/1","title":"Bonfire.Federate.ActivityPub.BoundariesMRF.all_actors/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.BoundariesMRF.html#all_recipients/2","title":"Bonfire.Federate.ActivityPub.BoundariesMRF.all_recipients/2","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Federate.ActivityPub.ChannelCase.html","title":"Bonfire.Federate.ActivityPub.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Federate.ActivityPub.ConnCase.html","title":"Bonfire.Federate.ActivityPub.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.Federate.ActivityPub.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Federate.ActivityPub.DataCase.html","title":"Bonfire.Federate.ActivityPub.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.Federate.ActivityPub.DataCase.html#errors_on/1","title":"Bonfire.Federate.ActivityPub.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.DataHelpers.html","title":"Bonfire.Federate.ActivityPub.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.DataHelpers.html#activity_json/1","title":"Bonfire.Federate.ActivityPub.DataHelpers.activity_json/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.DataHelpers.html#local_activity_json/2","title":"Bonfire.Federate.ActivityPub.DataHelpers.local_activity_json/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.DataHelpers.html#local_activity_json_to/1","title":"Bonfire.Federate.ActivityPub.DataHelpers.local_activity_json_to/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.DataHelpers.html#local_actor_ids/1","title":"Bonfire.Federate.ActivityPub.DataHelpers.local_actor_ids/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.DataHelpers.html#receive_remote_activity_to/1","title":"Bonfire.Federate.ActivityPub.DataHelpers.receive_remote_activity_to/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.DataHelpers.html#remote_activity_json/0","title":"Bonfire.Federate.ActivityPub.DataHelpers.remote_activity_json/0","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.DataHelpers.html#remote_activity_json/3","title":"Bonfire.Federate.ActivityPub.DataHelpers.remote_activity_json/3","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.DataHelpers.html#remote_activity_json_to/1","title":"Bonfire.Federate.ActivityPub.DataHelpers.remote_activity_json_to/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.DataHelpers.html#remote_actor_json/1","title":"Bonfire.Federate.ActivityPub.DataHelpers.remote_actor_json/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.DataHelpers.html#remote_actor_user/1","title":"Bonfire.Federate.ActivityPub.DataHelpers.remote_actor_user/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.DataHelpers.html#remote_PM_json/2","title":"Bonfire.Federate.ActivityPub.DataHelpers.remote_PM_json/2","type":"function"},{"doc":"A Global cache of known federation modules to be queried by activity and/or object type. Use of the FederationModules Service requires: Exporting federation_module/0 in relevant modules (in context modules indicating what activity or object types the module can handle) To populate :bonfire, :federation_search_path in config with the list of OTP applications where federation modules are declared. Start the Bonfire.Federate.ActivityPub.FederationModules application before querying. OTP 21.2 or greater, though we recommend using the most recent release available. While this module is a GenServer, it is only responsible for setup of the cache and then exits with :ignore having done so. It is not recommended to restart the service as this will lead to a stop the world garbage collection of all processes and the copying of the entire cache to each process that has queried it since its last local garbage collection.","ref":"Bonfire.Federate.ActivityPub.FederationModules.html","title":"Bonfire.Federate.ActivityPub.FederationModules","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#child_spec/1","title":"Bonfire.Federate.ActivityPub.FederationModules.child_spec/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#data/0","title":"Bonfire.Federate.ActivityPub.FederationModules.data/0","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#federation_function_error/2","title":"Bonfire.Federate.ActivityPub.FederationModules.federation_function_error/2","type":"function"},{"doc":"Look up a Federation Module, throw :not_found if not found.","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#federation_module!/1","title":"Bonfire.Federate.ActivityPub.FederationModules.federation_module!/1","type":"function"},{"doc":"Get a Federation Module identified by activity and/or object type, as string or {activity, object} tuple.","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#federation_module/1","title":"Bonfire.Federate.ActivityPub.FederationModules.federation_module/1","type":"function"},{"doc":"Look up many types at once, throw :not_found if any of them are not found","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#federation_modules/1","title":"Bonfire.Federate.ActivityPub.FederationModules.federation_modules/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#maybe_federation_module/1","title":"Bonfire.Federate.ActivityPub.FederationModules.maybe_federation_module/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#populate/0","title":"Bonfire.Federate.ActivityPub.FederationModules.populate/0","type":"function"},{"doc":"Populates the global cache with federation_module data via introspection.","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#start_link/1","title":"Bonfire.Federate.ActivityPub.FederationModules.start_link/1","type":"function"},{"doc":"A query is either a federation_module name atom or (Pointer) id binary","ref":"Bonfire.Federate.ActivityPub.FederationModules.html#t:query/0","title":"Bonfire.Federate.ActivityPub.FederationModules.query/0","type":"type"},{"doc":"Federated instances Context for Bonfire.Data.ActivityPub.Peer","ref":"Bonfire.Federate.ActivityPub.Instances.html","title":"Bonfire.Federate.ActivityPub.Instances","type":"module"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Instances.html#get/1","title":"Bonfire.Federate.ActivityPub.Instances.get/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Instances.html#get_or_create/1","title":"Bonfire.Federate.ActivityPub.Instances.get_or_create/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Instances.html#is_blocked?/3","title":"Bonfire.Federate.ActivityPub.Instances.is_blocked?/3","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Migrations.html","title":"Bonfire.Federate.ActivityPub.Migrations","type":"module"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Migrations.html#migrate_activity_pub/0","title":"Bonfire.Federate.ActivityPub.Migrations.migrate_activity_pub/0","type":"macro"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Migrations.html#migrate_activity_pub/1","title":"Bonfire.Federate.ActivityPub.Migrations.migrate_activity_pub/1","type":"macro"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.NodeinfoAdapter.html","title":"Bonfire.Federate.ActivityPub.NodeinfoAdapter","type":"module"},{"doc":"Callback implementation for Nodeinfo.Adapter.base_url/0 .","ref":"Bonfire.Federate.ActivityPub.NodeinfoAdapter.html#base_url/0","title":"Bonfire.Federate.ActivityPub.NodeinfoAdapter.base_url/0","type":"function"},{"doc":"Callback implementation for Nodeinfo.Adapter.gather_nodeinfo_data/0 .","ref":"Bonfire.Federate.ActivityPub.NodeinfoAdapter.html#gather_nodeinfo_data/0","title":"Bonfire.Federate.ActivityPub.NodeinfoAdapter.gather_nodeinfo_data/0","type":"function"},{"doc":"Federated actors or objects Context for Bonfire.Data.ActivityPub.Peered","ref":"Bonfire.Federate.ActivityPub.Peered.html","title":"Bonfire.Federate.ActivityPub.Peered","type":"module"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Peered.html#create/3","title":"Bonfire.Federate.ActivityPub.Peered.create/3","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Peered.html#get/1","title":"Bonfire.Federate.ActivityPub.Peered.get/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Peered.html#get_canonical_uri/1","title":"Bonfire.Federate.ActivityPub.Peered.get_canonical_uri/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Peered.html#is_blocked?/3","title":"Bonfire.Federate.ActivityPub.Peered.is_blocked?/3","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Peered.html#save_canonical_uri/2","title":"Bonfire.Federate.ActivityPub.Peered.save_canonical_uri/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Publisher.html","title":"Bonfire.Federate.ActivityPub.Publisher","type":"module"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Publisher.html#publish/2","title":"Bonfire.Federate.ActivityPub.Publisher.publish/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Publisher.html#publish_error/2","title":"Bonfire.Federate.ActivityPub.Publisher.publish_error/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Receiver.html","title":"Bonfire.Federate.ActivityPub.Receiver","type":"module"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Receiver.html#activity_character/1","title":"Bonfire.Federate.ActivityPub.Receiver.activity_character/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Receiver.html#receive_activity/1","title":"Bonfire.Federate.ActivityPub.Receiver.receive_activity/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Receiver.html#receive_activity/2","title":"Bonfire.Federate.ActivityPub.Receiver.receive_activity/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Receiver.html#receive_error/2","title":"Bonfire.Federate.ActivityPub.Receiver.receive_error/2","type":"function"},{"doc":"Create an object without an activity","ref":"Bonfire.Federate.ActivityPub.Receiver.html#receive_object/2","title":"Bonfire.Federate.ActivityPub.Receiver.receive_object/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.RuntimeConfig.html","title":"Bonfire.Federate.ActivityPub.RuntimeConfig","type":"module"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.RuntimeConfig.html#config/0","title":"Bonfire.Federate.ActivityPub.RuntimeConfig.config/0","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.RuntimeConfig.html#config_module/0","title":"Bonfire.Federate.ActivityPub.RuntimeConfig.config_module/0","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Simulate.html","title":"Bonfire.Federate.ActivityPub.Simulate","type":"module"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Simulate.html#actor_json/1","title":"Bonfire.Federate.ActivityPub.Simulate.actor_json/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Simulate.html#fake_remote_user/1","title":"Bonfire.Federate.ActivityPub.Simulate.fake_remote_user/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Simulate.html#webfingered/0","title":"Bonfire.Federate.ActivityPub.Simulate.webfingered/0","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#conn/0","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.conn/0","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#extract_files/1","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.extract_files/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#html_conn/0","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html_conn/0","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#json_conn/0","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.json_conn/0","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#plugged/1","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.plugged/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#token_conn/2","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.token_conn/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#user_conn/2","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.user_conn/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#with_accept_html/1","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.with_accept_html/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#with_accept_json/1","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.with_accept_json/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#with_authorization/2","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.with_authorization/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#with_method/2","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.with_method/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#with_params/2","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.with_params/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#with_request_json/1","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.with_request_json/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.html#with_user/2","title":"Bonfire.Federate.ActivityPub.Test.ConnHelpers.with_user/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html","title":"Bonfire.Federate.ActivityPub.Utils","type":"module"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#ap_base_url/0","title":"Bonfire.Federate.ActivityPub.Utils.ap_base_url/0","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#character_module/1","title":"Bonfire.Federate.ActivityPub.Utils.character_module/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#character_to_actor/1","title":"Bonfire.Federate.ActivityPub.Utils.character_to_actor/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#create_author_object/1","title":"Bonfire.Federate.ActivityPub.Utils.create_author_object/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#create_remote_actor/1","title":"Bonfire.Federate.ActivityPub.Utils.create_remote_actor/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#determine_recipients/2","title":"Bonfire.Federate.ActivityPub.Utils.determine_recipients/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#determine_recipients/3","title":"Bonfire.Federate.ActivityPub.Utils.determine_recipients/3","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#determine_recipients/4","title":"Bonfire.Federate.ActivityPub.Utils.determine_recipients/4","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#format_actor/2","title":"Bonfire.Federate.ActivityPub.Utils.format_actor/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_actor_username/1","title":"Bonfire.Federate.ActivityPub.Utils.get_actor_username/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_author/1","title":"Bonfire.Federate.ActivityPub.Utils.get_author/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_by_url_ap_id_or_username/1","title":"Bonfire.Federate.ActivityPub.Utils.get_by_url_ap_id_or_username/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_cached_actor_by_local_id!/1","title":"Bonfire.Federate.ActivityPub.Utils.get_cached_actor_by_local_id!/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_character_by_ap_id!/1","title":"Bonfire.Federate.ActivityPub.Utils.get_character_by_ap_id!/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_character_by_ap_id/1","title":"Bonfire.Federate.ActivityPub.Utils.get_character_by_ap_id/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_character_by_id/2","title":"Bonfire.Federate.ActivityPub.Utils.get_character_by_id/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_character_by_username/1","title":"Bonfire.Federate.ActivityPub.Utils.get_character_by_username/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_context_ap_id/1","title":"Bonfire.Federate.ActivityPub.Utils.get_context_ap_id/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_creator_ap_id/1","title":"Bonfire.Federate.ActivityPub.Utils.get_creator_ap_id/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_different_creator_ap_id/1","title":"Bonfire.Federate.ActivityPub.Utils.get_different_creator_ap_id/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_in_reply_to/1","title":"Bonfire.Federate.ActivityPub.Utils.get_in_reply_to/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_object/1","title":"Bonfire.Federate.ActivityPub.Utils.get_object/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_object_ap_id!/1","title":"Bonfire.Federate.ActivityPub.Utils.get_object_ap_id!/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_object_ap_id/1","title":"Bonfire.Federate.ActivityPub.Utils.get_object_ap_id/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_object_or_actor_by_ap_id!/1","title":"Bonfire.Federate.ActivityPub.Utils.get_object_or_actor_by_ap_id!/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_or_fetch_actor_by_ap_id!/1","title":"Bonfire.Federate.ActivityPub.Utils.get_or_fetch_actor_by_ap_id!/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_or_fetch_and_create_by_uri/1","title":"Bonfire.Federate.ActivityPub.Utils.get_or_fetch_and_create_by_uri/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#get_pointer_id_by_ap_id/1","title":"Bonfire.Federate.ActivityPub.Utils.get_pointer_id_by_ap_id/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#is_local?/1","title":"Bonfire.Federate.ActivityPub.Utils.is_local?/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#log/1","title":"Bonfire.Federate.ActivityPub.Utils.log/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#maybe_attach_property_value/2","title":"Bonfire.Federate.ActivityPub.Utils.maybe_attach_property_value/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#maybe_create_icon_object/2","title":"Bonfire.Federate.ActivityPub.Utils.maybe_create_icon_object/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#maybe_create_image_object/1","title":"Bonfire.Federate.ActivityPub.Utils.maybe_create_image_object/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#maybe_create_image_object/2","title":"Bonfire.Federate.ActivityPub.Utils.maybe_create_image_object/2","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#maybe_fix_image_object/1","title":"Bonfire.Federate.ActivityPub.Utils.maybe_fix_image_object/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#maybe_format_image_object_from_path/1","title":"Bonfire.Federate.ActivityPub.Utils.maybe_format_image_object_from_path/1","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#public_uri/0","title":"Bonfire.Federate.ActivityPub.Utils.public_uri/0","type":"function"},{"doc":"","ref":"Bonfire.Federate.ActivityPub.Utils.html#validate_url/1","title":"Bonfire.Federate.ActivityPub.Utils.validate_url/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.html","title":"Bonfire.Geolocate","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.html#is_admin?/1","title":"Bonfire.Geolocate.is_admin?/1","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Geolocate.ChannelCase.html","title":"Bonfire.Geolocate.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Geolocate.ConnCase.html","title":"Bonfire.Geolocate.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.Geolocate.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Geolocate.DataCase.html","title":"Bonfire.Geolocate.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.Geolocate.DataCase.html#errors_on/1","title":"Bonfire.Geolocate.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.DataHelpers.html","title":"Bonfire.Geolocate.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.Geocode.html","title":"Bonfire.Geolocate.Geocode","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.Geocode.html#coordinates/1","title":"Bonfire.Geolocate.Geocode.coordinates/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocation.html","title":"Bonfire.Geolocate.Geolocation","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.Geolocation.html#context_module/0","title":"Bonfire.Geolocate.Geolocation.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocation.html#create_changeset/2","title":"Bonfire.Geolocate.Geolocation.create_changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocation.html#create_changeset/3","title":"Bonfire.Geolocate.Geolocation.create_changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocation.html#follow_filters/0","title":"Bonfire.Geolocate.Geolocation.follow_filters/0","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocation.html#queries_module/0","title":"Bonfire.Geolocate.Geolocation.queries_module/0","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocation.html#update_changeset/2","title":"Bonfire.Geolocate.Geolocation.update_changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocation.html#t:t/0","title":"Bonfire.Geolocate.Geolocation.t/0","type":"type"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html","title":"Bonfire.Geolocate.Geolocations","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#ap_publish_activity/2","title":"Bonfire.Geolocate.Geolocations.ap_publish_activity/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#ap_receive_activity/3","title":"Bonfire.Geolocate.Geolocations.ap_receive_activity/3","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#create/2","title":"Bonfire.Geolocate.Geolocations.create/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#create/3","title":"Bonfire.Geolocate.Geolocations.create/3","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#cursor/1","title":"Bonfire.Geolocate.Geolocations.cursor/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#federation_module/0","title":"Bonfire.Geolocate.Geolocations.federation_module/0","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#indexing_object_format/1","title":"Bonfire.Geolocate.Geolocations.indexing_object_format/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#many!/1","title":"Bonfire.Geolocate.Geolocations.many!/1","type":"function"},{"doc":"Retrieves a list of geolocations by arbitrary filters. Used by: Various parts of the codebase that need to query for geolocations (inc. tests)","ref":"Bonfire.Geolocate.Geolocations.html#many/1","title":"Bonfire.Geolocate.Geolocations.many/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#maybe_index/1","title":"Bonfire.Geolocate.Geolocations.maybe_index/1","type":"function"},{"doc":"Retrieves a single geolocation by arbitrary filters. Used by: GraphQL Item queries ActivityPub integration Various parts of the codebase that need to query for geolocations (inc. tests)","ref":"Bonfire.Geolocate.Geolocations.html#one/1","title":"Bonfire.Geolocate.Geolocations.one/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#populate_coordinates/1","title":"Bonfire.Geolocate.Geolocations.populate_coordinates/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#populate_result/1","title":"Bonfire.Geolocate.Geolocations.populate_result/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#resolve_mappable_address/1","title":"Bonfire.Geolocate.Geolocations.resolve_mappable_address/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#search/1","title":"Bonfire.Geolocate.Geolocations.search/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#soft_delete/2","title":"Bonfire.Geolocate.Geolocations.soft_delete/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#test_cursor/1","title":"Bonfire.Geolocate.Geolocations.test_cursor/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#thing_add_location/3","title":"Bonfire.Geolocate.Geolocations.thing_add_location/3","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Geolocations.html#update/3","title":"Bonfire.Geolocate.Geolocations.update/3","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html","title":"Bonfire.Geolocate.GraphQL","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#all_geolocations/2","title":"Bonfire.Geolocate.GraphQL.all_geolocations/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#create_geolocation/2","title":"Bonfire.Geolocate.GraphQL.create_geolocation/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#delete_geolocation/2","title":"Bonfire.Geolocate.GraphQL.delete_geolocation/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#ensure_delete_allowed/2","title":"Bonfire.Geolocate.GraphQL.ensure_delete_allowed/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#ensure_update_allowed/2","title":"Bonfire.Geolocate.GraphQL.ensure_update_allowed/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#fetch_geolocation/2","title":"Bonfire.Geolocate.GraphQL.fetch_geolocation/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#fetch_geolocation_edge/2","title":"Bonfire.Geolocate.GraphQL.fetch_geolocation_edge/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#fetch_geolocations/2","title":"Bonfire.Geolocate.GraphQL.fetch_geolocations/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#fields/2","title":"Bonfire.Geolocate.GraphQL.fields/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#geolocation/2","title":"Bonfire.Geolocate.GraphQL.geolocation/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#geolocation_edge/3","title":"Bonfire.Geolocate.GraphQL.geolocation_edge/3","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#geolocations/2","title":"Bonfire.Geolocate.GraphQL.geolocations/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#last_activity_edge/3","title":"Bonfire.Geolocate.GraphQL.last_activity_edge/3","type":"function"},{"doc":"Retrieves an Page of geolocations according to various filters Used by: GraphQL resolver single-parent resolution","ref":"Bonfire.Geolocate.GraphQL.html#page/5","title":"Bonfire.Geolocate.GraphQL.page/5","type":"function"},{"doc":"Retrieves an Pages of geolocations according to various filters Used by: GraphQL resolver bulk resolution","ref":"Bonfire.Geolocate.GraphQL.html#pages/6","title":"Bonfire.Geolocate.GraphQL.pages/6","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.html#update_geolocation/2","title":"Bonfire.Geolocate.GraphQL.update_geolocation/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.Hydration.html","title":"Bonfire.Geolocate.GraphQL.Hydration","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.GraphQL.Hydration.html#hydrate/0","title":"Bonfire.Geolocate.GraphQL.Hydration.hydrate/0","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.LiveHandler.html","title":"Bonfire.Geolocate.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.LiveHandler.html#create_in_autocomplete/2","title":"Bonfire.Geolocate.LiveHandler.create_in_autocomplete/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.LiveHandler.html#handle_event/3","title":"Bonfire.Geolocate.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.LiveHandler.html#to_tuple/1","title":"Bonfire.Geolocate.LiveHandler.to_tuple/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.MapLive.html","title":"Bonfire.Geolocate.MapLive","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.MapLive.html#handle_event/4","title":"Bonfire.Geolocate.MapLive.handle_event/4","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.MapLive.html#map_icon/1","title":"Bonfire.Geolocate.MapLive.map_icon/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.MapLive.html#place_lat/1","title":"Bonfire.Geolocate.MapLive.place_lat/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.MapLive.html#place_long/1","title":"Bonfire.Geolocate.MapLive.place_long/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Geolocate.MapLive.html#render/1","title":"Bonfire.Geolocate.MapLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.MapLive.html#response/2","title":"Bonfire.Geolocate.MapLive.response/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.Geolocate.MapLive.html#update/2","title":"Bonfire.Geolocate.MapLive.update/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Migrations.html","title":"Bonfire.Geolocate.Migrations","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.Migrations.html#change/0","title":"Bonfire.Geolocate.Migrations.change/0","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Places.html","title":"Bonfire.Geolocate.Places","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.Places.html#fetch_place/2","title":"Bonfire.Geolocate.Places.fetch_place/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Places.html#fetch_place_things/2","title":"Bonfire.Geolocate.Places.fetch_place_things/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Places.html#fetch_places/1","title":"Bonfire.Geolocate.Places.fetch_places/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Queries.html","title":"Bonfire.Geolocate.Queries","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.Queries.html#filter/2","title":"Bonfire.Geolocate.Queries.filter/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Queries.html#join_to/3","title":"Bonfire.Geolocate.Queries.join_to/3","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Queries.html#queries/5","title":"Bonfire.Geolocate.Queries.queries/5","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Queries.html#query/1","title":"Bonfire.Geolocate.Queries.query/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Queries.html#query/2","title":"Bonfire.Geolocate.Queries.query/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.RuntimeConfig.html","title":"Bonfire.Geolocate.RuntimeConfig","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.RuntimeConfig.html#config/0","title":"Bonfire.Geolocate.RuntimeConfig.config/0","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.RuntimeConfig.html#config_module/0","title":"Bonfire.Geolocate.RuntimeConfig.config_module/0","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Simulate.html","title":"Bonfire.Geolocate.Simulate","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.Simulate.html#address/0","title":"Bonfire.Geolocate.Simulate.address/0","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Simulate.html#fake_geolocation!/3","title":"Bonfire.Geolocate.Simulate.fake_geolocation!/3","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Simulate.html#geolocation/1","title":"Bonfire.Geolocate.Simulate.geolocation/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Simulate.html#geolocation_input/1","title":"Bonfire.Geolocate.Simulate.geolocation_input/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Simulate.html#mappable_address/0","title":"Bonfire.Geolocate.Simulate.mappable_address/0","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html","title":"Bonfire.Geolocate.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#conn/0","title":"Bonfire.Geolocate.Test.ConnHelpers.conn/0","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#extract_files/1","title":"Bonfire.Geolocate.Test.ConnHelpers.extract_files/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#gql_post/4","title":"Bonfire.Geolocate.Test.ConnHelpers.gql_post/4","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#gql_post_200/3","title":"Bonfire.Geolocate.Test.ConnHelpers.gql_post_200/3","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#gql_post_data/3","title":"Bonfire.Geolocate.Test.ConnHelpers.gql_post_data/3","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#gql_post_errors/2","title":"Bonfire.Geolocate.Test.ConnHelpers.gql_post_errors/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#grumble_post_data/5","title":"Bonfire.Geolocate.Test.ConnHelpers.grumble_post_data/5","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#grumble_post_errors/4","title":"Bonfire.Geolocate.Test.ConnHelpers.grumble_post_errors/4","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#grumble_post_key/6","title":"Bonfire.Geolocate.Test.ConnHelpers.grumble_post_key/6","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#html_conn/0","title":"Bonfire.Geolocate.Test.ConnHelpers.html_conn/0","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#json_conn/0","title":"Bonfire.Geolocate.Test.ConnHelpers.json_conn/0","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#plugged/1","title":"Bonfire.Geolocate.Test.ConnHelpers.plugged/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#token_conn/2","title":"Bonfire.Geolocate.Test.ConnHelpers.token_conn/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#user_conn/2","title":"Bonfire.Geolocate.Test.ConnHelpers.user_conn/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#with_accept_html/1","title":"Bonfire.Geolocate.Test.ConnHelpers.with_accept_html/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#with_accept_json/1","title":"Bonfire.Geolocate.Test.ConnHelpers.with_accept_json/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#with_authorization/2","title":"Bonfire.Geolocate.Test.ConnHelpers.with_authorization/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#with_method/2","title":"Bonfire.Geolocate.Test.ConnHelpers.with_method/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#with_params/2","title":"Bonfire.Geolocate.Test.ConnHelpers.with_params/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#with_request_json/1","title":"Bonfire.Geolocate.Test.ConnHelpers.with_request_json/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Test.ConnHelpers.html#with_user/2","title":"Bonfire.Geolocate.Test.ConnHelpers.with_user/2","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Web.GenericMapLive.html","title":"Bonfire.Geolocate.Web.GenericMapLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.Geolocate.Web.GenericMapLive.html#handle_event/3","title":"Bonfire.Geolocate.Web.GenericMapLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_info/2 .","ref":"Bonfire.Geolocate.Web.GenericMapLive.html#handle_info/2","title":"Bonfire.Geolocate.Web.GenericMapLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.Geolocate.Web.GenericMapLive.html#handle_params/3","title":"Bonfire.Geolocate.Web.GenericMapLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Geolocate.Web.GenericMapLive.html#mount/3","title":"Bonfire.Geolocate.Web.GenericMapLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Geolocate.Web.GenericMapLive.html#render/1","title":"Bonfire.Geolocate.Web.GenericMapLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Geolocate.Web.Routes.html","title":"Bonfire.Geolocate.Web.Routes","type":"module"},{"doc":"","ref":"Bonfire.Invite.Links.html","title":"Bonfire.Invite.Links","type":"module"},{"doc":"","ref":"Bonfire.Invite.Links.html#create/2","title":"Bonfire.Invite.Links.create/2","type":"function"},{"doc":"","ref":"Bonfire.Invite.Links.html#date_expires/1","title":"Bonfire.Invite.Links.date_expires/1","type":"function"},{"doc":"","ref":"Bonfire.Invite.Links.html#expired?/1","title":"Bonfire.Invite.Links.expired?/1","type":"function"},{"doc":"","ref":"Bonfire.Invite.Links.html#get/2","title":"Bonfire.Invite.Links.get/2","type":"function"},{"doc":"","ref":"Bonfire.Invite.Links.html#list_paginated/2","title":"Bonfire.Invite.Links.list_paginated/2","type":"function"},{"doc":"","ref":"Bonfire.Invite.Links.html#one/2","title":"Bonfire.Invite.Links.one/2","type":"function"},{"doc":"","ref":"Bonfire.Invite.Links.html#query/2","title":"Bonfire.Invite.Links.query/2","type":"function"},{"doc":"","ref":"Bonfire.Invite.Links.html#redeem/1","title":"Bonfire.Invite.Links.redeem/1","type":"function"},{"doc":"","ref":"Bonfire.Invite.Links.html#redeemable?/1","title":"Bonfire.Invite.Links.redeemable?/1","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Invite.Links.ChannelCase.html","title":"Bonfire.Invite.Links.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Invite.Links.ConnCase.html","title":"Bonfire.Invite.Links.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.Invite.Links.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Invite.Links.DataCase.html","title":"Bonfire.Invite.Links.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.Invite.Links.DataCase.html#errors_on/1","title":"Bonfire.Invite.Links.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.Invite.Links.DataHelpers.html","title":"Bonfire.Invite.Links.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.Invite.Links.Fake.html","title":"Bonfire.Invite.Links.Fake","type":"module"},{"doc":"","ref":"Bonfire.Invite.Links.Integration.html","title":"Bonfire.Invite.Links.Integration","type":"module"},{"doc":"","ref":"Bonfire.Invite.Links.Integration.html#repo/0","title":"Bonfire.Invite.Links.Integration.repo/0","type":"function"},{"doc":"","ref":"Bonfire.Invite.Links.LiveHandler.html","title":"Bonfire.Invite.Links.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Invite.Links.LiveHandler.html#handle_event/3","title":"Bonfire.Invite.Links.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Invite.Links.Migrations.html","title":"Bonfire.Invite.Links.Migrations","type":"module"},{"doc":"","ref":"Bonfire.Invite.Links.Test.ConnHelpers.html","title":"Bonfire.Invite.Links.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.Invite.Links.Test.FakeHelpers.html","title":"Bonfire.Invite.Links.Test.FakeHelpers","type":"module"},{"doc":"Properties id :string, required: true - The id of the live component (required by LiveView for stateful components). current_account :any current_user :any invites :list, default: []","ref":"Bonfire.Invite.Links.Web.InvitesLive.html","title":"Bonfire.Invite.Links.Web.InvitesLive","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.Invite.Links.Web.InvitesLive.html#handle_event/3","title":"Bonfire.Invite.Links.Web.InvitesLive.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Invite.Links.Web.InvitesLive.html#handle_info/2","title":"Bonfire.Invite.Links.Web.InvitesLive.handle_info/2","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.Invite.Links.Web.InvitesLive.html#mount/1","title":"Bonfire.Invite.Links.Web.InvitesLive.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Invite.Links.Web.InvitesLive.html#render/1","title":"Bonfire.Invite.Links.Web.InvitesLive.render/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.update/2 .","ref":"Bonfire.Invite.Links.Web.InvitesLive.html#update/2","title":"Bonfire.Invite.Links.Web.InvitesLive.update/2","type":"function"},{"doc":"","ref":"Bonfire.Invite.Links.Web.Routes.html","title":"Bonfire.Invite.Links.Web.Routes","type":"module"},{"doc":"","ref":"Bonfire.InviteLink.html","title":"Bonfire.InviteLink","type":"module"},{"doc":"","ref":"Bonfire.InviteLink.html#changeset/2","title":"Bonfire.InviteLink.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Invites.Link.Migration.html","title":"Bonfire.Invites.Link.Migration","type":"module"},{"doc":"","ref":"Bonfire.Invites.Link.Migration.html#down/0","title":"Bonfire.Invites.Link.Migration.down/0","type":"function"},{"doc":"","ref":"Bonfire.Invites.Link.Migration.html#up/0","title":"Bonfire.Invites.Link.Migration.up/0","type":"function"},{"doc":"Runs at compile-time to include dynamic strings (like verb names and object types) in localisation string extraction.","ref":"Bonfire.Localise.html","title":"Bonfire.Localise","type":"module"},{"doc":"","ref":"Bonfire.Me.API.GraphQL.html","title":"Bonfire.Me.API.GraphQL","type":"module"},{"doc":"","ref":"Bonfire.Me.API.GraphQL.html#account_users/3","title":"Bonfire.Me.API.GraphQL.account_users/3","type":"function"},{"doc":"","ref":"Bonfire.Me.API.GraphQL.html#icon/3","title":"Bonfire.Me.API.GraphQL.icon/3","type":"function"},{"doc":"","ref":"Bonfire.Me.API.GraphQL.html#image/3","title":"Bonfire.Me.API.GraphQL.image/3","type":"function"},{"doc":"","ref":"Bonfire.Me.API.GraphQL.html#maybe_upload/3","title":"Bonfire.Me.API.GraphQL.maybe_upload/3","type":"function"},{"doc":"","ref":"Bonfire.Me.API.GraphQL.html#update_user/2","title":"Bonfire.Me.API.GraphQL.update_user/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html","title":"Bonfire.Me.Accounts","type":"module"},{"doc":"","ref":"Bonfire.Me.Accounts.html#allow_signup?/1","title":"Bonfire.Me.Accounts.allow_signup?/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#change_password/3","title":"Bonfire.Me.Accounts.change_password/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#change_password/4","title":"Bonfire.Me.Accounts.change_password/4","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#changeset/3","title":"Bonfire.Me.Accounts.changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#confirm_email/2","title":"Bonfire.Me.Accounts.confirm_email/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#count/0","title":"Bonfire.Me.Accounts.count/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#delete/2","title":"Bonfire.Me.Accounts.delete/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#fetch_current/1","title":"Bonfire.Me.Accounts.fetch_current/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#get_by_email/1","title":"Bonfire.Me.Accounts.get_by_email/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#get_current/1","title":"Bonfire.Me.Accounts.get_current/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#instance_is_invite_only?/0","title":"Bonfire.Me.Accounts.instance_is_invite_only?/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#is_first_account?/0","title":"Bonfire.Me.Accounts.is_first_account?/0","type":"function"},{"doc":"Attempts to log in by password and either username or email. Accepts a map of parameters or a LoginFields changeset. On success, returns {:ok, account, user} if a username was provided and {:ok, account, nil} otherwise. On error, returns {:error, changeset}","ref":"Bonfire.Me.Accounts.html#login/2","title":"Bonfire.Me.Accounts.login/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#maybe_redeem_invite/2","title":"Bonfire.Me.Accounts.maybe_redeem_invite/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#redeemable_invite?/1","title":"Bonfire.Me.Accounts.redeemable_invite?/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#request_confirm_email/2","title":"Bonfire.Me.Accounts.request_confirm_email/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#request_forgot_password/1","title":"Bonfire.Me.Accounts.request_forgot_password/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#signup/2","title":"Bonfire.Me.Accounts.signup/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.html#t:changeset_name/0","title":"Bonfire.Me.Accounts.changeset_name/0","type":"type"},{"doc":"","ref":"Bonfire.Me.Accounts.ChangePasswordFields.html","title":"Bonfire.Me.Accounts.ChangePasswordFields","type":"module"},{"doc":"","ref":"Bonfire.Me.Accounts.ChangePasswordFields.html#changeset/3","title":"Bonfire.Me.Accounts.ChangePasswordFields.changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.ConfirmEmailFields.html","title":"Bonfire.Me.Accounts.ConfirmEmailFields","type":"module"},{"doc":"","ref":"Bonfire.Me.Accounts.ConfirmEmailFields.html#changeset/2","title":"Bonfire.Me.Accounts.ConfirmEmailFields.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.ForgotPasswordFields.html","title":"Bonfire.Me.Accounts.ForgotPasswordFields","type":"module"},{"doc":"","ref":"Bonfire.Me.Accounts.ForgotPasswordFields.html#changeset/2","title":"Bonfire.Me.Accounts.ForgotPasswordFields.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.LoginFields.html","title":"Bonfire.Me.Accounts.LoginFields","type":"module"},{"doc":"","ref":"Bonfire.Me.Accounts.LoginFields.html#changeset/2","title":"Bonfire.Me.Accounts.LoginFields.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.Queries.html","title":"Bonfire.Me.Accounts.Queries","type":"module"},{"doc":"","ref":"Bonfire.Me.Accounts.Queries.html#by_email/1","title":"Bonfire.Me.Accounts.Queries.by_email/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.Queries.html#confirm_email/1","title":"Bonfire.Me.Accounts.Queries.confirm_email/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.Queries.html#count/1","title":"Bonfire.Me.Accounts.Queries.count/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.Queries.html#current/1","title":"Bonfire.Me.Accounts.Queries.current/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.Queries.html#login_by_email/1","title":"Bonfire.Me.Accounts.Queries.login_by_email/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.Queries.html#login_by_username/1","title":"Bonfire.Me.Accounts.Queries.login_by_username/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.Queries.html#request_confirm_email/1","title":"Bonfire.Me.Accounts.Queries.request_confirm_email/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.SecondFactors.html","title":"Bonfire.Me.Accounts.SecondFactors","type":"module"},{"doc":"Sets or updates the TOTP secret. The secret is a random 20 bytes binary that is used to generate the QR Code to enable 2FA using auth applications. It will only be updated if the OTP code sent is valid. Examples iex&gt; changeset ( % AuthSecondFactor { secret : &lt;&lt; ... &gt;&gt; } , code : &quot;123456&quot; ) % Ecto.Changeset { data : % AuthSecondFactor { } }","ref":"Bonfire.Me.Accounts.SecondFactors.html#changeset/3","title":"Bonfire.Me.Accounts.SecondFactors.changeset/3","type":"function"},{"doc":"Disables the TOTP configuration for the given account.","ref":"Bonfire.Me.Accounts.SecondFactors.html#delete_account_totp/1","title":"Bonfire.Me.Accounts.SecondFactors.delete_account_totp/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.SecondFactors.html#enabled?/0","title":"Bonfire.Me.Accounts.SecondFactors.enabled?/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.SecondFactors.html#format_secret/1","title":"Bonfire.Me.Accounts.SecondFactors.format_secret/1","type":"function"},{"doc":"Gets the %AuthSecondFactor{} entry, if any.","ref":"Bonfire.Me.Accounts.SecondFactors.html#get_account_totp/1","title":"Bonfire.Me.Accounts.SecondFactors.get_account_totp/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.SecondFactors.html#maybe_authenticate/2","title":"Bonfire.Me.Accounts.SecondFactors.maybe_authenticate/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.SecondFactors.html#maybe_cast_totp_changeset/3","title":"Bonfire.Me.Accounts.SecondFactors.maybe_cast_totp_changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.SecondFactors.html#new/0","title":"Bonfire.Me.Accounts.SecondFactors.new/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.SecondFactors.html#new_qrcode/1","title":"Bonfire.Me.Accounts.SecondFactors.new_qrcode/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.SecondFactors.html#new_struct/1","title":"Bonfire.Me.Accounts.SecondFactors.new_struct/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Accounts.SecondFactors.html#new_uri/1","title":"Bonfire.Me.Accounts.SecondFactors.new_uri/1","type":"function"},{"doc":"Validates if the given TOTP code is valid.","ref":"Bonfire.Me.Accounts.SecondFactors.html#validate_account_totp/2","title":"Bonfire.Me.Accounts.SecondFactors.validate_account_totp/2","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Me.ChannelCase.html","title":"Bonfire.Me.ChannelCase","type":"module"},{"doc":"","ref":"Bonfire.Me.Characters.html","title":"Bonfire.Me.Characters","type":"module"},{"doc":"","ref":"Bonfire.Me.Characters.html#by_username/1","title":"Bonfire.Me.Characters.by_username/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#by_username_q/1","title":"Bonfire.Me.Characters.by_username_q/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#changeset/3","title":"Bonfire.Me.Characters.changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#character_mention_prefix/1","title":"Bonfire.Me.Characters.character_mention_prefix/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#character_url/1","title":"Bonfire.Me.Characters.character_url/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#clean_username/1","title":"Bonfire.Me.Characters.clean_username/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#context_module/0","title":"Bonfire.Me.Characters.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#display_username/4","title":"Bonfire.Me.Characters.display_username/4","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#get/1","title":"Bonfire.Me.Characters.get/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#hash_available?/1","title":"Bonfire.Me.Characters.hash_available?/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#hash_delete/1","title":"Bonfire.Me.Characters.hash_delete/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#indexing_object_format/1","title":"Bonfire.Me.Characters.indexing_object_format/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#q_by_id/1","title":"Bonfire.Me.Characters.q_by_id/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#remote_changeset/2","title":"Bonfire.Me.Characters.remote_changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Characters.html#username_available?/1","title":"Bonfire.Me.Characters.username_available?/1","type":"function"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Me.ConnCase.html","title":"Bonfire.Me.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.Me.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Me.DataCase.html","title":"Bonfire.Me.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.Me.DataCase.html#errors_on/1","title":"Bonfire.Me.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.Me.DataHelpers.html","title":"Bonfire.Me.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.Me.DeleteWorker.html","title":"Bonfire.Me.DeleteWorker","type":"module"},{"doc":"","ref":"Bonfire.Me.DeleteWorker.html#closure/1","title":"Bonfire.Me.DeleteWorker.closure/1","type":"function"},{"doc":"","ref":"Bonfire.Me.DeleteWorker.html#enqueue/2","title":"Bonfire.Me.DeleteWorker.enqueue/2","type":"function"},{"doc":"","ref":"Bonfire.Me.DeleteWorker.html#job/2","title":"Bonfire.Me.DeleteWorker.job/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.html","title":"Bonfire.Me.Fake","type":"module"},{"doc":"","ref":"Bonfire.Me.Fake.html#fake_account!/2","title":"Bonfire.Me.Fake.fake_account!/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.html#fake_user!/2","title":"Bonfire.Me.Fake.fake_user!/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.Helpers.html","title":"Bonfire.Me.Fake.Helpers","type":"module"},{"doc":"","ref":"Bonfire.Me.Fake.Helpers.html#atusername/0","title":"Bonfire.Me.Fake.Helpers.atusername/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.Helpers.html#avatar_url/0","title":"Bonfire.Me.Fake.Helpers.avatar_url/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.Helpers.html#avatar_url/1","title":"Bonfire.Me.Fake.Helpers.avatar_url/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.Helpers.html#character_subform/1","title":"Bonfire.Me.Fake.Helpers.character_subform/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.Helpers.html#confirm_token/0","title":"Bonfire.Me.Fake.Helpers.confirm_token/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.Helpers.html#create_user_form/1","title":"Bonfire.Me.Fake.Helpers.create_user_form/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.Helpers.html#credential_subform/1","title":"Bonfire.Me.Fake.Helpers.credential_subform/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.Helpers.html#email/0","title":"Bonfire.Me.Fake.Helpers.email/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.Helpers.html#email_subform/1","title":"Bonfire.Me.Fake.Helpers.email_subform/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.Helpers.html#icon_url/1","title":"Bonfire.Me.Fake.Helpers.icon_url/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.Helpers.html#image/1","title":"Bonfire.Me.Fake.Helpers.image/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.Helpers.html#image_url/1","title":"Bonfire.Me.Fake.Helpers.image_url/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.Helpers.html#location/0","title":"Bonfire.Me.Fake.Helpers.location/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.Helpers.html#name/0","title":"Bonfire.Me.Fake.Helpers.name/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.Helpers.html#password/0","title":"Bonfire.Me.Fake.Helpers.password/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.Helpers.html#profile_subform/1","title":"Bonfire.Me.Fake.Helpers.profile_subform/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.Helpers.html#signup_form/1","title":"Bonfire.Me.Fake.Helpers.signup_form/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.Helpers.html#summary/0","title":"Bonfire.Me.Fake.Helpers.summary/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.Helpers.html#user_live/1","title":"Bonfire.Me.Fake.Helpers.user_live/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.Helpers.html#username/0","title":"Bonfire.Me.Fake.Helpers.username/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Fake.Helpers.html#website/0","title":"Bonfire.Me.Fake.Helpers.website/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Integration.html","title":"Bonfire.Me.Integration","type":"module"},{"doc":"","ref":"Bonfire.Me.Integration.html#indexing_format_created/2","title":"Bonfire.Me.Integration.indexing_format_created/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Integration.html#indexing_format_creator/2","title":"Bonfire.Me.Integration.indexing_format_creator/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Integration.html#is_local?/1","title":"Bonfire.Me.Integration.is_local?/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Integration.html#mailer/0","title":"Bonfire.Me.Integration.mailer/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Integration.html#maybe_index/1","title":"Bonfire.Me.Integration.maybe_index/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Integration.html#repo/0","title":"Bonfire.Me.Integration.repo/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Mails.html","title":"Bonfire.Me.Mails","type":"module"},{"doc":"","ref":"Bonfire.Me.Mails.html#confirm_email/2","title":"Bonfire.Me.Mails.confirm_email/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Mails.html#forgot_password/1","title":"Bonfire.Me.Mails.forgot_password/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Mails.html#render/3","title":"Bonfire.Me.Mails.render/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Mails.html#signup_confirm_email/1","title":"Bonfire.Me.Mails.signup_confirm_email/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Mails.EmailView.html","title":"Bonfire.Me.Mails.EmailView","type":"module"},{"doc":"","ref":"Bonfire.Me.Mails.EmailView.html#render_template/2","title":"Bonfire.Me.Mails.EmailView.render_template/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Migrations.html","title":"Bonfire.Me.Migrations","type":"module"},{"doc":"","ref":"Bonfire.Me.Migrations.html#migrate_me/0","title":"Bonfire.Me.Migrations.migrate_me/0","type":"macro"},{"doc":"","ref":"Bonfire.Me.Migrations.html#migrate_me/1","title":"Bonfire.Me.Migrations.migrate_me/1","type":"macro"},{"doc":"","ref":"Bonfire.Me.Profiles.html","title":"Bonfire.Me.Profiles","type":"module"},{"doc":"","ref":"Bonfire.Me.Profiles.html#changeset/2","title":"Bonfire.Me.Profiles.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Profiles.html#context_module/0","title":"Bonfire.Me.Profiles.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Profiles.html#indexing_object_format/1","title":"Bonfire.Me.Profiles.indexing_object_format/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Profiles.LiveHandler.html","title":"Bonfire.Me.Profiles.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Me.Profiles.LiveHandler.html#handle_event/3","title":"Bonfire.Me.Profiles.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Me.RuntimeConfig.html","title":"Bonfire.Me.RuntimeConfig","type":"module"},{"doc":"","ref":"Bonfire.Me.RuntimeConfig.html#config/0","title":"Bonfire.Me.RuntimeConfig.config/0","type":"function"},{"doc":"","ref":"Bonfire.Me.RuntimeConfig.html#config_module/0","title":"Bonfire.Me.RuntimeConfig.config_module/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Settings.html","title":"Bonfire.Me.Settings","type":"module"},{"doc":"","ref":"Bonfire.Me.Settings.html#do_set/2","title":"Bonfire.Me.Settings.do_set/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Settings.html#fetch/1","title":"Bonfire.Me.Settings.fetch/1","type":"function"},{"doc":"Fetch all config &amp; settings, both from Mix.Config and DB. Order matters!","ref":"Bonfire.Me.Settings.html#fetch_all_scopes/2","title":"Bonfire.Me.Settings.fetch_all_scopes/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Settings.html#get!/2","title":"Bonfire.Me.Settings.get!/2","type":"function"},{"doc":"Get config value for a config key (optionally from a specific OTP app or Bonfire extension) These two calls have the same result (i.e. specifying a module as the first key will add the OTP app of that module as the first key): get([:bonfire_me, Bonfire.Me.Users]) get(Bonfire.Me.Users) Same with these two (i.e. not specifying a module or app as the first key will default to the main OTP app): get([:random_atom, :sub_key]) get([:bonfire, :random_atom, :sub_key])","ref":"Bonfire.Me.Settings.html#get/3","title":"Bonfire.Me.Settings.get/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Settings.html#get_all_ext!/2","title":"Bonfire.Me.Settings.get_all_ext!/2","type":"function"},{"doc":"Get all config keys/values for a Bonfire extension or OTP app","ref":"Bonfire.Me.Settings.html#get_all_ext/2","title":"Bonfire.Me.Settings.get_all_ext/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Settings.html#load_instance_settings/0","title":"Bonfire.Me.Settings.load_instance_settings/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Settings.html#map_put_in/3","title":"Bonfire.Me.Settings.map_put_in/3","type":"function"},{"doc":"Put a setting using a key like :key or list of nested keys like [:top_key, :sub_key]","ref":"Bonfire.Me.Settings.html#put/3","title":"Bonfire.Me.Settings.put/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Settings.html#scoped_object/2","title":"Bonfire.Me.Settings.scoped_object/2","type":"function"},{"doc":"Set several settings at once. Accepts nested attributes as map with string keys (which are transformed into keyword list), or a keyword list. Determines what scope to use &amp; sets/updates settings for it.","ref":"Bonfire.Me.Settings.html#set/2","title":"Bonfire.Me.Settings.set/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Settings.html#set/3","title":"Bonfire.Me.Settings.set/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Settings.LiveHandler.html","title":"Bonfire.Me.Settings.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Me.Settings.LiveHandler.html#handle_event/3","title":"Bonfire.Me.Settings.LiveHandler.handle_event/3","type":"function"},{"doc":"Loads instance Settings from DB into Elixir's Config While this module is a GenServer, it is only responsible for querying the settings, putting them in Config, and then exits with :ignore having done so.","ref":"Bonfire.Me.Settings.LoadInstanceConfig.html","title":"Bonfire.Me.Settings.LoadInstanceConfig","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Bonfire.Me.Settings.LoadInstanceConfig.html#child_spec/1","title":"Bonfire.Me.Settings.LoadInstanceConfig.child_spec/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Settings.LoadInstanceConfig.html#load_config/0","title":"Bonfire.Me.Settings.LoadInstanceConfig.load_config/0","type":"function"},{"doc":"Populates the global cache with table data via introspection.","ref":"Bonfire.Me.Settings.LoadInstanceConfig.html#start_link/1","title":"Bonfire.Me.Settings.LoadInstanceConfig.start_link/1","type":"function"},{"doc":"","ref":"Bonfire.Me.SharedUsers.html","title":"Bonfire.Me.SharedUsers","type":"module"},{"doc":"","ref":"Bonfire.Me.SharedUsers.html#add_account/3","title":"Bonfire.Me.SharedUsers.add_account/3","type":"function"},{"doc":"","ref":"Bonfire.Me.SharedUsers.html#add_accounts/3","title":"Bonfire.Me.SharedUsers.add_accounts/3","type":"function"},{"doc":"","ref":"Bonfire.Me.SharedUsers.html#by_account/1","title":"Bonfire.Me.SharedUsers.by_account/1","type":"function"},{"doc":"","ref":"Bonfire.Me.SharedUsers.html#by_username_and_account_query/2","title":"Bonfire.Me.SharedUsers.by_username_and_account_query/2","type":"function"},{"doc":"","ref":"Bonfire.Me.SharedUsers.html#federation_module/0","title":"Bonfire.Me.SharedUsers.federation_module/0","type":"function"},{"doc":"","ref":"Bonfire.Me.SharedUsers.html#init_shared_user/2","title":"Bonfire.Me.SharedUsers.init_shared_user/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Test.ConnHelpers.html","title":"Bonfire.Me.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.Me.Test.FakeHelpers.html","title":"Bonfire.Me.Test.FakeHelpers","type":"module"},{"doc":"","ref":"Bonfire.Me.Users.html","title":"Bonfire.Me.Users","type":"module"},{"doc":"","ref":"Bonfire.Me.Users.html#ap_receive_activity/3","title":"Bonfire.Me.Users.ap_receive_activity/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#by_account/1","title":"Bonfire.Me.Users.by_account/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#by_ap_id!/1","title":"Bonfire.Me.Users.by_ap_id!/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#by_ap_id/1","title":"Bonfire.Me.Users.by_ap_id/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#by_id/2","title":"Bonfire.Me.Users.by_id/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#by_username!/1","title":"Bonfire.Me.Users.by_username!/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#by_username/1","title":"Bonfire.Me.Users.by_username/1","type":"function"},{"doc":"Used for switch-user functionality","ref":"Bonfire.Me.Users.html#by_username_and_account/2","title":"Bonfire.Me.Users.by_username_and_account/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#changeset/4","title":"Bonfire.Me.Users.changeset/4","type":"function"},{"doc":"A User is a logical identity within the system belonging to an Account.","ref":"Bonfire.Me.Users.html#context_module/0","title":"Bonfire.Me.Users.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#count/1","title":"Bonfire.Me.Users.count/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#create/2","title":"Bonfire.Me.Users.create/2","type":"function"},{"doc":"Creates a remote user","ref":"Bonfire.Me.Users.html#create_remote/1","title":"Bonfire.Me.Users.create_remote/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#delete/2","title":"Bonfire.Me.Users.delete/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#federation_module/0","title":"Bonfire.Me.Users.federation_module/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#fetch_current/1","title":"Bonfire.Me.Users.fetch_current/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#flatten/1","title":"Bonfire.Me.Users.flatten/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#format_actor/1","title":"Bonfire.Me.Users.format_actor/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#get_current/1","title":"Bonfire.Me.Users.get_current/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#get_only_in_account/1","title":"Bonfire.Me.Users.get_only_in_account/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#indexing_object_format/1","title":"Bonfire.Me.Users.indexing_object_format/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#is_admin?/1","title":"Bonfire.Me.Users.is_admin?/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#is_first_user?/0","title":"Bonfire.Me.Users.is_first_user?/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#list/1","title":"Bonfire.Me.Users.list/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#list_admins/0","title":"Bonfire.Me.Users.list_admins/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#list_all/1","title":"Bonfire.Me.Users.list_all/1","type":"function"},{"doc":"Grants a user superpowers.","ref":"Bonfire.Me.Users.html#make_admin/1","title":"Bonfire.Me.Users.make_admin/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#maybe_count/1","title":"Bonfire.Me.Users.maybe_count/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#maybe_index_user/1","title":"Bonfire.Me.Users.maybe_index_user/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#query/2","title":"Bonfire.Me.Users.query/2","type":"function"},{"doc":"Revokes a user's superpowers.","ref":"Bonfire.Me.Users.html#revoke_admin/1","title":"Bonfire.Me.Users.revoke_admin/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#search/1","title":"Bonfire.Me.Users.search/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#search_db/1","title":"Bonfire.Me.Users.search_db/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#update/3","title":"Bonfire.Me.Users.update/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#update_local_actor/2","title":"Bonfire.Me.Users.update_local_actor/2","type":"function"},{"doc":"Updates a remote user","ref":"Bonfire.Me.Users.html#update_remote/2","title":"Bonfire.Me.Users.update_remote/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.html#t:changeset_extra/0","title":"Bonfire.Me.Users.changeset_extra/0","type":"type"},{"doc":"","ref":"Bonfire.Me.Users.html#t:changeset_name/0","title":"Bonfire.Me.Users.changeset_name/0","type":"type"},{"doc":"","ref":"Bonfire.Me.Users.LiveHandler.html","title":"Bonfire.Me.Users.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Me.Users.LiveHandler.html#handle_event/3","title":"Bonfire.Me.Users.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.LiveHandler.html#to_tuple/1","title":"Bonfire.Me.Users.LiveHandler.to_tuple/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html","title":"Bonfire.Me.Users.Queries","type":"module"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html#admins/1","title":"Bonfire.Me.Users.Queries.admins/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html#by_account/1","title":"Bonfire.Me.Users.Queries.by_account/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html#by_id/2","title":"Bonfire.Me.Users.Queries.by_id/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html#by_username_and_account/2","title":"Bonfire.Me.Users.Queries.by_username_and_account/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html#by_username_or_id/2","title":"Bonfire.Me.Users.Queries.by_username_or_id/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html#by_username_query/2","title":"Bonfire.Me.Users.Queries.by_username_query/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html#count/1","title":"Bonfire.Me.Users.Queries.count/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html#current/1","title":"Bonfire.Me.Users.Queries.current/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html#join_peered/1","title":"Bonfire.Me.Users.Queries.join_peered/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html#list/1","title":"Bonfire.Me.Users.Queries.list/1","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html#queries_module/0","title":"Bonfire.Me.Users.Queries.queries_module/0","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html#query/2","title":"Bonfire.Me.Users.Queries.query/2","type":"function"},{"doc":"","ref":"Bonfire.Me.Users.Queries.html#search/1","title":"Bonfire.Me.Users.Queries.search/1","type":"function"},{"doc":"","ref":"Bonfire.ObanLogger.html","title":"Bonfire.ObanLogger","type":"module"},{"doc":"","ref":"Bonfire.ObanLogger.html#handle_event/4","title":"Bonfire.ObanLogger.handle_event/4","type":"function"},{"doc":"","ref":"Bonfire.ObanLogger.html#setup/0","title":"Bonfire.ObanLogger.setup/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.html","title":"Bonfire.Quantify","type":"module"},{"doc":"","ref":"Bonfire.Quantify.html#is_admin?/1","title":"Bonfire.Quantify.is_admin?/1","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Quantify.ChannelCase.html","title":"Bonfire.Quantify.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Quantify.ConnCase.html","title":"Bonfire.Quantify.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.Quantify.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Quantify.DataCase.html","title":"Bonfire.Quantify.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.Quantify.DataCase.html#errors_on/1","title":"Bonfire.Quantify.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.DataHelpers.html","title":"Bonfire.Quantify.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.Quantify.Hydration.html","title":"Bonfire.Quantify.Hydration","type":"module"},{"doc":"","ref":"Bonfire.Quantify.Hydration.html#hydrate/0","title":"Bonfire.Quantify.Hydration.hydrate/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measure.html","title":"Bonfire.Quantify.Measure","type":"module"},{"doc":"Copy the attributes of a measure required to create a new one.","ref":"Bonfire.Quantify.Measure.html#copy/1","title":"Bonfire.Quantify.Measure.copy/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measure.html#create_changeset/3","title":"Bonfire.Quantify.Measure.create_changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measure.html#update_changeset/2","title":"Bonfire.Quantify.Measure.update_changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measure.html#validate_changeset/2","title":"Bonfire.Quantify.Measure.validate_changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measure.html#t:t/0","title":"Bonfire.Quantify.Measure.t/0","type":"type"},{"doc":"","ref":"Bonfire.Quantify.Measures.html","title":"Bonfire.Quantify.Measures","type":"module"},{"doc":"","ref":"Bonfire.Quantify.Measures.html#ap_publish_activity/2","title":"Bonfire.Quantify.Measures.ap_publish_activity/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.html#ap_receive_activity/3","title":"Bonfire.Quantify.Measures.ap_receive_activity/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.html#create/2","title":"Bonfire.Quantify.Measures.create/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.html#create/3","title":"Bonfire.Quantify.Measures.create/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.html#cursor/0","title":"Bonfire.Quantify.Measures.cursor/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.html#federation_module/0","title":"Bonfire.Quantify.Measures.federation_module/0","type":"function"},{"doc":"Retrieves a list of collections by arbitrary filters. Used by: Various parts of the codebase that need to query for collections (inc. tests)","ref":"Bonfire.Quantify.Measures.html#many/1","title":"Bonfire.Quantify.Measures.many/1","type":"function"},{"doc":"Retrieves a single collection by arbitrary filters. Used by: GraphQL Item queries ActivityPub integration Various parts of the codebase that need to query for collections (inc. tests)","ref":"Bonfire.Quantify.Measures.html#one/1","title":"Bonfire.Quantify.Measures.one/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.html#test_cursor/0","title":"Bonfire.Quantify.Measures.test_cursor/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.html#update/2","title":"Bonfire.Quantify.Measures.update/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.GraphQL.html","title":"Bonfire.Quantify.Measures.GraphQL","type":"module"},{"doc":"","ref":"Bonfire.Quantify.Measures.GraphQL.html#create_measure/2","title":"Bonfire.Quantify.Measures.GraphQL.create_measure/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.GraphQL.html#create_measures/3","title":"Bonfire.Quantify.Measures.GraphQL.create_measures/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.GraphQL.html#fetch_has_unit_edge/2","title":"Bonfire.Quantify.Measures.GraphQL.fetch_has_unit_edge/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.GraphQL.html#fetch_measure/2","title":"Bonfire.Quantify.Measures.GraphQL.fetch_measure/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.GraphQL.html#fetch_measures/2","title":"Bonfire.Quantify.Measures.GraphQL.fetch_measures/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.GraphQL.html#fields/2","title":"Bonfire.Quantify.Measures.GraphQL.fields/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.GraphQL.html#has_unit_edge/3","title":"Bonfire.Quantify.Measures.GraphQL.has_unit_edge/3","type":"function"},{"doc":"Iterate over a set of elements in a map calling func . func is expected to return either one of {:ok, val} or {:error, reason} . If {:error, reason} is returned, iteration halts.","ref":"Bonfire.Quantify.Measures.GraphQL.html#map_ok_error/2","title":"Bonfire.Quantify.Measures.GraphQL.map_ok_error/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.GraphQL.html#measure/2","title":"Bonfire.Quantify.Measures.GraphQL.measure/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.GraphQL.html#measures_pages/2","title":"Bonfire.Quantify.Measures.GraphQL.measures_pages/2","type":"function"},{"doc":"Retrieves an Page of units according to various filters Used by: GraphQL resolver single-parent resolution","ref":"Bonfire.Quantify.Measures.GraphQL.html#page/5","title":"Bonfire.Quantify.Measures.GraphQL.page/5","type":"function"},{"doc":"Retrieves an Pages of units according to various filters Used by: GraphQL resolver bulk resolution","ref":"Bonfire.Quantify.Measures.GraphQL.html#pages/6","title":"Bonfire.Quantify.Measures.GraphQL.pages/6","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.GraphQL.html#update_measure/2","title":"Bonfire.Quantify.Measures.GraphQL.update_measure/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.GraphQL.html#update_measures/3","title":"Bonfire.Quantify.Measures.GraphQL.update_measures/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.Queries.html","title":"Bonfire.Quantify.Measures.Queries","type":"module"},{"doc":"","ref":"Bonfire.Quantify.Measures.Queries.html#filter/2","title":"Bonfire.Quantify.Measures.Queries.filter/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.Queries.html#inc_quantity/2","title":"Bonfire.Quantify.Measures.Queries.inc_quantity/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.Queries.html#join_to/3","title":"Bonfire.Quantify.Measures.Queries.join_to/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.Queries.html#queries/5","title":"Bonfire.Quantify.Measures.Queries.queries/5","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.Queries.html#query/1","title":"Bonfire.Quantify.Measures.Queries.query/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Measures.Queries.html#query/2","title":"Bonfire.Quantify.Measures.Queries.query/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Migrations.html","title":"Bonfire.Quantify.Migrations","type":"module"},{"doc":"","ref":"Bonfire.Quantify.Migrations.html#change/0","title":"Bonfire.Quantify.Migrations.change/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Migrations.html#change_measure/0","title":"Bonfire.Quantify.Migrations.change_measure/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Simulate.html","title":"Bonfire.Quantify.Simulate","type":"module"},{"doc":"","ref":"Bonfire.Quantify.Simulate.html#fake_measure!/3","title":"Bonfire.Quantify.Simulate.fake_measure!/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Simulate.html#fake_unit!/3","title":"Bonfire.Quantify.Simulate.fake_unit!/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Simulate.html#measure/1","title":"Bonfire.Quantify.Simulate.measure/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Simulate.html#measure_input/2","title":"Bonfire.Quantify.Simulate.measure_input/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Simulate.html#unit/1","title":"Bonfire.Quantify.Simulate.unit/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Simulate.html#unit_input/1","title":"Bonfire.Quantify.Simulate.unit_input/1","type":"function"},{"doc":"A unit","ref":"Bonfire.Quantify.Simulate.html#unit_name/0","title":"Bonfire.Quantify.Simulate.unit_name/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Simulate.html#unit_symbol/0","title":"Bonfire.Quantify.Simulate.unit_symbol/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html","title":"Bonfire.Quantify.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#conn/0","title":"Bonfire.Quantify.Test.ConnHelpers.conn/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#extract_files/1","title":"Bonfire.Quantify.Test.ConnHelpers.extract_files/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#gql_post/4","title":"Bonfire.Quantify.Test.ConnHelpers.gql_post/4","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#gql_post_200/3","title":"Bonfire.Quantify.Test.ConnHelpers.gql_post_200/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#gql_post_data/3","title":"Bonfire.Quantify.Test.ConnHelpers.gql_post_data/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#gql_post_errors/2","title":"Bonfire.Quantify.Test.ConnHelpers.gql_post_errors/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#grumble_post_data/5","title":"Bonfire.Quantify.Test.ConnHelpers.grumble_post_data/5","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#grumble_post_errors/4","title":"Bonfire.Quantify.Test.ConnHelpers.grumble_post_errors/4","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#grumble_post_key/6","title":"Bonfire.Quantify.Test.ConnHelpers.grumble_post_key/6","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#html_conn/0","title":"Bonfire.Quantify.Test.ConnHelpers.html_conn/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#json_conn/0","title":"Bonfire.Quantify.Test.ConnHelpers.json_conn/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#plugged/1","title":"Bonfire.Quantify.Test.ConnHelpers.plugged/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#token_conn/2","title":"Bonfire.Quantify.Test.ConnHelpers.token_conn/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#user_conn/2","title":"Bonfire.Quantify.Test.ConnHelpers.user_conn/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#with_accept_html/1","title":"Bonfire.Quantify.Test.ConnHelpers.with_accept_html/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#with_accept_json/1","title":"Bonfire.Quantify.Test.ConnHelpers.with_accept_json/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#with_authorization/2","title":"Bonfire.Quantify.Test.ConnHelpers.with_authorization/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#with_method/2","title":"Bonfire.Quantify.Test.ConnHelpers.with_method/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#with_params/2","title":"Bonfire.Quantify.Test.ConnHelpers.with_params/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#with_request_json/1","title":"Bonfire.Quantify.Test.ConnHelpers.with_request_json/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Test.ConnHelpers.html#with_user/2","title":"Bonfire.Quantify.Test.ConnHelpers.with_user/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Unit.html","title":"Bonfire.Quantify.Unit","type":"module"},{"doc":"","ref":"Bonfire.Quantify.Unit.html#create_changeset/2","title":"Bonfire.Quantify.Unit.create_changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Unit.html#create_changeset/3","title":"Bonfire.Quantify.Unit.create_changeset/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Unit.html#update_changeset/2","title":"Bonfire.Quantify.Unit.update_changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Unit.html#t:t/0","title":"Bonfire.Quantify.Unit.t/0","type":"type"},{"doc":"","ref":"Bonfire.Quantify.Units.html","title":"Bonfire.Quantify.Units","type":"module"},{"doc":"","ref":"Bonfire.Quantify.Units.html#ap_publish_activity/2","title":"Bonfire.Quantify.Units.ap_publish_activity/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.html#ap_receive_activity/3","title":"Bonfire.Quantify.Units.ap_receive_activity/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.html#create/2","title":"Bonfire.Quantify.Units.create/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.html#create/3","title":"Bonfire.Quantify.Units.create/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.html#cursor/0","title":"Bonfire.Quantify.Units.cursor/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.html#federation_module/0","title":"Bonfire.Quantify.Units.federation_module/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.html#get_or_create/2","title":"Bonfire.Quantify.Units.get_or_create/2","type":"function"},{"doc":"Retrieves a list of collections by arbitrary filters. Used by: Various parts of the codebase that need to query for collections (inc. tests)","ref":"Bonfire.Quantify.Units.html#many/1","title":"Bonfire.Quantify.Units.many/1","type":"function"},{"doc":"Retrieves a single collection by arbitrary filters. Used by: Item queries ActivityPub integration Various parts of the codebase that need to query for collections (inc. tests)","ref":"Bonfire.Quantify.Units.html#one/1","title":"Bonfire.Quantify.Units.one/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.html#soft_delete/1","title":"Bonfire.Quantify.Units.soft_delete/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.html#test_cursor/0","title":"Bonfire.Quantify.Units.test_cursor/0","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.html#update/2","title":"Bonfire.Quantify.Units.update/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.GraphQL.html","title":"Bonfire.Quantify.Units.GraphQL","type":"module"},{"doc":"","ref":"Bonfire.Quantify.Units.GraphQL.html#all_units/2","title":"Bonfire.Quantify.Units.GraphQL.all_units/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.GraphQL.html#create_unit/2","title":"Bonfire.Quantify.Units.GraphQL.create_unit/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.GraphQL.html#delete_unit/2","title":"Bonfire.Quantify.Units.GraphQL.delete_unit/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.GraphQL.html#fetch_unit/2","title":"Bonfire.Quantify.Units.GraphQL.fetch_unit/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.GraphQL.html#fetch_units/2","title":"Bonfire.Quantify.Units.GraphQL.fetch_units/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.GraphQL.html#fields/2","title":"Bonfire.Quantify.Units.GraphQL.fields/2","type":"function"},{"doc":"Retrieves an Page of units according to various filters Used by: GraphQL resolver single-parent resolution","ref":"Bonfire.Quantify.Units.GraphQL.html#page/5","title":"Bonfire.Quantify.Units.GraphQL.page/5","type":"function"},{"doc":"Retrieves an Pages of units according to various filters Used by: GraphQL resolver bulk resolution","ref":"Bonfire.Quantify.Units.GraphQL.html#pages/6","title":"Bonfire.Quantify.Units.GraphQL.pages/6","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.GraphQL.html#unit/2","title":"Bonfire.Quantify.Units.GraphQL.unit/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.GraphQL.html#units/2","title":"Bonfire.Quantify.Units.GraphQL.units/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.GraphQL.html#update_unit/2","title":"Bonfire.Quantify.Units.GraphQL.update_unit/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.Queries.html","title":"Bonfire.Quantify.Units.Queries","type":"module"},{"doc":"","ref":"Bonfire.Quantify.Units.Queries.html#filter/2","title":"Bonfire.Quantify.Units.Queries.filter/2","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.Queries.html#join_to/3","title":"Bonfire.Quantify.Units.Queries.join_to/3","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.Queries.html#queries/5","title":"Bonfire.Quantify.Units.Queries.queries/5","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.Queries.html#query/1","title":"Bonfire.Quantify.Units.Queries.query/1","type":"function"},{"doc":"","ref":"Bonfire.Quantify.Units.Queries.html#query/2","title":"Bonfire.Quantify.Units.Queries.query/2","type":"function"},{"doc":"","ref":"Bonfire.Search.html","title":"Bonfire.Search","type":"module"},{"doc":"","ref":"Bonfire.Search.html#adapter/0","title":"Bonfire.Search.adapter/0","type":"function"},{"doc":"","ref":"Bonfire.Search.html#facet_from_map/1","title":"Bonfire.Search.facet_from_map/1","type":"function"},{"doc":"","ref":"Bonfire.Search.html#public_index/0","title":"Bonfire.Search.public_index/0","type":"function"},{"doc":"","ref":"Bonfire.Search.html#search/2","title":"Bonfire.Search.search/2","type":"function"},{"doc":"","ref":"Bonfire.Search.html#search/4","title":"Bonfire.Search.search/4","type":"function"},{"doc":"","ref":"Bonfire.Search.html#search_by_type/2","title":"Bonfire.Search.search_by_type/2","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Search.ChannelCase.html","title":"Bonfire.Search.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Search.ConnCase.html","title":"Bonfire.Search.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.Search.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Search.DataCase.html","title":"Bonfire.Search.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.Search.DataCase.html#errors_on/1","title":"Bonfire.Search.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.Search.DataHelpers.html","title":"Bonfire.Search.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.Search.Fuzzy.html","title":"Bonfire.Search.Fuzzy","type":"module"},{"doc":"","ref":"Bonfire.Search.Fuzzy.html#do_search/4","title":"Bonfire.Search.Fuzzy.do_search/4","type":"function"},{"doc":"","ref":"Bonfire.Search.Fuzzy.html#search/4","title":"Bonfire.Search.Fuzzy.search/4","type":"function"},{"doc":"","ref":"Bonfire.Search.Fuzzy.html#search_filtered/2","title":"Bonfire.Search.Fuzzy.search_filtered/2","type":"function"},{"doc":"","ref":"Bonfire.Search.HTTP.html","title":"Bonfire.Search.HTTP","type":"module"},{"doc":"","ref":"Bonfire.Search.HTTP.html#http_adapter/0","title":"Bonfire.Search.HTTP.http_adapter/0","type":"function"},{"doc":"","ref":"Bonfire.Search.HTTP.html#http_error/5","title":"Bonfire.Search.HTTP.http_error/5","type":"function"},{"doc":"","ref":"Bonfire.Search.HTTP.html#http_request/4","title":"Bonfire.Search.HTTP.http_request/4","type":"function"},{"doc":"","ref":"Bonfire.Search.Indexer.html","title":"Bonfire.Search.Indexer","type":"module"},{"doc":"","ref":"Bonfire.Search.Indexer.html#host/1","title":"Bonfire.Search.Indexer.host/1","type":"function"},{"doc":"","ref":"Bonfire.Search.Indexer.html#index_objects/3","title":"Bonfire.Search.Indexer.index_objects/3","type":"function"},{"doc":"","ref":"Bonfire.Search.Indexer.html#index_public_object/1","title":"Bonfire.Search.Indexer.index_public_object/1","type":"function"},{"doc":"","ref":"Bonfire.Search.Indexer.html#init_index/2","title":"Bonfire.Search.Indexer.init_index/2","type":"function"},{"doc":"","ref":"Bonfire.Search.Indexer.html#maybe_delete_object/2","title":"Bonfire.Search.Indexer.maybe_delete_object/2","type":"function"},{"doc":"","ref":"Bonfire.Search.Indexer.html#maybe_index_object/1","title":"Bonfire.Search.Indexer.maybe_index_object/1","type":"function"},{"doc":"","ref":"Bonfire.Search.Indexer.html#maybe_indexable_and_discoverable/2","title":"Bonfire.Search.Indexer.maybe_indexable_and_discoverable/2","type":"function"},{"doc":"","ref":"Bonfire.Search.Indexer.html#maybe_indexable_object/1","title":"Bonfire.Search.Indexer.maybe_indexable_object/1","type":"function"},{"doc":"","ref":"Bonfire.Search.LiveHandler.html","title":"Bonfire.Search.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Search.LiveHandler.html#handle_event/3","title":"Bonfire.Search.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Search.LiveHandler.html#live_search/4","title":"Bonfire.Search.LiveHandler.live_search/4","type":"function"},{"doc":"","ref":"Bonfire.Search.Meili.html","title":"Bonfire.Search.Meili","type":"module"},{"doc":"","ref":"Bonfire.Search.Meili.html#api/4","title":"Bonfire.Search.Meili.api/4","type":"function"},{"doc":"","ref":"Bonfire.Search.Meili.html#create_index/2","title":"Bonfire.Search.Meili.create_index/2","type":"function"},{"doc":"","ref":"Bonfire.Search.Meili.html#delete/3","title":"Bonfire.Search.Meili.delete/3","type":"function"},{"doc":"","ref":"Bonfire.Search.Meili.html#get/1","title":"Bonfire.Search.Meili.get/1","type":"function"},{"doc":"","ref":"Bonfire.Search.Meili.html#get/3","title":"Bonfire.Search.Meili.get/3","type":"function"},{"doc":"","ref":"Bonfire.Search.Meili.html#index_exists/1","title":"Bonfire.Search.Meili.index_exists/1","type":"function"},{"doc":"","ref":"Bonfire.Search.Meili.html#list_facets/1","title":"Bonfire.Search.Meili.list_facets/1","type":"function"},{"doc":"","ref":"Bonfire.Search.Meili.html#patch/3","title":"Bonfire.Search.Meili.patch/3","type":"function"},{"doc":"","ref":"Bonfire.Search.Meili.html#post/3","title":"Bonfire.Search.Meili.post/3","type":"function"},{"doc":"","ref":"Bonfire.Search.Meili.html#put/3","title":"Bonfire.Search.Meili.put/3","type":"function"},{"doc":"","ref":"Bonfire.Search.Meili.html#search/2","title":"Bonfire.Search.Meili.search/2","type":"function"},{"doc":"","ref":"Bonfire.Search.Meili.html#set_facets/2","title":"Bonfire.Search.Meili.set_facets/2","type":"function"},{"doc":"","ref":"Bonfire.Search.Meili.html#set_searchable_fields/2","title":"Bonfire.Search.Meili.set_searchable_fields/2","type":"function"},{"doc":"","ref":"Bonfire.Search.Meili.html#settings/2","title":"Bonfire.Search.Meili.settings/2","type":"function"},{"doc":"","ref":"Bonfire.Search.RuntimeConfig.html","title":"Bonfire.Search.RuntimeConfig","type":"module"},{"doc":"","ref":"Bonfire.Search.RuntimeConfig.html#config/0","title":"Bonfire.Search.RuntimeConfig.config/0","type":"function"},{"doc":"","ref":"Bonfire.Search.RuntimeConfig.html#config_module/0","title":"Bonfire.Search.RuntimeConfig.config_module/0","type":"function"},{"doc":"Handles matching of needs &amp; offers","ref":"Bonfire.Search.Stopwords.html","title":"Bonfire.Search.Stopwords","type":"module"},{"doc":"Filters out pre-defined stop words.","ref":"Bonfire.Search.Stopwords.html#filter/2","title":"Bonfire.Search.Stopwords.filter/2","type":"function"},{"doc":"","ref":"Bonfire.Search.Stopwords.html#split_sentences/1","title":"Bonfire.Search.Stopwords.split_sentences/1","type":"function"},{"doc":"","ref":"Bonfire.Search.Stopwords.html#split_words/1","title":"Bonfire.Search.Stopwords.split_words/1","type":"function"},{"doc":"","ref":"Bonfire.Search.Stopwords.html#stop_words/1","title":"Bonfire.Search.Stopwords.stop_words/1","type":"function"},{"doc":"","ref":"Bonfire.Search.Test.ConnHelpers.html","title":"Bonfire.Search.Test.ConnHelpers","type":"module"},{"doc":"Properties current_account :any current_user :any search :string, default: nil search_limit :integer, default: nil search_placeholder :string, default: nil search_more :any, default: nil show_more_link :boolean, default: true num_hits :integer, default: nil hits :list, default: []","ref":"Bonfire.Search.Web.FormLive.html","title":"Bonfire.Search.Web.FormLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.Search.Web.FormLive.html#render/1","title":"Bonfire.Search.Web.FormLive.render/1","type":"function"},{"doc":"Properties current_account :any current_user :any page :any, default: nil search :string, default: nil search_limit :integer, default: nil search_placeholder :string, default: nil search_more :any, default: nil show_more_link :boolean, default: true num_hits :integer, default: nil hits :list, default: []","ref":"Bonfire.Search.Web.ResultsLive.html","title":"Bonfire.Search.Web.ResultsLive","type":"module"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Bonfire.Search.Web.ResultsLive.html#render/1","title":"Bonfire.Search.Web.ResultsLive.render/1","type":"function"},{"doc":"","ref":"Bonfire.Search.Web.Routes.html","title":"Bonfire.Search.Web.Routes","type":"module"},{"doc":"Properties id :string, required: true - The id of the live view session :map - The request info necessary for the view, such as params, cookie session info, etc. The session is signed and stored on the client, then provided back to the server when the client connects, or reconnects to the stateful view. current_account :any current_user :any","ref":"Bonfire.Search.Web.SearchLive.html","title":"Bonfire.Search.Web.SearchLive","type":"module"},{"doc":"","ref":"Bonfire.Search.Web.SearchLive.html#do_handle_params/3","title":"Bonfire.Search.Web.SearchLive.do_handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_event/3 .","ref":"Bonfire.Search.Web.SearchLive.html#handle_event/3","title":"Bonfire.Search.Web.SearchLive.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.handle_params/3 .","ref":"Bonfire.Search.Web.SearchLive.html#handle_params/3","title":"Bonfire.Search.Web.SearchLive.handle_params/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.mount/3 .","ref":"Bonfire.Search.Web.SearchLive.html#mount/3","title":"Bonfire.Search.Web.SearchLive.mount/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveView.render/1 .","ref":"Bonfire.Search.Web.SearchLive.html#render/1","title":"Bonfire.Search.Web.SearchLive.render/1","type":"function"},{"doc":"A way to have data seeds that work similarly to migrations. To generate a new seed: mix phil_columns.gen.seed my_seed_name will create a new module in priv/repo/seeds To actually insert the seeds into your app, if that's not configured to be done automatically in your mix aliases, run mix phil_columns.seed To roll-back: mix phil_columns.rollback","ref":"Bonfire.Seeder.html","title":"Bonfire.Seeder","type":"module"},{"doc":"","ref":"Bonfire.Social.APActivities.html","title":"Bonfire.Social.APActivities","type":"module"},{"doc":"","ref":"Bonfire.Social.APActivities.html#create/3","title":"Bonfire.Social.APActivities.create/3","type":"function"},{"doc":"","ref":"Bonfire.Social.APActivities.html#insert/3","title":"Bonfire.Social.APActivities.insert/3","type":"function"},{"doc":"","ref":"Bonfire.Social.API.GraphQL.html","title":"Bonfire.Social.API.GraphQL","type":"module"},{"doc":"","ref":"Bonfire.Social.API.GraphQL.html#activity_object/1","title":"Bonfire.Social.API.GraphQL.activity_object/1","type":"function"},{"doc":"","ref":"Bonfire.Social.API.GraphQL.html#activity_object/3","title":"Bonfire.Social.API.GraphQL.activity_object/3","type":"function"},{"doc":"","ref":"Bonfire.Social.API.GraphQL.html#get_activity/3","title":"Bonfire.Social.API.GraphQL.get_activity/3","type":"function"},{"doc":"","ref":"Bonfire.Social.API.GraphQL.html#get_post/3","title":"Bonfire.Social.API.GraphQL.get_post/3","type":"function"},{"doc":"","ref":"Bonfire.Social.API.GraphQL.html#list_posts/3","title":"Bonfire.Social.API.GraphQL.list_posts/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html","title":"Bonfire.Social.Activities","type":"module"},{"doc":"","ref":"Bonfire.Social.Activities.html#activity_preloads/2","title":"Bonfire.Social.Activities.activity_preloads/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#activity_preloads/3","title":"Bonfire.Social.Activities.activity_preloads/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#activity_under_object/1","title":"Bonfire.Social.Activities.activity_under_object/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#activity_under_object/2","title":"Bonfire.Social.Activities.activity_under_object/2","type":"function"},{"doc":"Outputs the names all object verbs, for the purpose of adding to the localisation strings, as long as the output is piped through to localise_strings/1 at compile time.","ref":"Bonfire.Social.Activities.html#all_verb_names/0","title":"Bonfire.Social.Activities.all_verb_names/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#all_verb_names_extra/0","title":"Bonfire.Social.Activities.all_verb_names_extra/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#as_permitted_for/3","title":"Bonfire.Social.Activities.as_permitted_for/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#build_assoc/3","title":"Bonfire.Social.Activities.build_assoc/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#build_assoc/4","title":"Bonfire.Social.Activities.build_assoc/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#by_subject_verb_object_q/3","title":"Bonfire.Social.Activities.by_subject_verb_object_q/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#cast/4","title":"Bonfire.Social.Activities.cast/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#context_module/0","title":"Bonfire.Social.Activities.context_module/0","type":"function"},{"doc":"Create an Activity NOTE: you will usually want to use cast/3 instead","ref":"Bonfire.Social.Activities.html#create/4","title":"Bonfire.Social.Activities.create/4","type":"function"},{"doc":"Delete an activity (usage by things like unlike)","ref":"Bonfire.Social.Activities.html#delete_by_subject_verb_object/3","title":"Bonfire.Social.Activities.delete_by_subject_verb_object/3","type":"function"},{"doc":"Get an activity by its ID","ref":"Bonfire.Social.Activities.html#get/2","title":"Bonfire.Social.Activities.get/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#load_object/1","title":"Bonfire.Social.Activities.load_object/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#object_from_activity/1","title":"Bonfire.Social.Activities.object_from_activity/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#object_preload_activity/2","title":"Bonfire.Social.Activities.object_preload_activity/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#object_preload_create_activity/1","title":"Bonfire.Social.Activities.object_preload_create_activity/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#put_assoc/3","title":"Bonfire.Social.Activities.put_assoc/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#put_assoc/4","title":"Bonfire.Social.Activities.put_assoc/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#queries_module/0","title":"Bonfire.Social.Activities.queries_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#query/2","title":"Bonfire.Social.Activities.query/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#query_object_preload_activity/4","title":"Bonfire.Social.Activities.query_object_preload_activity/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#query_object_preload_create_activity/2","title":"Bonfire.Social.Activities.query_object_preload_create_activity/2","type":"function"},{"doc":"Get an activity by its object ID (usually a create activity)","ref":"Bonfire.Social.Activities.html#read/2","title":"Bonfire.Social.Activities.read/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#verb_congugate/1","title":"Bonfire.Social.Activities.verb_congugate/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#verb_display/1","title":"Bonfire.Social.Activities.verb_display/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#verb_id/1","title":"Bonfire.Social.Activities.verb_id/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#verb_maybe_modify/2","title":"Bonfire.Social.Activities.verb_maybe_modify/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Activities.html#verb_name/1","title":"Bonfire.Social.Activities.verb_name/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Acts.Activity.html","title":"Bonfire.Social.Acts.Activity","type":"module"},{"doc":"","ref":"Bonfire.Social.Acts.Activity.html#run/2","title":"Bonfire.Social.Acts.Activity.run/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Acts.Activity.UnderObject.html","title":"Bonfire.Social.Acts.Activity.UnderObject","type":"module"},{"doc":"","ref":"Bonfire.Social.Acts.Activity.UnderObject.html#run/2","title":"Bonfire.Social.Acts.Activity.UnderObject.run/2","type":"function"},{"doc":"An Act that translates a post or changeset into some jobs for the AP publish worker. Handles creation, update and delete Act Options: on - key in assigns to find the post, default: :post as - key in assigns to assign indexable object, default: :post_index","ref":"Bonfire.Social.Acts.ActivityPub.html","title":"Bonfire.Social.Acts.ActivityPub","type":"module"},{"doc":"","ref":"Bonfire.Social.Acts.ActivityPub.html#run/2","title":"Bonfire.Social.Acts.ActivityPub.run/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Acts.Boundaries.html","title":"Bonfire.Social.Acts.Boundaries","type":"module"},{"doc":"","ref":"Bonfire.Social.Acts.Boundaries.html#run/2","title":"Bonfire.Social.Acts.Boundaries.run/2","type":"function"},{"doc":"An act that deals with maintaining a Caretaker record for a changeset. During insertion, adds an associated insert if a caretaker can be found in the epic options. During deletion, ensures that the related record will be cleaned up. Epic Options (insert): :caretaker - user that will take care of the post, falls back to :current_user :current_user - user that will taker care of the post, fallback if :caretaker is not set. Act Options: :on - key to find changeset, required.","ref":"Bonfire.Social.Acts.Caretaker.html","title":"Bonfire.Social.Acts.Caretaker","type":"module"},{"doc":"","ref":"Bonfire.Social.Acts.Caretaker.html#run/2","title":"Bonfire.Social.Acts.Caretaker.run/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Acts.CategoriesAutoBoost.html","title":"Bonfire.Social.Acts.CategoriesAutoBoost","type":"module"},{"doc":"","ref":"Bonfire.Social.Acts.CategoriesAutoBoost.html#run/2","title":"Bonfire.Social.Acts.CategoriesAutoBoost.run/2","type":"function"},{"doc":"An act that deals with maintaining a Created record for a changeset. During insertion, adds an associated insert if a creator can be found in the epic options. During deletion, ensures that the related record will be cleaned up. Epic Options (insert): :creator - user that will create the post, falls back to :current_user :current_user - user that will create the post, fallback if :creator is not set. Act Options: :on - key to find changeset, required.","ref":"Bonfire.Social.Acts.Creator.html","title":"Bonfire.Social.Acts.Creator","type":"module"},{"doc":"Finds a list of appropriate feeds into which to post. Epic Options: :current_user - current user. required. :boundary - preset string or custom boundaries. default: nil Act Options: :changeset - key in assigns to find changeset, required","ref":"Bonfire.Social.Acts.Feeds.html","title":"Bonfire.Social.Acts.Feeds","type":"module"},{"doc":"","ref":"Bonfire.Social.Acts.Feeds.html#run/2","title":"Bonfire.Social.Acts.Feeds.run/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Acts.Feeds.html#thread_id/1","title":"Bonfire.Social.Acts.Feeds.thread_id/1","type":"function"},{"doc":"Saves uploaded files as attachments to the post. Act Options: :changeset - key in assigns to find changeset, required :attrs - epic options key to find the attributes at, default: :post_attrs . :uploads - epic options key to find the uploaded media objects at, default: :uploaded_media .","ref":"Bonfire.Social.Acts.Files.html","title":"Bonfire.Social.Acts.Files","type":"module"},{"doc":"","ref":"Bonfire.Social.Acts.Files.html#run/2","title":"Bonfire.Social.Acts.Files.run/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Acts.LivePush.html","title":"Bonfire.Social.Acts.LivePush","type":"module"},{"doc":"","ref":"Bonfire.Social.Acts.LivePush.html#run/2","title":"Bonfire.Social.Acts.LivePush.run/2","type":"function"},{"doc":"An act that enqueues publish/update/delete requests to meilisearch via an oban job queue.","ref":"Bonfire.Social.Acts.MeiliSearch.Queue.html","title":"Bonfire.Social.Acts.MeiliSearch.Queue","type":"module"},{"doc":"","ref":"Bonfire.Social.Acts.MeiliSearch.Queue.html#prepare_object/1","title":"Bonfire.Social.Acts.MeiliSearch.Queue.prepare_object/1","type":"function"},{"doc":"Delete something + specified associations with a changeset","ref":"Bonfire.Social.Acts.Objects.Delete.html","title":"Bonfire.Social.Acts.Objects.Delete","type":"module"},{"doc":"","ref":"Bonfire.Social.Acts.PostContents.html","title":"Bonfire.Social.Acts.PostContents","type":"module"},{"doc":"","ref":"Bonfire.Social.Acts.PostContents.html#run/2","title":"Bonfire.Social.Acts.PostContents.run/2","type":"function"},{"doc":"Creates a changeset for publishing a post Epic Options: :current_user - user that will create the post, required. :post_attrs (configurable) - attrs to create the post from, required. :post_id (configurable) - id to use for the created post (handy for creating activitypub objects with an id representing their reported creation time) Act Options: :id - epic options key to find an id to force override with at, default: :post_id :as - key to assign changeset to, default: :post . :attrs - epic options key to find the attributes at, default: :post_attrs .","ref":"Bonfire.Social.Acts.Posts.Publish.html","title":"Bonfire.Social.Acts.Posts.Publish","type":"module"},{"doc":"","ref":"Bonfire.Social.Acts.Tags.html","title":"Bonfire.Social.Acts.Tags","type":"module"},{"doc":"","ref":"Bonfire.Social.Acts.Tags.html#run/2","title":"Bonfire.Social.Acts.Tags.run/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Acts.Threaded.html","title":"Bonfire.Social.Acts.Threaded","type":"module"},{"doc":"","ref":"Bonfire.Social.Acts.Threaded.html#run/2","title":"Bonfire.Social.Acts.Threaded.run/2","type":"function"},{"doc":"Fetch and save metadata of URLs Act Options: :changeset - key in assigns to find changeset, required :attrs - epic options key to find the attributes at, default: :post_attrs . :uploads - epic options key to find the uploaded media objects at, default: :urls .","ref":"Bonfire.Social.Acts.URLPreviews.html","title":"Bonfire.Social.Acts.URLPreviews","type":"module"},{"doc":"","ref":"Bonfire.Social.Acts.URLPreviews.html#maybe_fetch_and_save/2","title":"Bonfire.Social.Acts.URLPreviews.maybe_fetch_and_save/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Acts.URLPreviews.html#run/2","title":"Bonfire.Social.Acts.URLPreviews.run/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html","title":"Bonfire.Social.Boosts","type":"module"},{"doc":"","ref":"Bonfire.Social.Boosts.html#ap_publish_activity/2","title":"Bonfire.Social.Boosts.ap_publish_activity/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html#ap_receive_activity/3","title":"Bonfire.Social.Boosts.ap_receive_activity/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html#boost/2","title":"Bonfire.Social.Boosts.boost/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html#boosted?/2","title":"Bonfire.Social.Boosts.boosted?/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html#context_module/0","title":"Bonfire.Social.Boosts.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html#do_boost/2","title":"Bonfire.Social.Boosts.do_boost/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html#federation_module/0","title":"Bonfire.Social.Boosts.federation_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html#get!/3","title":"Bonfire.Social.Boosts.get!/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html#get/3","title":"Bonfire.Social.Boosts.get/3","type":"function"},{"doc":"List boosts by the user","ref":"Bonfire.Social.Boosts.html#list_by/2","title":"Bonfire.Social.Boosts.list_by/2","type":"function"},{"doc":"List current user's boosts","ref":"Bonfire.Social.Boosts.html#list_my/1","title":"Bonfire.Social.Boosts.list_my/1","type":"function"},{"doc":"List boost of an object","ref":"Bonfire.Social.Boosts.html#list_of/2","title":"Bonfire.Social.Boosts.list_of/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html#list_paginated/2","title":"Bonfire.Social.Boosts.list_paginated/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html#queries_module/0","title":"Bonfire.Social.Boosts.queries_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html#query/2","title":"Bonfire.Social.Boosts.query/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.html#unboost/2","title":"Bonfire.Social.Boosts.unboost/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.LiveHandler.html","title":"Bonfire.Social.Boosts.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Social.Boosts.LiveHandler.html#handle_event/3","title":"Bonfire.Social.Boosts.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Boosts.LiveHandler.html#preload/1","title":"Bonfire.Social.Boosts.LiveHandler.preload/1","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Social.ChannelCase.html","title":"Bonfire.Social.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Social.ConnCase.html","title":"Bonfire.Social.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.Social.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Social.DataCase.html","title":"Bonfire.Social.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.Social.DataCase.html#errors_on/1","title":"Bonfire.Social.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.Social.DataHelpers.html","title":"Bonfire.Social.DataHelpers","type":"module"},{"doc":"","ref":"Bonfire.Social.Edges.html","title":"Bonfire.Social.Edges","type":"module"},{"doc":"","ref":"Bonfire.Social.Edges.html#changeset/5","title":"Bonfire.Social.Edges.changeset/5","type":"function"},{"doc":"","ref":"Bonfire.Social.Edges.html#changeset_base/4","title":"Bonfire.Social.Edges.changeset_base/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Edges.html#delete_by_both/3","title":"Bonfire.Social.Edges.delete_by_both/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Edges.html#delete_by_object/1","title":"Bonfire.Social.Edges.delete_by_object/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Edges.html#delete_by_subject/1","title":"Bonfire.Social.Edges.delete_by_subject/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Edges.html#get!/4","title":"Bonfire.Social.Edges.get!/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Edges.html#get/4","title":"Bonfire.Social.Edges.get/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Edges.html#put_edge_assoc/3","title":"Bonfire.Social.Edges.put_edge_assoc/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Edges.html#put_edge_assoc/4","title":"Bonfire.Social.Edges.put_edge_assoc/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Edges.html#query/2","title":"Bonfire.Social.Edges.query/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Edges.html#query_parent/3","title":"Bonfire.Social.Edges.query_parent/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Edges.html#table_id/1","title":"Bonfire.Social.Edges.table_id/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Edges.html#table_types/1","title":"Bonfire.Social.Edges.table_types/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Fake.html","title":"Bonfire.Social.Fake","type":"module"},{"doc":"","ref":"Bonfire.Social.Fake.html#fake_follow!/0","title":"Bonfire.Social.Fake.fake_follow!/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Fake.html#fake_incoming_follow!/0","title":"Bonfire.Social.Fake.fake_incoming_follow!/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Fake.html#fake_outgoing_follow!/0","title":"Bonfire.Social.Fake.fake_outgoing_follow!/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Fake.html#fake_remote_user!/0","title":"Bonfire.Social.Fake.fake_remote_user!/0","type":"function"},{"doc":"","ref":"Bonfire.Social.FeedActivities.html","title":"Bonfire.Social.FeedActivities","type":"module"},{"doc":"","ref":"Bonfire.Social.FeedActivities.html#cast/2","title":"Bonfire.Social.FeedActivities.cast/2","type":"function"},{"doc":"","ref":"Bonfire.Social.FeedActivities.html#cast/3","title":"Bonfire.Social.FeedActivities.cast/3","type":"function"},{"doc":"","ref":"Bonfire.Social.FeedActivities.html#context_module/0","title":"Bonfire.Social.FeedActivities.context_module/0","type":"function"},{"doc":"Remove activities from feeds, using specific filters","ref":"Bonfire.Social.FeedActivities.html#delete/1","title":"Bonfire.Social.FeedActivities.delete/1","type":"function"},{"doc":"Remove one or more activities from all feeds","ref":"Bonfire.Social.FeedActivities.html#delete/2","title":"Bonfire.Social.FeedActivities.delete/2","type":"function"},{"doc":"Gets a feed by id or ids or a thing/things containing an id/ids.","ref":"Bonfire.Social.FeedActivities.html#feed/2","title":"Bonfire.Social.FeedActivities.feed/2","type":"function"},{"doc":"Return a page of Feed Activities (reverse chronological) + pagination metadata","ref":"Bonfire.Social.FeedActivities.html#feed_paginated/2","title":"Bonfire.Social.FeedActivities.feed_paginated/2","type":"function"},{"doc":"","ref":"Bonfire.Social.FeedActivities.html#feed_paginated/3","title":"Bonfire.Social.FeedActivities.feed_paginated/3","type":"function"},{"doc":"Gets a list of feed ids this activity was published to from the database. Currently only used by the ActivityPub integration.","ref":"Bonfire.Social.FeedActivities.html#feeds_for_activity/1","title":"Bonfire.Social.FeedActivities.feeds_for_activity/1","type":"function"},{"doc":"Computes the feed ids for get_feed_publishes/2 . Options: :inbox - list of objects whose inbox we should attempt to insert into. :outbox - list of objects whose outbox we should attempt to insert into. :notifications - list of objects whose notifications we should attempt to insert into. :feeds - list of ids (or objects containing IDs of feeds to post to.","ref":"Bonfire.Social.FeedActivities.html#get_feed_ids/1","title":"Bonfire.Social.FeedActivities.get_feed_ids/1","type":"function"},{"doc":"Creates the underlying data for put_feed_publishes/2 .","ref":"Bonfire.Social.FeedActivities.html#get_feed_publishes/1","title":"Bonfire.Social.FeedActivities.get_feed_publishes/1","type":"function"},{"doc":"","ref":"Bonfire.Social.FeedActivities.html#mark_all_seen/2","title":"Bonfire.Social.FeedActivities.mark_all_seen/2","type":"function"},{"doc":"Takes or creates an activity and publishes to object creator's inbox","ref":"Bonfire.Social.FeedActivities.html#maybe_notify_creator/3","title":"Bonfire.Social.FeedActivities.maybe_notify_creator/3","type":"function"},{"doc":"Gets a user's home feed, a combination of all feeds the user is subscribed to.","ref":"Bonfire.Social.FeedActivities.html#my_feed/2","title":"Bonfire.Social.FeedActivities.my_feed/2","type":"function"},{"doc":"Creates a new local activity or takes an existing one and publishes to creator's inbox","ref":"Bonfire.Social.FeedActivities.html#notify_admins/3","title":"Bonfire.Social.FeedActivities.notify_admins/3","type":"function"},{"doc":"Creates a new local activity or takes an existing one and publishes to object's notifications (if object is an actor)","ref":"Bonfire.Social.FeedActivities.html#notify_characters/4","title":"Bonfire.Social.FeedActivities.notify_characters/4","type":"function"},{"doc":"","ref":"Bonfire.Social.FeedActivities.html#notify_feeds/4","title":"Bonfire.Social.FeedActivities.notify_feeds/4","type":"function"},{"doc":"Creates a new local activity or takes an existing one and publishes to object's inbox (assuming object is a character)","ref":"Bonfire.Social.FeedActivities.html#notify_object/3","title":"Bonfire.Social.FeedActivities.notify_object/3","type":"function"},{"doc":"Creates a new local activity and publishes to appropriate feeds","ref":"Bonfire.Social.FeedActivities.html#publish/4","title":"Bonfire.Social.FeedActivities.publish/4","type":"function"},{"doc":"Arranges for an insert changeset to also publish to feeds related to some objects. Options: see get_feed_ids/1","ref":"Bonfire.Social.FeedActivities.html#put_feed_publishes/2","title":"Bonfire.Social.FeedActivities.put_feed_publishes/2","type":"function"},{"doc":"","ref":"Bonfire.Social.FeedActivities.html#queries_module/0","title":"Bonfire.Social.FeedActivities.queries_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.FeedActivities.html#query/2","title":"Bonfire.Social.FeedActivities.query/2","type":"function"},{"doc":"","ref":"Bonfire.Social.FeedActivities.html#query/3","title":"Bonfire.Social.FeedActivities.query/3","type":"function"},{"doc":"","ref":"Bonfire.Social.FeedActivities.html#query_paginated/2","title":"Bonfire.Social.FeedActivities.query_paginated/2","type":"function"},{"doc":"","ref":"Bonfire.Social.FeedActivities.html#query_paginated/3","title":"Bonfire.Social.FeedActivities.query_paginated/3","type":"function"},{"doc":"Records a remote activity and puts in appropriate feeds","ref":"Bonfire.Social.FeedActivities.html#save_fediverse_incoming_activity/3","title":"Bonfire.Social.FeedActivities.save_fediverse_incoming_activity/3","type":"function"},{"doc":"","ref":"Bonfire.Social.FeedActivities.html#the_object/1","title":"Bonfire.Social.FeedActivities.the_object/1","type":"function"},{"doc":"","ref":"Bonfire.Social.FeedActivities.html#unseen_count/2","title":"Bonfire.Social.FeedActivities.unseen_count/2","type":"function"},{"doc":"","ref":"Bonfire.Social.FeedActivities.html#unseen_query/2","title":"Bonfire.Social.FeedActivities.unseen_query/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html","title":"Bonfire.Social.Feeds","type":"module"},{"doc":"","ref":"Bonfire.Social.Feeds.html#admin_notifications/1","title":"Bonfire.Social.Feeds.admin_notifications/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#admins_notifications/0","title":"Bonfire.Social.Feeds.admins_notifications/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#admins_notifications/1","title":"Bonfire.Social.Feeds.admins_notifications/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#context_module/0","title":"Bonfire.Social.Feeds.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#do_target_feeds/5","title":"Bonfire.Social.Feeds.do_target_feeds/5","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#feed_id!/2","title":"Bonfire.Social.Feeds.feed_id!/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#feed_id/2","title":"Bonfire.Social.Feeds.feed_id/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#feed_ids/2","title":"Bonfire.Social.Feeds.feed_ids/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#feed_ids_to_publish/3","title":"Bonfire.Social.Feeds.feed_ids_to_publish/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#global_feed_ids/1","title":"Bonfire.Social.Feeds.global_feed_ids/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#inbox_of_obj_creator/1","title":"Bonfire.Social.Feeds.inbox_of_obj_creator/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#maybe_create_feed/2","title":"Bonfire.Social.Feeds.maybe_create_feed/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#maybe_creator_notification/2","title":"Bonfire.Social.Feeds.maybe_creator_notification/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#maybe_custom_feeds/1","title":"Bonfire.Social.Feeds.maybe_custom_feeds/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#maybe_my_outbox_feed_id/2","title":"Bonfire.Social.Feeds.maybe_my_outbox_feed_id/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#mentions_feed_ids/2","title":"Bonfire.Social.Feeds.mentions_feed_ids/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#my_feed_id/2","title":"Bonfire.Social.Feeds.my_feed_id/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#my_home_feed_ids/2","title":"Bonfire.Social.Feeds.my_home_feed_ids/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#named_feed_id/1","title":"Bonfire.Social.Feeds.named_feed_id/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#target_feeds/3","title":"Bonfire.Social.Feeds.target_feeds/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.html#user_notifications_feeds/2","title":"Bonfire.Social.Feeds.user_notifications_feeds/2","type":"function"},{"doc":"Names a predefined feed attached to a user","ref":"Bonfire.Social.Feeds.html#t:feed_name/0","title":"Bonfire.Social.Feeds.feed_name/0","type":"type"},{"doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html","title":"Bonfire.Social.Feeds.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#feed_assigns_maybe_async/2","title":"Bonfire.Social.Feeds.LiveHandler.feed_assigns_maybe_async/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#handle_event/3","title":"Bonfire.Social.Feeds.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#handle_info/2","title":"Bonfire.Social.Feeds.LiveHandler.handle_info/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#handle_params/3","title":"Bonfire.Social.Feeds.LiveHandler.handle_params/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#load_user_feed_assigns/3","title":"Bonfire.Social.Feeds.LiveHandler.load_user_feed_assigns/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#load_user_feed_assigns/4","title":"Bonfire.Social.Feeds.LiveHandler.load_user_feed_assigns/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#object_preloads/0","title":"Bonfire.Social.Feeds.LiveHandler.object_preloads/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#paginate_feed/2","title":"Bonfire.Social.Feeds.LiveHandler.paginate_feed/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#paginate_feed/3","title":"Bonfire.Social.Feeds.LiveHandler.paginate_feed/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#paginate_fetch_assign_default/2","title":"Bonfire.Social.Feeds.LiveHandler.paginate_fetch_assign_default/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#preload_objects/3","title":"Bonfire.Social.Feeds.LiveHandler.preload_objects/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#preloads/2","title":"Bonfire.Social.Feeds.LiveHandler.preloads/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#send_feed_updates/3","title":"Bonfire.Social.Feeds.LiveHandler.send_feed_updates/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Feeds.LiveHandler.html#user_feed_assign_or_load_async/4","title":"Bonfire.Social.Feeds.LiveHandler.user_feed_assign_or_load_async/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.html","title":"Bonfire.Social.Flags","type":"module"},{"doc":"","ref":"Bonfire.Social.Flags.html#ap_publish_activity/2","title":"Bonfire.Social.Flags.ap_publish_activity/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.html#by_flagged/1","title":"Bonfire.Social.Flags.by_flagged/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.html#by_flagger/1","title":"Bonfire.Social.Flags.by_flagger/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.html#context_module/0","title":"Bonfire.Social.Flags.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.html#federation_module/0","title":"Bonfire.Social.Flags.federation_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.html#flag/3","title":"Bonfire.Social.Flags.flag/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.html#flagged?/2","title":"Bonfire.Social.Flags.flagged?/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.html#get!/3","title":"Bonfire.Social.Flags.get!/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.html#get/3","title":"Bonfire.Social.Flags.get/3","type":"function"},{"doc":"List flags by the user and which are in their outbox","ref":"Bonfire.Social.Flags.html#list_by/2","title":"Bonfire.Social.Flags.list_by/2","type":"function"},{"doc":"List current user's flags, which are in their outbox","ref":"Bonfire.Social.Flags.html#list_my/1","title":"Bonfire.Social.Flags.list_my/1","type":"function"},{"doc":"List flag of an object and which are in a feed","ref":"Bonfire.Social.Flags.html#list_of/2","title":"Bonfire.Social.Flags.list_of/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.html#list_paginated/2","title":"Bonfire.Social.Flags.list_paginated/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.html#queries_module/0","title":"Bonfire.Social.Flags.queries_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.html#query/2","title":"Bonfire.Social.Flags.query/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.html#unflag/2","title":"Bonfire.Social.Flags.unflag/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Flags.LiveHandler.html","title":"Bonfire.Social.Flags.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Social.Flags.LiveHandler.html#handle_event/3","title":"Bonfire.Social.Flags.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html","title":"Bonfire.Social.Follows","type":"module"},{"doc":"Accepts a follow request, poblishes to feeds and federates.","ref":"Bonfire.Social.Follows.html#accept/2","title":"Bonfire.Social.Follows.accept/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#all_by_object/2","title":"Bonfire.Social.Follows.all_by_object/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#all_by_subject/2","title":"Bonfire.Social.Follows.all_by_subject/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#all_followed_outboxes/2","title":"Bonfire.Social.Follows.all_followed_outboxes/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#all_objects_by_subject/2","title":"Bonfire.Social.Follows.all_objects_by_subject/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#all_subjects_by_object/2","title":"Bonfire.Social.Follows.all_subjects_by_object/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#ap_publish_activity/2","title":"Bonfire.Social.Follows.ap_publish_activity/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#ap_receive_activity/3","title":"Bonfire.Social.Follows.ap_receive_activity/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#context_module/0","title":"Bonfire.Social.Follows.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#federation_module/0","title":"Bonfire.Social.Follows.federation_module/0","type":"function"},{"doc":"Follow someone/something. In case of success, publishes to feeds and federates. If the user is not permitted to follow the object, or the object is a remote actor, will instead request to follow.","ref":"Bonfire.Social.Follows.html#follow/3","title":"Bonfire.Social.Follows.follow/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#following?/2","title":"Bonfire.Social.Follows.following?/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#get!/3","title":"Bonfire.Social.Follows.get!/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#get/3","title":"Bonfire.Social.Follows.get/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#ignore/2","title":"Bonfire.Social.Follows.ignore/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#list_followed/2","title":"Bonfire.Social.Follows.list_followed/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#list_followers/2","title":"Bonfire.Social.Follows.list_followers/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#list_my_followed/2","title":"Bonfire.Social.Follows.list_my_followed/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#list_my_followers/2","title":"Bonfire.Social.Follows.list_my_followers/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#maybe_publish_accept/2","title":"Bonfire.Social.Follows.maybe_publish_accept/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#queries_module/0","title":"Bonfire.Social.Follows.queries_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#query/2","title":"Bonfire.Social.Follows.query/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#requested?/2","title":"Bonfire.Social.Follows.requested?/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.html#unfollow/2","title":"Bonfire.Social.Follows.unfollow/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.LiveHandler.html","title":"Bonfire.Social.Follows.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Social.Follows.LiveHandler.html#handle_event/3","title":"Bonfire.Social.Follows.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Follows.LiveHandler.html#preload/1","title":"Bonfire.Social.Follows.LiveHandler.preload/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Integration.html","title":"Bonfire.Social.Integration","type":"module"},{"doc":"","ref":"Bonfire.Social.Integration.html#activity_ap_publish/4","title":"Bonfire.Social.Integration.activity_ap_publish/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Integration.html#ap_publish/3","title":"Bonfire.Social.Integration.ap_publish/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Integration.html#ap_push_activity/4","title":"Bonfire.Social.Integration.ap_push_activity/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Integration.html#ap_push_activity_with_object/4","title":"Bonfire.Social.Integration.ap_push_activity_with_object/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Integration.html#is_local?/1","title":"Bonfire.Social.Integration.is_local?/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Integration.html#mailer/0","title":"Bonfire.Social.Integration.mailer/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Integration.html#maybe_index/1","title":"Bonfire.Social.Integration.maybe_index/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Integration.html#maybe_indexable_object/1","title":"Bonfire.Social.Integration.maybe_indexable_object/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Integration.html#maybe_unindex/1","title":"Bonfire.Social.Integration.maybe_unindex/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Integration.html#repo/0","title":"Bonfire.Social.Integration.repo/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html","title":"Bonfire.Social.Likes","type":"module"},{"doc":"","ref":"Bonfire.Social.Likes.html#ap_publish_activity/2","title":"Bonfire.Social.Likes.ap_publish_activity/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html#ap_receive_activity/3","title":"Bonfire.Social.Likes.ap_receive_activity/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html#by_liked/1","title":"Bonfire.Social.Likes.by_liked/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html#by_liker/1","title":"Bonfire.Social.Likes.by_liker/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html#context_module/0","title":"Bonfire.Social.Likes.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html#federation_module/0","title":"Bonfire.Social.Likes.federation_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html#get!/3","title":"Bonfire.Social.Likes.get!/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html#get/3","title":"Bonfire.Social.Likes.get/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html#like/2","title":"Bonfire.Social.Likes.like/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html#liked?/2","title":"Bonfire.Social.Likes.liked?/2","type":"function"},{"doc":"List likes by a user","ref":"Bonfire.Social.Likes.html#list_by/2","title":"Bonfire.Social.Likes.list_by/2","type":"function"},{"doc":"List the current user's likes","ref":"Bonfire.Social.Likes.html#list_my/1","title":"Bonfire.Social.Likes.list_my/1","type":"function"},{"doc":"List likers of something(s)","ref":"Bonfire.Social.Likes.html#list_of/2","title":"Bonfire.Social.Likes.list_of/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html#queries_module/0","title":"Bonfire.Social.Likes.queries_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html#query/2","title":"Bonfire.Social.Likes.query/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.html#unlike/2","title":"Bonfire.Social.Likes.unlike/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.LiveHandler.html","title":"Bonfire.Social.Likes.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Social.Likes.LiveHandler.html#do_like/3","title":"Bonfire.Social.Likes.LiveHandler.do_like/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.LiveHandler.html#handle_event/3","title":"Bonfire.Social.Likes.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.LiveHandler.html#liker_count/1","title":"Bonfire.Social.Likes.LiveHandler.liker_count/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Likes.LiveHandler.html#preload/1","title":"Bonfire.Social.Likes.LiveHandler.preload/1","type":"function"},{"doc":"","ref":"Bonfire.Social.LivePush.html","title":"Bonfire.Social.LivePush","type":"module"},{"doc":"","ref":"Bonfire.Social.LivePush.html#notify/2","title":"Bonfire.Social.LivePush.notify/2","type":"function"},{"doc":"","ref":"Bonfire.Social.LivePush.html#notify/4","title":"Bonfire.Social.LivePush.notify/4","type":"function"},{"doc":"","ref":"Bonfire.Social.LivePush.html#notify_of_message/4","title":"Bonfire.Social.LivePush.notify_of_message/4","type":"function"},{"doc":"Sends a notification about an activity to a list of users, excluding the author/subject","ref":"Bonfire.Social.LivePush.html#notify_users/4","title":"Bonfire.Social.LivePush.notify_users/4","type":"function"},{"doc":"","ref":"Bonfire.Social.LivePush.html#prepare_activity/2","title":"Bonfire.Social.LivePush.prepare_activity/2","type":"function"},{"doc":"Receives an activity with a nested object, or vice versa, uses PubSub to pushes to feeds and optionally notifications","ref":"Bonfire.Social.LivePush.html#push_activity/3","title":"Bonfire.Social.LivePush.push_activity/3","type":"function"},{"doc":"Receives an activity and object, uses PubSub to pushes to feeds and optionally notifications, and returns an Activity.","ref":"Bonfire.Social.LivePush.html#push_activity_object/4","title":"Bonfire.Social.LivePush.push_activity_object/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Messages.html","title":"Bonfire.Social.Messages","type":"module"},{"doc":"","ref":"Bonfire.Social.Messages.html#ap_publish_activity/2","title":"Bonfire.Social.Messages.ap_publish_activity/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Messages.html#ap_receive_activity/3","title":"Bonfire.Social.Messages.ap_receive_activity/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Messages.html#changeset/4","title":"Bonfire.Social.Messages.changeset/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Messages.html#context_module/0","title":"Bonfire.Social.Messages.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Messages.html#draft/2","title":"Bonfire.Social.Messages.draft/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Messages.html#federation_module/0","title":"Bonfire.Social.Messages.federation_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Messages.html#filter/3","title":"Bonfire.Social.Messages.filter/3","type":"function"},{"doc":"List posts created by the user and which are in their outbox, which are not replies","ref":"Bonfire.Social.Messages.html#list/3","title":"Bonfire.Social.Messages.list/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Messages.html#list/4","title":"Bonfire.Social.Messages.list/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Messages.html#read/2","title":"Bonfire.Social.Messages.read/2","type":"function"},{"doc":"TODO: check boundaries, right now anyone can message anyone :/","ref":"Bonfire.Social.Messages.html#send/3","title":"Bonfire.Social.Messages.send/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Messages.LiveHandler.html","title":"Bonfire.Social.Messages.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Social.Messages.LiveHandler.html#handle_event/3","title":"Bonfire.Social.Messages.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Messages.LiveHandler.html#handle_params/3","title":"Bonfire.Social.Messages.LiveHandler.handle_params/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Messages.LiveHandler.html#list_threads/3","title":"Bonfire.Social.Messages.LiveHandler.list_threads/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Messages.LiveHandler.html#live_more/3","title":"Bonfire.Social.Messages.LiveHandler.live_more/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Messages.LiveHandler.html#send_message/2","title":"Bonfire.Social.Messages.LiveHandler.send_message/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Messages.LiveHandler.html#threads_widget/3","title":"Bonfire.Social.Messages.LiveHandler.threads_widget/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Migrations.html","title":"Bonfire.Social.Migrations","type":"module"},{"doc":"","ref":"Bonfire.Social.Migrations.html#migrate_social/0","title":"Bonfire.Social.Migrations.migrate_social/0","type":"macro"},{"doc":"","ref":"Bonfire.Social.Migrations.html#migrate_social/1","title":"Bonfire.Social.Migrations.migrate_social/1","type":"macro"},{"doc":"","ref":"Bonfire.Social.Migrations.html#ms/1","title":"Bonfire.Social.Migrations.ms/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Objects.html","title":"Bonfire.Social.Objects","type":"module"},{"doc":"Handles casting: Creator Caretaker Threaded replies (when present) Tags/Mentions (when present) Acls Activity","ref":"Bonfire.Social.Objects.html#cast/4","title":"Bonfire.Social.Objects.cast/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Objects.html#cast_acl/3","title":"Bonfire.Social.Objects.cast_acl/3","type":"function"},{"doc":"Handles casting: Creator Caretaker Acls","ref":"Bonfire.Social.Objects.html#cast_basic/4","title":"Bonfire.Social.Objects.cast_basic/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Objects.html#cast_caretaker/2","title":"Bonfire.Social.Objects.cast_caretaker/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Objects.html#cast_creator/2","title":"Bonfire.Social.Objects.cast_creator/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Objects.html#cast_creator_caretaker/2","title":"Bonfire.Social.Objects.cast_creator_caretaker/2","type":"function"},{"doc":"Handles casting: Acls","ref":"Bonfire.Social.Objects.html#cast_mini/4","title":"Bonfire.Social.Objects.cast_mini/4","type":"function"},{"doc":"Handles casting: Acls Activity Feed Publishes","ref":"Bonfire.Social.Objects.html#cast_publish/4","title":"Bonfire.Social.Objects.cast_publish/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Objects.html#changeset_named/2","title":"Bonfire.Social.Objects.changeset_named/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Objects.html#delete/2","title":"Bonfire.Social.Objects.delete/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Objects.html#delete_apply_error/2","title":"Bonfire.Social.Objects.delete_apply_error/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Objects.html#list_query/2","title":"Bonfire.Social.Objects.list_query/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Objects.html#maybe_generic_delete/3","title":"Bonfire.Social.Objects.maybe_generic_delete/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Objects.html#maybe_preload_activity_object/2","title":"Bonfire.Social.Objects.maybe_preload_activity_object/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Objects.html#object_creator/1","title":"Bonfire.Social.Objects.object_creator/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Objects.html#preload_creator/1","title":"Bonfire.Social.Objects.preload_creator/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Objects.html#preload_reply_creator/1","title":"Bonfire.Social.Objects.preload_reply_creator/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Objects.html#publish/5","title":"Bonfire.Social.Objects.publish/5","type":"function"},{"doc":"Returns a basic query over undeleted pointable objects in the system, optionally limited to one or more types.","ref":"Bonfire.Social.Objects.html#query_base/1","title":"Bonfire.Social.Objects.query_base/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Objects.html#read/2","title":"Bonfire.Social.Objects.read/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Objects.html#run_epic/3","title":"Bonfire.Social.Objects.run_epic/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Objects.html#set_boundaries/4","title":"Bonfire.Social.Objects.set_boundaries/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Objects.html#set_name/3","title":"Bonfire.Social.Objects.set_name/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Objects.LiveHandler.html","title":"Bonfire.Social.Objects.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Social.Objects.LiveHandler.html#handle_event/3","title":"Bonfire.Social.Objects.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Objects.LiveHandler.html#load_object/1","title":"Bonfire.Social.Objects.LiveHandler.load_object/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Objects.LiveHandler.html#load_object/2","title":"Bonfire.Social.Objects.LiveHandler.load_object/2","type":"function"},{"doc":"","ref":"Bonfire.Social.PostContents.html","title":"Bonfire.Social.PostContents","type":"module"},{"doc":"","ref":"Bonfire.Social.PostContents.html#cast/4","title":"Bonfire.Social.PostContents.cast/4","type":"function"},{"doc":"","ref":"Bonfire.Social.PostContents.html#changeset/2","title":"Bonfire.Social.PostContents.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Social.PostContents.html#indexing_object_format/1","title":"Bonfire.Social.PostContents.indexing_object_format/1","type":"function"},{"doc":"","ref":"Bonfire.Social.PostContents.html#maybe_detect_languages/2","title":"Bonfire.Social.PostContents.maybe_detect_languages/2","type":"function"},{"doc":"","ref":"Bonfire.Social.PostContents.html#maybe_prepare_contents/3","title":"Bonfire.Social.PostContents.maybe_prepare_contents/3","type":"function"},{"doc":"","ref":"Bonfire.Social.PostContents.html#maybe_process_markdown/2","title":"Bonfire.Social.PostContents.maybe_process_markdown/2","type":"function"},{"doc":"","ref":"Bonfire.Social.PostContents.html#merge_with_body_or_nil/2","title":"Bonfire.Social.PostContents.merge_with_body_or_nil/2","type":"function"},{"doc":"","ref":"Bonfire.Social.PostContents.html#no_known_output/2","title":"Bonfire.Social.PostContents.no_known_output/2","type":"function"},{"doc":"","ref":"Bonfire.Social.PostContents.html#only_prepare_content/2","title":"Bonfire.Social.PostContents.only_prepare_content/2","type":"function"},{"doc":"","ref":"Bonfire.Social.PostContents.html#prepare_text/2","title":"Bonfire.Social.PostContents.prepare_text/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html","title":"Bonfire.Social.Posts","type":"module"},{"doc":"","ref":"Bonfire.Social.Posts.html#ap_publish_activity/2","title":"Bonfire.Social.Posts.ap_publish_activity/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html#ap_publish_activity_object/2","title":"Bonfire.Social.Posts.ap_publish_activity_object/2","type":"function"},{"doc":"record an incoming ActivityPub post","ref":"Bonfire.Social.Posts.html#ap_receive_activity/4","title":"Bonfire.Social.Posts.ap_receive_activity/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html#changeset/4","title":"Bonfire.Social.Posts.changeset/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html#context_module/0","title":"Bonfire.Social.Posts.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html#delete/2","title":"Bonfire.Social.Posts.delete/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html#draft/2","title":"Bonfire.Social.Posts.draft/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html#federation_module/0","title":"Bonfire.Social.Posts.federation_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html#filter/3","title":"Bonfire.Social.Posts.filter/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html#indexing_object_format/2","title":"Bonfire.Social.Posts.indexing_object_format/2","type":"function"},{"doc":"List posts created by the user and which are in their outbox, which are not replies","ref":"Bonfire.Social.Posts.html#list_by/2","title":"Bonfire.Social.Posts.list_by/2","type":"function"},{"doc":"List posts with pagination","ref":"Bonfire.Social.Posts.html#list_paginated/2","title":"Bonfire.Social.Posts.list_paginated/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html#maybe_index/2","title":"Bonfire.Social.Posts.maybe_index/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html#publish/1","title":"Bonfire.Social.Posts.publish/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html#queries_module/0","title":"Bonfire.Social.Posts.queries_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html#query/2","title":"Bonfire.Social.Posts.query/2","type":"function"},{"doc":"Query posts with pagination","ref":"Bonfire.Social.Posts.html#query_paginated/2","title":"Bonfire.Social.Posts.query_paginated/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html#read/2","title":"Bonfire.Social.Posts.read/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.html#run_epic/3","title":"Bonfire.Social.Posts.run_epic/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.LiveHandler.html","title":"Bonfire.Social.Posts.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Social.Posts.LiveHandler.html#handle_event/3","title":"Bonfire.Social.Posts.LiveHandler.handle_event/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.LiveHandler.html#handle_params/3","title":"Bonfire.Social.Posts.LiveHandler.handle_params/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.LiveHandler.html#live_more/3","title":"Bonfire.Social.Posts.LiveHandler.live_more/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.LiveHandler.html#post_changeset/2","title":"Bonfire.Social.Posts.LiveHandler.post_changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Posts.LiveHandler.html#write_feedback/2","title":"Bonfire.Social.Posts.LiveHandler.write_feedback/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Requests.html","title":"Bonfire.Social.Requests","type":"module"},{"doc":"Request someone/something, and federate it","ref":"Bonfire.Social.Requests.html#accept/2","title":"Bonfire.Social.Requests.accept/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Requests.html#all_by_object/3","title":"Bonfire.Social.Requests.all_by_object/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Requests.html#all_by_subject/3","title":"Bonfire.Social.Requests.all_by_subject/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Requests.html#all_objects_by_subject/3","title":"Bonfire.Social.Requests.all_objects_by_subject/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Requests.html#all_requested_outboxes/3","title":"Bonfire.Social.Requests.all_requested_outboxes/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Requests.html#all_subjects_by_object/3","title":"Bonfire.Social.Requests.all_subjects_by_object/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Requests.html#ap_publish_activity/2","title":"Bonfire.Social.Requests.ap_publish_activity/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Requests.html#context_module/0","title":"Bonfire.Social.Requests.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Requests.html#get!/4","title":"Bonfire.Social.Requests.get!/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Requests.html#get/2","title":"Bonfire.Social.Requests.get/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Requests.html#get/4","title":"Bonfire.Social.Requests.get/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Requests.html#ignore/2","title":"Bonfire.Social.Requests.ignore/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Requests.html#list_my_requested/3","title":"Bonfire.Social.Requests.list_my_requested/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Requests.html#list_my_requesters/3","title":"Bonfire.Social.Requests.list_my_requesters/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Requests.html#list_requested/4","title":"Bonfire.Social.Requests.list_requested/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Requests.html#list_requesters/4","title":"Bonfire.Social.Requests.list_requesters/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Requests.html#many/2","title":"Bonfire.Social.Requests.many/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Requests.html#queries_module/0","title":"Bonfire.Social.Requests.queries_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Requests.html#query/3","title":"Bonfire.Social.Requests.query/3","type":"function"},{"doc":"Request someone/something, and federate it","ref":"Bonfire.Social.Requests.html#request/4","title":"Bonfire.Social.Requests.request/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Requests.html#requested/2","title":"Bonfire.Social.Requests.requested/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Requests.html#requested?/3","title":"Bonfire.Social.Requests.requested?/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Requests.html#unrequest/3","title":"Bonfire.Social.Requests.unrequest/3","type":"function"},{"doc":"","ref":"Bonfire.Social.RuntimeConfig.html","title":"Bonfire.Social.RuntimeConfig","type":"module"},{"doc":"NOTE: you can override this default config in your app's runtime.exs, by placing similarly-named config keys below the Bonfire.Common.Config.LoadExtensionsConfig.load_configs line","ref":"Bonfire.Social.RuntimeConfig.html#config/0","title":"Bonfire.Social.RuntimeConfig.config/0","type":"function"},{"doc":"","ref":"Bonfire.Social.RuntimeConfig.html#config_module/0","title":"Bonfire.Social.RuntimeConfig.config_module/0","type":"function"},{"doc":"Track seen/unseen (similar to read/unread, but only indicates that it was displayed in a feed or other listing for the user, not that they actually read it) status of things (usually Activities )","ref":"Bonfire.Social.Seen.html","title":"Bonfire.Social.Seen","type":"module"},{"doc":"","ref":"Bonfire.Social.Seen.html#context_module/0","title":"Bonfire.Social.Seen.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Seen.html#get!/3","title":"Bonfire.Social.Seen.get!/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Seen.html#get/3","title":"Bonfire.Social.Seen.get/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Seen.html#mark_seen/2","title":"Bonfire.Social.Seen.mark_seen/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Seen.html#mark_unseen/2","title":"Bonfire.Social.Seen.mark_unseen/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Seen.html#queries_module/0","title":"Bonfire.Social.Seen.queries_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Seen.html#query/2","title":"Bonfire.Social.Seen.query/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Seen.html#seen?/2","title":"Bonfire.Social.Seen.seen?/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Tags.html","title":"Bonfire.Social.Tags","type":"module"},{"doc":"","ref":"Bonfire.Social.Tags.html#auto_boost/2","title":"Bonfire.Social.Tags.auto_boost/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Tags.html#cast/4","title":"Bonfire.Social.Tags.cast/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Tags.html#editor_output_content_type/1","title":"Bonfire.Social.Tags.editor_output_content_type/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Tags.html#indexing_format_tags/1","title":"Bonfire.Social.Tags.indexing_format_tags/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Tags.html#maybe_auto_boost/3","title":"Bonfire.Social.Tags.maybe_auto_boost/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Tags.html#maybe_boostable_categories/2","title":"Bonfire.Social.Tags.maybe_boostable_categories/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Tags.html#maybe_process/2","title":"Bonfire.Social.Tags.maybe_process/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Tags.html#maybe_tag/4","title":"Bonfire.Social.Tags.maybe_tag/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Tags.html#no_known_output/2","title":"Bonfire.Social.Tags.no_known_output/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Test.ConnHelpers.html","title":"Bonfire.Social.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.Social.Test.FakeHelpers.html","title":"Bonfire.Social.Test.FakeHelpers","type":"module"},{"doc":"","ref":"Bonfire.Social.Threads.html","title":"Bonfire.Social.Threads","type":"module"},{"doc":"","ref":"Bonfire.Social.Threads.html#arrange_replies_tree/1","title":"Bonfire.Social.Threads.arrange_replies_tree/1","type":"function"},{"doc":"Handles casting related to the reply and threading. If it's not a reply or the user is not permitted to reply to the thing, a new thread will be created.","ref":"Bonfire.Social.Threads.html#cast/4","title":"Bonfire.Social.Threads.cast/4","type":"function"},{"doc":"","ref":"Bonfire.Social.Threads.html#changeset/2","title":"Bonfire.Social.Threads.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Threads.html#context_module/0","title":"Bonfire.Social.Threads.context_module/0","type":"function"},{"doc":"List participants in a thread (depending on user's boundaries)","ref":"Bonfire.Social.Threads.html#fetch_participants/2","title":"Bonfire.Social.Threads.fetch_participants/2","type":"function"},{"doc":"Group per-thread","ref":"Bonfire.Social.Threads.html#filter/3","title":"Bonfire.Social.Threads.filter/3","type":"function"},{"doc":"Returns {:ok, reply} or {:error, reason} , where reason may be: :not_found - we could not find the object you are replying to. :not_permitted - you do not have permission to reply to this.","ref":"Bonfire.Social.Threads.html#find_reply_to/2","title":"Bonfire.Social.Threads.find_reply_to/2","type":"function"},{"doc":"List participants of an activity or thread (depending on user's boundaries)","ref":"Bonfire.Social.Threads.html#list_participants/3","title":"Bonfire.Social.Threads.list_participants/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Threads.html#list_replies/2","title":"Bonfire.Social.Threads.list_replies/2","type":"function"},{"doc":"re-order distinct threads after DISTINCT ON ordered them by thread_id - Note: does not support pagination","ref":"Bonfire.Social.Threads.html#maybe_re_order_result/2","title":"Bonfire.Social.Threads.maybe_re_order_result/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Threads.html#queries_module/0","title":"Bonfire.Social.Threads.queries_module/0","type":"function"},{"doc":"","ref":"Bonfire.Social.Threads.html#query/2","title":"Bonfire.Social.Threads.query/2","type":"function"},{"doc":"re-order distinct threads after DISTINCT ON ordered them by thread_id - Note: this results in (Ecto.QueryError) cannot preload associations in subquery in query","ref":"Bonfire.Social.Threads.html#re_order_using_subquery/2","title":"Bonfire.Social.Threads.re_order_using_subquery/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Threads.html#read/2","title":"Bonfire.Social.Threads.read/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Threads.LiveHandler.html","title":"Bonfire.Social.Threads.LiveHandler","type":"module"},{"doc":"","ref":"Bonfire.Social.Threads.LiveHandler.html#handle_info/2","title":"Bonfire.Social.Threads.LiveHandler.handle_info/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Threads.LiveHandler.html#load_thread/1","title":"Bonfire.Social.Threads.LiveHandler.load_thread/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Threads.LiveHandler.html#load_thread_assigns/1","title":"Bonfire.Social.Threads.LiveHandler.load_thread_assigns/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Threads.LiveHandler.html#load_thread_maybe_async/1","title":"Bonfire.Social.Threads.LiveHandler.load_thread_maybe_async/1","type":"function"},{"doc":"","ref":"Bonfire.Social.Threads.LiveHandler.html#load_thread_maybe_async/3","title":"Bonfire.Social.Threads.LiveHandler.load_thread_maybe_async/3","type":"function"},{"doc":"","ref":"Bonfire.Social.Threads.LiveHandler.html#maybe_subscribe/2","title":"Bonfire.Social.Threads.LiveHandler.maybe_subscribe/2","type":"function"},{"doc":"","ref":"Bonfire.Social.Threads.LiveHandler.html#thread_init/1","title":"Bonfire.Social.Threads.LiveHandler.thread_init/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.html","title":"Bonfire.Tag","type":"module"},{"doc":"","ref":"Bonfire.Tag.html#context_module/0","title":"Bonfire.Tag.context_module/0","type":"function"},{"doc":"","ref":"Bonfire.Tag.html#queries_module/0","title":"Bonfire.Tag.queries_module/0","type":"function"},{"doc":"Add things (Pointer objects) to a tag. You usually want to add tags to a thing instead, see thing_tags_changeset","ref":"Bonfire.Tag.html#tag_things_changeset/2","title":"Bonfire.Tag.tag_things_changeset/2","type":"function"},{"doc":"Add tags to a thing (any Pointer object which defines a many_to_many relation to tag). This function applies to your object schema but is here for convenience.","ref":"Bonfire.Tag.html#thing_tags_changeset/2","title":"Bonfire.Tag.thing_tags_changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html","title":"Bonfire.Tag.Autocomplete","type":"module"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#api_tag_lookup/3","title":"Bonfire.Tag.Autocomplete.api_tag_lookup/3","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#api_tag_lookup_public/4","title":"Bonfire.Tag.Autocomplete.api_tag_lookup_public/4","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#filter_results/1","title":"Bonfire.Tag.Autocomplete.filter_results/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#find_all_tags/1","title":"Bonfire.Tag.Autocomplete.find_all_tags/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#maybe_find_tags/2","title":"Bonfire.Tag.Autocomplete.maybe_find_tags/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#maybe_search/2","title":"Bonfire.Tag.Autocomplete.maybe_search/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#prefix_index/1","title":"Bonfire.Tag.Autocomplete.prefix_index/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#search_or_lookup/3","title":"Bonfire.Tag.Autocomplete.search_or_lookup/3","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#search_prefix/2","title":"Bonfire.Tag.Autocomplete.search_prefix/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#search_type/2","title":"Bonfire.Tag.Autocomplete.search_type/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_add_field/4","title":"Bonfire.Tag.Autocomplete.tag_add_field/4","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_hit_prepare/2","title":"Bonfire.Tag.Autocomplete.tag_hit_prepare/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_hit_prepare/4","title":"Bonfire.Tag.Autocomplete.tag_hit_prepare/4","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_lookup_process/4","title":"Bonfire.Tag.Autocomplete.tag_lookup_process/4","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_lookup_public/2","title":"Bonfire.Tag.Autocomplete.tag_lookup_public/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_search/2","title":"Bonfire.Tag.Autocomplete.tag_search/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_search_from_tags/1","title":"Bonfire.Tag.Autocomplete.tag_search_from_tags/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_search_from_text/2","title":"Bonfire.Tag.Autocomplete.tag_search_from_text/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#tag_suggestion_display/2","title":"Bonfire.Tag.Autocomplete.tag_suggestion_display/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#tags_split/1","title":"Bonfire.Tag.Autocomplete.tags_split/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#try_all_prefixes/1","title":"Bonfire.Tag.Autocomplete.try_all_prefixes/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#try_prefixes/1","title":"Bonfire.Tag.Autocomplete.try_prefixes/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#try_tag_search/1","title":"Bonfire.Tag.Autocomplete.try_tag_search/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Autocomplete.html#try_tag_search/2","title":"Bonfire.Tag.Autocomplete.try_tag_search/2","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Tag.ChannelCase.html","title":"Bonfire.Tag.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use MyApp.Web.ConnCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Tag.ConnCase.html","title":"Bonfire.Tag.ConnCase","type":"module"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use Bonfire.Tag.DataCase, async: true , although this option is not recommended for other databases.","ref":"Bonfire.Tag.DataCase.html","title":"Bonfire.Tag.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"Bonfire.Tag.DataCase.html#errors_on/1","title":"Bonfire.Tag.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.DataHelpers.html","title":"Bonfire.Tag.DataHelpers","type":"module"},{"doc":"GraphQL tag/category queries","ref":"Bonfire.Tag.GraphQL.TagResolver.html","title":"Bonfire.Tag.GraphQL.TagResolver","type":"module"},{"doc":"","ref":"Bonfire.Tag.GraphQL.TagResolver.html#fetch_tag/2","title":"Bonfire.Tag.GraphQL.TagResolver.fetch_tag/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.GraphQL.TagResolver.html#name/3","title":"Bonfire.Tag.GraphQL.TagResolver.name/3","type":"function"},{"doc":"","ref":"Bonfire.Tag.GraphQL.TagResolver.html#summary/3","title":"Bonfire.Tag.GraphQL.TagResolver.summary/3","type":"function"},{"doc":"","ref":"Bonfire.Tag.GraphQL.TagResolver.html#tag/2","title":"Bonfire.Tag.GraphQL.TagResolver.tag/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.GraphQL.TagResolver.html#tag_prepare/3","title":"Bonfire.Tag.GraphQL.TagResolver.tag_prepare/3","type":"function"},{"doc":"","ref":"Bonfire.Tag.GraphQL.TagResolver.html#tag_something/2","title":"Bonfire.Tag.GraphQL.TagResolver.tag_something/2","type":"function"},{"doc":"Things associated with a Tag","ref":"Bonfire.Tag.GraphQL.TagResolver.html#tagged_things_edges/3","title":"Bonfire.Tag.GraphQL.TagResolver.tagged_things_edges/3","type":"function"},{"doc":"Tags associated with a Thing","ref":"Bonfire.Tag.GraphQL.TagResolver.html#tags_edges/3","title":"Bonfire.Tag.GraphQL.TagResolver.tags_edges/3","type":"function"},{"doc":"","ref":"Bonfire.Tag.GraphQL.TagSchema.html","title":"Bonfire.Tag.GraphQL.TagSchema","type":"module"},{"doc":"","ref":"Bonfire.Tag.Hashtag.html","title":"Bonfire.Tag.Hashtag","type":"module"},{"doc":"","ref":"Bonfire.Tag.Hashtag.html#changeset/2","title":"Bonfire.Tag.Hashtag.changeset/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Hashtag.html#get_or_create_by_name/1","title":"Bonfire.Tag.Hashtag.get_or_create_by_name/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Hashtag.html#normalize_name/1","title":"Bonfire.Tag.Hashtag.normalize_name/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Hashtag.Migration.html","title":"Bonfire.Tag.Hashtag.Migration","type":"module"},{"doc":"","ref":"Bonfire.Tag.Hashtag.Migration.html#create_hashtag_table/0","title":"Bonfire.Tag.Hashtag.Migration.create_hashtag_table/0","type":"macro"},{"doc":"","ref":"Bonfire.Tag.Hashtag.Migration.html#create_hashtag_table/1","title":"Bonfire.Tag.Hashtag.Migration.create_hashtag_table/1","type":"macro"},{"doc":"","ref":"Bonfire.Tag.Hashtag.Migration.html#create_name_index/1","title":"Bonfire.Tag.Hashtag.Migration.create_name_index/1","type":"macro"},{"doc":"","ref":"Bonfire.Tag.Hashtag.Migration.html#drop_hashtag_table/0","title":"Bonfire.Tag.Hashtag.Migration.drop_hashtag_table/0","type":"function"},{"doc":"","ref":"Bonfire.Tag.Hashtag.Migration.html#drop_name_index/1","title":"Bonfire.Tag.Hashtag.Migration.drop_name_index/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Hashtag.Migration.html#migrate_hashtag/0","title":"Bonfire.Tag.Hashtag.Migration.migrate_hashtag/0","type":"macro"},{"doc":"","ref":"Bonfire.Tag.Hashtag.Migration.html#migrate_hashtag/1","title":"Bonfire.Tag.Hashtag.Migration.migrate_hashtag/1","type":"macro"},{"doc":"","ref":"Bonfire.Tag.Migrations.html","title":"Bonfire.Tag.Migrations","type":"module"},{"doc":"","ref":"Bonfire.Tag.Migrations.html#down/0","title":"Bonfire.Tag.Migrations.down/0","type":"function"},{"doc":"","ref":"Bonfire.Tag.Migrations.html#migrate_hashtag/0","title":"Bonfire.Tag.Migrations.migrate_hashtag/0","type":"function"},{"doc":"","ref":"Bonfire.Tag.Migrations.html#up/0","title":"Bonfire.Tag.Migrations.up/0","type":"function"},{"doc":"","ref":"Bonfire.Tag.Queries.html","title":"Bonfire.Tag.Queries","type":"module"},{"doc":"Filter the query according to arbitrary criteria","ref":"Bonfire.Tag.Queries.html#filter/2","title":"Bonfire.Tag.Queries.filter/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Queries.html#join_to/3","title":"Bonfire.Tag.Queries.join_to/3","type":"function"},{"doc":"","ref":"Bonfire.Tag.Queries.html#list_trending/3","title":"Bonfire.Tag.Queries.list_trending/3","type":"function"},{"doc":"","ref":"Bonfire.Tag.Queries.html#queries/4","title":"Bonfire.Tag.Queries.queries/4","type":"function"},{"doc":"","ref":"Bonfire.Tag.Queries.html#query/1","title":"Bonfire.Tag.Queries.query/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Queries.html#query/2","title":"Bonfire.Tag.Queries.query/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Simulate.html","title":"Bonfire.Tag.Simulate","type":"module"},{"doc":"","ref":"Bonfire.Tag.Tagged.html","title":"Bonfire.Tag.Tagged","type":"module"},{"doc":"","ref":"Bonfire.Tag.Tagged.html#all/0","title":"Bonfire.Tag.Tagged.all/0","type":"function"},{"doc":"","ref":"Bonfire.Tag.Tagged.html#changeset/2","title":"Bonfire.Tag.Tagged.changeset/2","type":"function"},{"doc":"Get the latest tag added to a thing","ref":"Bonfire.Tag.Tagged.html#latest/1","title":"Bonfire.Tag.Tagged.latest/1","type":"function"},{"doc":"Get the things tagged with a certain tag","ref":"Bonfire.Tag.Tagged.html#with_tag/1","title":"Bonfire.Tag.Tagged.with_tag/1","type":"function"},{"doc":"Get the tags of a thing","ref":"Bonfire.Tag.Tagged.html#with_thing/1","title":"Bonfire.Tag.Tagged.with_thing/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Tags.html","title":"Bonfire.Tag.Tags","type":"module"},{"doc":"","ref":"Bonfire.Tag.Tags.html#find/2","title":"Bonfire.Tag.Tags.find/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Tags.html#get/1","title":"Bonfire.Tag.Tags.get/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Tags.html#indexing_object_format/1","title":"Bonfire.Tag.Tags.indexing_object_format/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Tags.html#indexing_object_format_name/1","title":"Bonfire.Tag.Tags.indexing_object_format_name/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Tags.html#list_trending/2","title":"Bonfire.Tag.Tags.list_trending/2","type":"function"},{"doc":"Retrieves a list of tags by arbitrary filters. Used by: Various parts of the codebase that need to query for tags (inc. tests)","ref":"Bonfire.Tag.Tags.html#many/1","title":"Bonfire.Tag.Tags.many/1","type":"function"},{"doc":"Try to find one (best-match) tag","ref":"Bonfire.Tag.Tags.html#maybe_find_tag/3","title":"Bonfire.Tag.Tags.maybe_find_tag/3","type":"function"},{"doc":"Search / autocomplete for tags by name","ref":"Bonfire.Tag.Tags.html#maybe_find_tags/3","title":"Bonfire.Tag.Tags.maybe_find_tags/3","type":"function"},{"doc":"Lookup a single for a tag by its name/username","ref":"Bonfire.Tag.Tags.html#maybe_lookup_tag/2","title":"Bonfire.Tag.Tags.maybe_lookup_tag/2","type":"function"},{"doc":"Maybe tag something","ref":"Bonfire.Tag.Tags.html#maybe_tag/4","title":"Bonfire.Tag.Tags.maybe_tag/4","type":"function"},{"doc":"","ref":"Bonfire.Tag.Tags.html#maybe_taxonomy_tag/2","title":"Bonfire.Tag.Tags.maybe_taxonomy_tag/2","type":"function"},{"doc":"Retrieves a single tag by arbitrary filters. Used by: GraphQL Item queries ActivityPub integration Various parts of the codebase that need to query for tags (inc. tests)","ref":"Bonfire.Tag.Tags.html#one/1","title":"Bonfire.Tag.Tags.one/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Tags.html#tag_ids/1","title":"Bonfire.Tag.Tags.tag_ids/1","type":"function"},{"doc":"tag existing thing with one or multiple Tags, Pointers, or anything that can be made into a tag","ref":"Bonfire.Tag.Tags.html#tag_something/4","title":"Bonfire.Tag.Tags.tag_something/4","type":"function"},{"doc":"","ref":"Bonfire.Tag.Test.ConnHelpers.html","title":"Bonfire.Tag.Test.ConnHelpers","type":"module"},{"doc":"","ref":"Bonfire.Tag.TextContent.Formatter.html","title":"Bonfire.Tag.TextContent.Formatter","type":"module"},{"doc":"","ref":"Bonfire.Tag.TextContent.Formatter.html#escape_mention_handler/4","title":"Bonfire.Tag.TextContent.Formatter.escape_mention_handler/4","type":"function"},{"doc":"Parses a text and replace plain text links with HTML. Returns a tuple with a result text, mentions, and hashtags. If the 'safe_mention' option is given, only consecutive mentions at the start the post are actually mentioned.","ref":"Bonfire.Tag.TextContent.Formatter.html#linkify/2","title":"Bonfire.Tag.TextContent.Formatter.linkify/2","type":"function"},{"doc":"Escapes a special characters in mention names (not used right now)","ref":"Bonfire.Tag.TextContent.Formatter.html#mentions_escape/2","title":"Bonfire.Tag.TextContent.Formatter.mentions_escape/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.TextContent.Formatter.html#tag_handler/4","title":"Bonfire.Tag.TextContent.Formatter.tag_handler/4","type":"function"},{"doc":"","ref":"Bonfire.Tag.TextContent.Formatter.html#url_handler/3","title":"Bonfire.Tag.TextContent.Formatter.url_handler/3","type":"function"},{"doc":"","ref":"Bonfire.Tag.TextContent.Process.html","title":"Bonfire.Tag.TextContent.Process","type":"module"},{"doc":"Formatting text to plain text, HTML, or markdown","ref":"Bonfire.Tag.TextContent.Process.html#format_input/3","title":"Bonfire.Tag.TextContent.Process.format_input/3","type":"function"},{"doc":"","ref":"Bonfire.Tag.TextContent.Process.html#html_escape/2","title":"Bonfire.Tag.TextContent.Process.html_escape/2","type":"function"},{"doc":"For use for things like a bio, where we want links but not to actually trigger mentions.","ref":"Bonfire.Tag.TextContent.Process.html#process/3","title":"Bonfire.Tag.TextContent.Process.process/3","type":"function"},{"doc":"","ref":"Bonfire.Tag.Web.API.Autocomplete.html","title":"Bonfire.Tag.Web.API.Autocomplete","type":"module"},{"doc":"","ref":"Bonfire.Tag.Web.API.Autocomplete.html#get/2","title":"Bonfire.Tag.Web.API.Autocomplete.get/2","type":"function"},{"doc":"","ref":"Bonfire.Tag.Web.API.Autocomplete.html#prepare/1","title":"Bonfire.Tag.Web.API.Autocomplete.prepare/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Web.Component.EnterTags.html","title":"Bonfire.Tag.Web.Component.EnterTags","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Tag.Web.Component.EnterTags.html#render/1","title":"Bonfire.Tag.Web.Component.EnterTags.render/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Web.Component.TagAutocomplete.html","title":"Bonfire.Tag.Web.Component.TagAutocomplete","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.handle_event/3 .","ref":"Bonfire.Tag.Web.Component.TagAutocomplete.html#handle_event/3","title":"Bonfire.Tag.Web.Component.TagAutocomplete.handle_event/3","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.Tag.Web.Component.TagAutocomplete.html#mount/1","title":"Bonfire.Tag.Web.Component.TagAutocomplete.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Tag.Web.Component.TagAutocomplete.html#render/1","title":"Bonfire.Tag.Web.Component.TagAutocomplete.render/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Web.Component.TagAutocomplete.html#tag_suggest/2","title":"Bonfire.Tag.Web.Component.TagAutocomplete.tag_suggest/2","type":"function"},{"doc":"Alternative approach to tagging, using JS to directly use Meili's API, rather than passing through Elixir","ref":"Bonfire.Tag.Web.Component.TagAutocompleteMeiliDirect.html","title":"Bonfire.Tag.Web.Component.TagAutocompleteMeiliDirect","type":"module"},{"doc":"Callback implementation for Phoenix.LiveComponent.mount/1 .","ref":"Bonfire.Tag.Web.Component.TagAutocompleteMeiliDirect.html#mount/1","title":"Bonfire.Tag.Web.Component.TagAutocompleteMeiliDirect.mount/1","type":"function"},{"doc":"Callback implementation for Phoenix.LiveComponent.render/1 .","ref":"Bonfire.Tag.Web.Component.TagAutocompleteMeiliDirect.html#render/1","title":"Bonfire.Tag.Web.Component.TagAutocompleteMeiliDirect.render/1","type":"function"},{"doc":"","ref":"Bonfire.Tag.Web.Routes.html","title":"Bonfire.Tag.Web.Routes","type":"module"},{"doc":"","ref":"Bonfire.Test.FakeHelpers.html","title":"Bonfire.Test.FakeHelpers","type":"module"},{"doc":"","ref":"Bonfire.ValueFlows.API.Schema.html","title":"Bonfire.ValueFlows.API.Schema","type":"module"},{"doc":"","ref":"Bonfire.ValueFlows.API.Schema.Observe.html","title":"Bonfire.ValueFlows.API.Schema.Observe","type":"module"},{"doc":"","ref":"Bonfire.ValueFlows.API.Schema.Subscriptions.html","title":"Bonfire.ValueFlows.API.Schema.Subscriptions","type":"module"},{"doc":"ActivityPub API In general, the functions in this module take object-like formatted struct as the input for actor parameters. Use the functions in the ActivityPub.Actor module ( ActivityPub.Actor.get_by_ap_id/1 for example) to retrieve those.","ref":"ActivityPub.html","title":"ActivityPub","type":"module"},{"doc":"Generates and federates an Accept activity via the data passed through params .","ref":"ActivityPub.html#accept/1","title":"ActivityPub.accept/1","type":"function"},{"doc":"","ref":"ActivityPub.html#announce/6","title":"ActivityPub.announce/6","type":"function"},{"doc":"","ref":"ActivityPub.html#block/4","title":"ActivityPub.block/4","type":"function"},{"doc":"Generates and federates a Create activity via the data passed through params .","ref":"ActivityPub.html#create/2","title":"ActivityPub.create/2","type":"function"},{"doc":"","ref":"ActivityPub.html#delete/3","title":"ActivityPub.delete/3","type":"function"},{"doc":"","ref":"ActivityPub.html#flag/2","title":"ActivityPub.flag/2","type":"function"},{"doc":"Generates and federates a Follow activity. Note: the follow should be reflected on the host database side only after receiving an Accept activity in response!","ref":"ActivityPub.html#follow/4","title":"ActivityPub.follow/4","type":"function"},{"doc":"","ref":"ActivityPub.html#like/4","title":"ActivityPub.like/4","type":"function"},{"doc":"Generates and federates a Reject activity via the data passed through params .","ref":"ActivityPub.html#reject/1","title":"ActivityPub.reject/1","type":"function"},{"doc":"","ref":"ActivityPub.html#unannounce/4","title":"ActivityPub.unannounce/4","type":"function"},{"doc":"","ref":"ActivityPub.html#unblock/4","title":"ActivityPub.unblock/4","type":"function"},{"doc":"Generates and federates an Unfollow activity.","ref":"ActivityPub.html#unfollow/4","title":"ActivityPub.unfollow/4","type":"function"},{"doc":"","ref":"ActivityPub.html#unlike/4","title":"ActivityPub.unlike/4","type":"function"},{"doc":"","ref":"ActivityPub.html#update/1","title":"ActivityPub.update/1","type":"function"},{"doc":"An ActivityPub Actor type and functions for dealing with actors.","ref":"ActivityPub.Actor.html","title":"ActivityPub.Actor","type":"module"},{"doc":"","ref":"ActivityPub.Actor.html#deactivate/1","title":"ActivityPub.Actor.deactivate/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#delete/1","title":"ActivityPub.Actor.delete/1","type":"function"},{"doc":"Checks if an actor struct has a non-nil keys field and generates a PEM if it doesn't.","ref":"ActivityPub.Actor.html#ensure_keys_present/1","title":"ActivityPub.Actor.ensure_keys_present/1","type":"function"},{"doc":"Fetches a remote actor by username in username@domain.tld format","ref":"ActivityPub.Actor.html#fetch_by_username/1","title":"ActivityPub.Actor.fetch_by_username/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#format_remote_actor/1","title":"ActivityPub.Actor.format_remote_actor/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_actor_from_follow/1","title":"ActivityPub.Actor.get_actor_from_follow/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_and_format_collections_for_actor/1","title":"ActivityPub.Actor.get_and_format_collections_for_actor/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_and_format_resources_for_actor/1","title":"ActivityPub.Actor.get_and_format_resources_for_actor/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_by_ap_id!/1","title":"ActivityPub.Actor.get_by_ap_id!/1","type":"function"},{"doc":"Fetches an actor given its AP ID. Remote actors are first checked if they exist in database and are fetched remotely if they don't. Remote actors are also automatically updated every 24 hours.","ref":"ActivityPub.Actor.html#get_by_ap_id/1","title":"ActivityPub.Actor.get_by_ap_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_by_local_id!/1","title":"ActivityPub.Actor.get_by_local_id!/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_by_local_id/1","title":"ActivityPub.Actor.get_by_local_id/1","type":"function"},{"doc":"Fetches a local actor given its preferred username.","ref":"ActivityPub.Actor.html#get_by_username/1","title":"ActivityPub.Actor.get_by_username/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_cached_by_ap_id!/1","title":"ActivityPub.Actor.get_cached_by_ap_id!/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_cached_by_ap_id/1","title":"ActivityPub.Actor.get_cached_by_ap_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_cached_by_local_id/1","title":"ActivityPub.Actor.get_cached_by_local_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_cached_by_username/1","title":"ActivityPub.Actor.get_cached_by_username/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_community_ap_id/1","title":"ActivityPub.Actor.get_community_ap_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_creator_ap_id/1","title":"ActivityPub.Actor.get_creator_ap_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_external_followers/1","title":"ActivityPub.Actor.get_external_followers/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_followers/1","title":"ActivityPub.Actor.get_followers/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_followings/1","title":"ActivityPub.Actor.get_followings/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_or_fetch/1","title":"ActivityPub.Actor.get_or_fetch/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#get_or_fetch_by_ap_id/1","title":"ActivityPub.Actor.get_or_fetch_by_ap_id/1","type":"function"},{"doc":"Tries to get a local actor by username or tries to fetch it remotely if username is provided in username@domain.tld format.","ref":"ActivityPub.Actor.html#get_or_fetch_by_username/1","title":"ActivityPub.Actor.get_or_fetch_by_username/1","type":"function"},{"doc":"Fetches the public key for given actor AP ID.","ref":"ActivityPub.Actor.html#get_public_key_for_ap_id/1","title":"ActivityPub.Actor.get_public_key_for_ap_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#invalidate_cache/1","title":"ActivityPub.Actor.invalidate_cache/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#maybe_create_actor_from_object/1","title":"ActivityPub.Actor.maybe_create_actor_from_object/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#reactivate/1","title":"ActivityPub.Actor.reactivate/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#remote_users/2","title":"ActivityPub.Actor.remote_users/2","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#set_cache/1","title":"ActivityPub.Actor.set_cache/1","type":"function"},{"doc":"Updates an existing actor struct by its AP ID.","ref":"ActivityPub.Actor.html#update_actor/1","title":"ActivityPub.Actor.update_actor/1","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#update_actor_data_by_ap_id/2","title":"ActivityPub.Actor.update_actor_data_by_ap_id/2","type":"function"},{"doc":"","ref":"ActivityPub.Actor.html#t:t/0","title":"ActivityPub.Actor.t/0","type":"type"},{"doc":"Contract for ActivityPub module adapters","ref":"ActivityPub.Adapter.html","title":"ActivityPub.Adapter","type":"behaviour"},{"doc":"","ref":"ActivityPub.Adapter.html#adapter/0","title":"ActivityPub.Adapter.adapter/0","type":"function"},{"doc":"","ref":"ActivityPub.Adapter.html#base_url/0","title":"ActivityPub.Adapter.base_url/0","type":"function"},{"doc":"","ref":"ActivityPub.Adapter.html#c:base_url/0","title":"ActivityPub.Adapter.base_url/0","type":"callback"},{"doc":"Run function from adapter if defined, otherwise return fallback value","ref":"ActivityPub.Adapter.html#call_or/3","title":"ActivityPub.Adapter.call_or/3","type":"function"},{"doc":"","ref":"ActivityPub.Adapter.html#get_actor_by_id/1","title":"ActivityPub.Adapter.get_actor_by_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Adapter.html#c:get_actor_by_id/1","title":"ActivityPub.Adapter.get_actor_by_id/1","type":"callback"},{"doc":"","ref":"ActivityPub.Adapter.html#get_actor_by_username/1","title":"ActivityPub.Adapter.get_actor_by_username/1","type":"function"},{"doc":"Fetch an actor given its preferred username","ref":"ActivityPub.Adapter.html#c:get_actor_by_username/1","title":"ActivityPub.Adapter.get_actor_by_username/1","type":"callback"},{"doc":"","ref":"ActivityPub.Adapter.html#get_follower_local_ids/1","title":"ActivityPub.Adapter.get_follower_local_ids/1","type":"function"},{"doc":"","ref":"ActivityPub.Adapter.html#c:get_follower_local_ids/1","title":"ActivityPub.Adapter.get_follower_local_ids/1","type":"callback"},{"doc":"","ref":"ActivityPub.Adapter.html#get_following_local_ids/1","title":"ActivityPub.Adapter.get_following_local_ids/1","type":"function"},{"doc":"","ref":"ActivityPub.Adapter.html#c:get_following_local_ids/1","title":"ActivityPub.Adapter.get_following_local_ids/1","type":"callback"},{"doc":"","ref":"ActivityPub.Adapter.html#get_redirect_url/1","title":"ActivityPub.Adapter.get_redirect_url/1","type":"function"},{"doc":"Gets local url of an AP object to redirect in browser. Can take pointer id or an actor username.","ref":"ActivityPub.Adapter.html#c:get_redirect_url/1","title":"ActivityPub.Adapter.get_redirect_url/1","type":"callback"},{"doc":"","ref":"ActivityPub.Adapter.html#handle_activity/1","title":"ActivityPub.Adapter.handle_activity/1","type":"function"},{"doc":"Passes data to be handled by the host application","ref":"ActivityPub.Adapter.html#c:handle_activity/1","title":"ActivityPub.Adapter.handle_activity/1","type":"callback"},{"doc":"","ref":"ActivityPub.Adapter.html#maybe_create_remote_actor/1","title":"ActivityPub.Adapter.maybe_create_remote_actor/1","type":"function"},{"doc":"","ref":"ActivityPub.Adapter.html#c:maybe_create_remote_actor/1","title":"ActivityPub.Adapter.maybe_create_remote_actor/1","type":"callback"},{"doc":"","ref":"ActivityPub.Adapter.html#maybe_handle_activity/1","title":"ActivityPub.Adapter.maybe_handle_activity/1","type":"function"},{"doc":"","ref":"ActivityPub.Adapter.html#maybe_publish_object/1","title":"ActivityPub.Adapter.maybe_publish_object/1","type":"function"},{"doc":"","ref":"ActivityPub.Adapter.html#c:maybe_publish_object/1","title":"ActivityPub.Adapter.maybe_publish_object/1","type":"callback"},{"doc":"","ref":"ActivityPub.Adapter.html#update_local_actor/2","title":"ActivityPub.Adapter.update_local_actor/2","type":"function"},{"doc":"","ref":"ActivityPub.Adapter.html#c:update_local_actor/2","title":"ActivityPub.Adapter.update_local_actor/2","type":"callback"},{"doc":"","ref":"ActivityPub.Adapter.html#update_remote_actor/1","title":"ActivityPub.Adapter.update_remote_actor/1","type":"function"},{"doc":"","ref":"ActivityPub.Adapter.html#c:update_remote_actor/1","title":"ActivityPub.Adapter.update_remote_actor/1","type":"callback"},{"doc":"","ref":"ActivityPub.Common.html","title":"ActivityPub.Common","type":"module"},{"doc":"","ref":"ActivityPub.Common.html#adapter_fallback/0","title":"ActivityPub.Common.adapter_fallback/0","type":"function"},{"doc":"","ref":"ActivityPub.Common.html#repo/0","title":"ActivityPub.Common.repo/0","type":"function"},{"doc":"","ref":"ActivityPub.Config.html","title":"ActivityPub.Config","type":"module"},{"doc":"","ref":"ActivityPub.Config.html#delete/1","title":"ActivityPub.Config.delete/1","type":"function"},{"doc":"","ref":"ActivityPub.Config.html#get!/1","title":"ActivityPub.Config.get!/1","type":"function"},{"doc":"","ref":"ActivityPub.Config.html#get/1","title":"ActivityPub.Config.get/1","type":"function"},{"doc":"","ref":"ActivityPub.Config.html#get/2","title":"ActivityPub.Config.get/2","type":"function"},{"doc":"","ref":"ActivityPub.Config.html#put/2","title":"ActivityPub.Config.put/2","type":"function"},{"doc":"","ref":"ActivityPub.Config.Error.html","title":"ActivityPub.Config.Error","type":"exception"},{"doc":"This module defines the setup for tests requiring access to the application's data layer. You may define functions here to be used as helpers in your tests. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use ActivityPub.DataCase, async: true , although this option is not recommended for other databases.","ref":"ActivityPub.DataCase.html","title":"ActivityPub.DataCase","type":"module"},{"doc":"A helper that transforms changeset errors into a map of messages. assert { :error , changeset } = Accounts . create_user ( %{ password : &quot;short&quot; } ) assert &quot;password is too short&quot; in errors_on ( changeset ) . password assert %{ password : [ &quot;password is too short&quot; ] } = errors_on ( changeset )","ref":"ActivityPub.DataCase.html#errors_on/1","title":"ActivityPub.DataCase.errors_on/1","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html","title":"ActivityPub.Factory","type":"module"},{"doc":"","ref":"ActivityPub.Factory.html#actor/1","title":"ActivityPub.Factory.actor/1","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#actor_factory/1","title":"ActivityPub.Factory.actor_factory/1","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#announce_activity_factory/1","title":"ActivityPub.Factory.announce_activity_factory/1","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#build/2","title":"ActivityPub.Factory.build/2","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#build_list/3","title":"ActivityPub.Factory.build_list/3","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#build_pair/2","title":"ActivityPub.Factory.build_pair/2","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#collection/0","title":"ActivityPub.Factory.collection/0","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#community/0","title":"ActivityPub.Factory.community/0","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#create/1","title":"ActivityPub.Factory.create/1","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#create/2","title":"ActivityPub.Factory.create/2","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#create_list/3","title":"ActivityPub.Factory.create_list/3","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#create_pair/2","title":"ActivityPub.Factory.create_pair/2","type":"function"},{"doc":"Raises a helpful error if no factory is defined.","ref":"ActivityPub.Factory.html#factory/1","title":"ActivityPub.Factory.factory/1","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#insert/1","title":"ActivityPub.Factory.insert/1","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#insert/2","title":"ActivityPub.Factory.insert/2","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#insert/3","title":"ActivityPub.Factory.insert/3","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#insert_list/3","title":"ActivityPub.Factory.insert_list/3","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#insert_list/4","title":"ActivityPub.Factory.insert_list/4","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#insert_pair/2","title":"ActivityPub.Factory.insert_pair/2","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#insert_pair/3","title":"ActivityPub.Factory.insert_pair/3","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#instance_factory/0","title":"ActivityPub.Factory.instance_factory/0","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#like_activity_factory/0","title":"ActivityPub.Factory.like_activity_factory/0","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#local_actor/1","title":"ActivityPub.Factory.local_actor/1","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#local_actor_factory/1","title":"ActivityPub.Factory.local_actor_factory/1","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#note_activity_factory/1","title":"ActivityPub.Factory.note_activity_factory/1","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#note_factory/1","title":"ActivityPub.Factory.note_factory/1","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#params_for/2","title":"ActivityPub.Factory.params_for/2","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#params_with_assocs/2","title":"ActivityPub.Factory.params_with_assocs/2","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#string_params_for/2","title":"ActivityPub.Factory.string_params_for/2","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#string_params_with_assocs/2","title":"ActivityPub.Factory.string_params_with_assocs/2","type":"function"},{"doc":"","ref":"ActivityPub.Factory.html#tombstone_factory/0","title":"ActivityPub.Factory.tombstone_factory/0","type":"function"},{"doc":"Handles fetching AS2 objects from remote instances.","ref":"ActivityPub.Fetcher.html","title":"ActivityPub.Fetcher","type":"module"},{"doc":"Checks if an object exists in the database and fetches it if it doesn't.","ref":"ActivityPub.Fetcher.html#fetch_object_from_id/1","title":"ActivityPub.Fetcher.fetch_object_from_id/1","type":"function"},{"doc":"Fetches an AS2 object from remote AP ID.","ref":"ActivityPub.Fetcher.html#fetch_remote_object_from_id/1","title":"ActivityPub.Fetcher.fetch_remote_object_from_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Fetcher.html#get_actor/1","title":"ActivityPub.Fetcher.get_actor/1","type":"function"},{"doc":"","ref":"ActivityPub.Fetcher.html#get_or_fetch_and_create/1","title":"ActivityPub.Fetcher.get_or_fetch_and_create/1","type":"function"},{"doc":"Module for building and performing HTTP requests.","ref":"ActivityPub.HTTP.html","title":"ActivityPub.HTTP","type":"module"},{"doc":"Makes a DELETE request see ActivityPub.HTTP.request/5","ref":"ActivityPub.HTTP.html#delete/4","title":"ActivityPub.HTTP.delete/4","type":"function"},{"doc":"Makes a GET request see ActivityPub.HTTP.request/5","ref":"ActivityPub.HTTP.html#get/3","title":"ActivityPub.HTTP.get/3","type":"function"},{"doc":"Makes a POST request see ActivityPub.HTTP.request/5","ref":"ActivityPub.HTTP.html#post/4","title":"ActivityPub.HTTP.post/4","type":"function"},{"doc":"Makes a PUT request see ActivityPub.HTTP.request/5","ref":"ActivityPub.HTTP.html#put/4","title":"ActivityPub.HTTP.put/4","type":"function"},{"doc":"Builds and perform http request. Arguments: method - :get, :post, :put, :delete url body headers - a keyworld list of headers, e.g. [{&quot;content-type&quot;, &quot;text/plain&quot;}] options - custom, per-request middleware or adapter options Returns: {:ok, %Tesla.Env{}} or {:error, error}","ref":"ActivityPub.HTTP.html#request/5","title":"ActivityPub.HTTP.request/5","type":"function"},{"doc":"","ref":"ActivityPub.HTTP.html#t:t/0","title":"ActivityPub.HTTP.t/0","type":"type"},{"doc":"Specifies connection options for HTTP requests","ref":"ActivityPub.HTTP.Connection.html","title":"ActivityPub.HTTP.Connection","type":"module"},{"doc":"","ref":"ActivityPub.HTTP.Connection.html#hackney_options/1","title":"ActivityPub.HTTP.Connection.hackney_options/1","type":"function"},{"doc":"","ref":"ActivityPub.HTTP.Connection.html#new/1","title":"ActivityPub.HTTP.Connection.new/1","type":"function"},{"doc":"Helper functions for building HTTP requests","ref":"ActivityPub.HTTP.RequestBuilder.html","title":"ActivityPub.HTTP.RequestBuilder","type":"module"},{"doc":"","ref":"ActivityPub.HTTP.RequestBuilder.html#add_param/4","title":"ActivityPub.HTTP.RequestBuilder.add_param/4","type":"function"},{"doc":"","ref":"ActivityPub.HTTP.RequestBuilder.html#headers/2","title":"ActivityPub.HTTP.RequestBuilder.headers/2","type":"function"},{"doc":"","ref":"ActivityPub.HTTP.RequestBuilder.html#method/2","title":"ActivityPub.HTTP.RequestBuilder.method/2","type":"function"},{"doc":"","ref":"ActivityPub.HTTP.RequestBuilder.html#opts/2","title":"ActivityPub.HTTP.RequestBuilder.opts/2","type":"function"},{"doc":"","ref":"ActivityPub.HTTP.RequestBuilder.html#url/2","title":"ActivityPub.HTTP.RequestBuilder.url/2","type":"function"},{"doc":"Instances context.","ref":"ActivityPub.Instances.html","title":"ActivityPub.Instances","type":"module"},{"doc":"See ActivityPub.Instances.Instance.filter_reachable/1 .","ref":"ActivityPub.Instances.html#filter_reachable/1","title":"ActivityPub.Instances.filter_reachable/1","type":"function"},{"doc":"","ref":"ActivityPub.Instances.html#host/1","title":"ActivityPub.Instances.host/1","type":"function"},{"doc":"","ref":"ActivityPub.Instances.html#reachability_datetime_threshold/0","title":"ActivityPub.Instances.reachability_datetime_threshold/0","type":"function"},{"doc":"See ActivityPub.Instances.Instance.reachable?/1 .","ref":"ActivityPub.Instances.html#reachable?/1","title":"ActivityPub.Instances.reachable?/1","type":"function"},{"doc":"","ref":"ActivityPub.Instances.html#set_consistently_unreachable/1","title":"ActivityPub.Instances.set_consistently_unreachable/1","type":"function"},{"doc":"See ActivityPub.Instances.Instance.set_reachable/1 .","ref":"ActivityPub.Instances.html#set_reachable/1","title":"ActivityPub.Instances.set_reachable/1","type":"function"},{"doc":"See ActivityPub.Instances.Instance.set_unreachable/2 .","ref":"ActivityPub.Instances.html#set_unreachable/2","title":"ActivityPub.Instances.set_unreachable/2","type":"function"},{"doc":"Instance.","ref":"ActivityPub.Instances.Instance.html","title":"ActivityPub.Instances.Instance","type":"module"},{"doc":"","ref":"ActivityPub.Instances.Instance.html#changeset/2","title":"ActivityPub.Instances.Instance.changeset/2","type":"function"},{"doc":"","ref":"ActivityPub.Instances.Instance.html#filter_reachable/1","title":"ActivityPub.Instances.Instance.filter_reachable/1","type":"function"},{"doc":"See ActivityPub.Instances.host/1 .","ref":"ActivityPub.Instances.Instance.html#host/1","title":"ActivityPub.Instances.Instance.host/1","type":"function"},{"doc":"","ref":"ActivityPub.Instances.Instance.html#reachable?/1","title":"ActivityPub.Instances.Instance.reachable?/1","type":"function"},{"doc":"","ref":"ActivityPub.Instances.Instance.html#set_reachable/1","title":"ActivityPub.Instances.Instance.set_reachable/1","type":"function"},{"doc":"","ref":"ActivityPub.Instances.Instance.html#set_unreachable/2","title":"ActivityPub.Instances.Instance.set_unreachable/2","type":"function"},{"doc":"Generates RSA keys for HTTP message signatures","ref":"ActivityPub.Keys.html","title":"ActivityPub.Keys","type":"module"},{"doc":"","ref":"ActivityPub.Keys.html#generate_rsa_pem/0","title":"ActivityPub.Keys.generate_rsa_pem/0","type":"function"},{"doc":"","ref":"ActivityPub.Keys.html#keys_from_pem/1","title":"ActivityPub.Keys.keys_from_pem/1","type":"function"},{"doc":"","ref":"ActivityPub.LocalActor.html","title":"ActivityPub.LocalActor","type":"module"},{"doc":"","ref":"ActivityPub.LocalActor.html#changeset/1","title":"ActivityPub.LocalActor.changeset/1","type":"function"},{"doc":"","ref":"ActivityPub.LocalActor.html#changeset/2","title":"ActivityPub.LocalActor.changeset/2","type":"function"},{"doc":"","ref":"ActivityPub.LocalActor.html#follow/2","title":"ActivityPub.LocalActor.follow/2","type":"function"},{"doc":"","ref":"ActivityPub.LocalActor.html#get_by_ap_id/1","title":"ActivityPub.LocalActor.get_by_ap_id/1","type":"function"},{"doc":"","ref":"ActivityPub.LocalActor.html#get_by_id/1","title":"ActivityPub.LocalActor.get_by_id/1","type":"function"},{"doc":"","ref":"ActivityPub.LocalActor.html#get_by_username/1","title":"ActivityPub.LocalActor.get_by_username/1","type":"function"},{"doc":"","ref":"ActivityPub.LocalActor.html#insert/1","title":"ActivityPub.LocalActor.insert/1","type":"function"},{"doc":"","ref":"ActivityPub.LocalActor.html#update/2","title":"ActivityPub.LocalActor.update/2","type":"function"},{"doc":"","ref":"ActivityPub.LocalActor.html#t:t/0","title":"ActivityPub.LocalActor.t/0","type":"type"},{"doc":"","ref":"ActivityPub.MRF.html","title":"ActivityPub.MRF","type":"behaviour"},{"doc":"","ref":"ActivityPub.MRF.html#filter/2","title":"ActivityPub.MRF.filter/2","type":"function"},{"doc":"","ref":"ActivityPub.MRF.html#c:filter/2","title":"ActivityPub.MRF.filter/2","type":"callback"},{"doc":"","ref":"ActivityPub.MRF.html#filter/3","title":"ActivityPub.MRF.filter/3","type":"function"},{"doc":"","ref":"ActivityPub.MRF.html#get_policies/0","title":"ActivityPub.MRF.get_policies/0","type":"function"},{"doc":"","ref":"ActivityPub.MRF.html#subdomain_match?/2","title":"ActivityPub.MRF.subdomain_match?/2","type":"function"},{"doc":"","ref":"ActivityPub.MRF.html#subdomains_regex/1","title":"ActivityPub.MRF.subdomains_regex/1","type":"function"},{"doc":"Filter activities depending on their origin instance","ref":"ActivityPub.MRF.SimplePolicy.html","title":"ActivityPub.MRF.SimplePolicy","type":"module"},{"doc":"","ref":"ActivityPub.Migrations.html","title":"ActivityPub.Migrations","type":"module"},{"doc":"","ref":"ActivityPub.Migrations.html#down/0","title":"ActivityPub.Migrations.down/0","type":"function"},{"doc":"","ref":"ActivityPub.Migrations.html#prepare_test/0","title":"ActivityPub.Migrations.prepare_test/0","type":"function"},{"doc":"","ref":"ActivityPub.Migrations.html#up/0","title":"ActivityPub.Migrations.up/0","type":"function"},{"doc":"","ref":"ActivityPub.Migrations.html#upgrade/0","title":"ActivityPub.Migrations.upgrade/0","type":"function"},{"doc":"","ref":"ActivityPub.Migrations.html#weak_pointer/0","title":"ActivityPub.Migrations.weak_pointer/0","type":"function"},{"doc":"","ref":"ActivityPub.Object.html","title":"ActivityPub.Object","type":"module"},{"doc":"","ref":"ActivityPub.Object.html#changeset/1","title":"ActivityPub.Object.changeset/1","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#changeset/2","title":"ActivityPub.Object.changeset/2","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#delete/1","title":"ActivityPub.Object.delete/1","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#get_by_ap_id/1","title":"ActivityPub.Object.get_by_ap_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#get_by_id/1","title":"ActivityPub.Object.get_by_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#get_by_pointer_id/1","title":"ActivityPub.Object.get_by_pointer_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#get_cached_by_ap_id/1","title":"ActivityPub.Object.get_cached_by_ap_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#get_cached_by_pointer_id/1","title":"ActivityPub.Object.get_cached_by_pointer_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#get_outbox_for_actor/1","title":"ActivityPub.Object.get_outbox_for_actor/1","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#get_outbox_for_instance/0","title":"ActivityPub.Object.get_outbox_for_instance/0","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#get_outbox_fox_actor/2","title":"ActivityPub.Object.get_outbox_fox_actor/2","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#insert/1","title":"ActivityPub.Object.insert/1","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#invalidate_cache/1","title":"ActivityPub.Object.invalidate_cache/1","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#make_tombstone/2","title":"ActivityPub.Object.make_tombstone/2","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#maybe_upsert/3","title":"ActivityPub.Object.maybe_upsert/3","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#normalize/2","title":"ActivityPub.Object.normalize/2","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#set_cache/1","title":"ActivityPub.Object.set_cache/1","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#swap_object_with_tombstone/1","title":"ActivityPub.Object.swap_object_with_tombstone/1","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#update/2","title":"ActivityPub.Object.update/2","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#update_and_set_cache/1","title":"ActivityPub.Object.update_and_set_cache/1","type":"function"},{"doc":"","ref":"ActivityPub.Object.html#t:t/0","title":"ActivityPub.Object.t/0","type":"type"},{"doc":"","ref":"ActivityPub.Signature.html","title":"ActivityPub.Signature","type":"module"},{"doc":"Callback implementation for HTTPSignatures.Adapter.fetch_public_key/1 .","ref":"ActivityPub.Signature.html#fetch_public_key/1","title":"ActivityPub.Signature.fetch_public_key/1","type":"function"},{"doc":"","ref":"ActivityPub.Signature.html#key_id_to_actor_id/1","title":"ActivityPub.Signature.key_id_to_actor_id/1","type":"function"},{"doc":"Callback implementation for HTTPSignatures.Adapter.refetch_public_key/1 .","ref":"ActivityPub.Signature.html#refetch_public_key/1","title":"ActivityPub.Signature.refetch_public_key/1","type":"function"},{"doc":"","ref":"ActivityPub.Signature.html#sign/2","title":"ActivityPub.Signature.sign/2","type":"function"},{"doc":"","ref":"ActivityPub.Test.Helpers.html","title":"ActivityPub.Test.Helpers","type":"module"},{"doc":"","ref":"ActivityPub.Test.Helpers.html#endpoint/0","title":"ActivityPub.Test.Helpers.endpoint/0","type":"function"},{"doc":"","ref":"ActivityPub.Test.Helpers.html#follow/2","title":"ActivityPub.Test.Helpers.follow/2","type":"function"},{"doc":"","ref":"ActivityPub.Test.Helpers.html#repo/0","title":"ActivityPub.Test.Helpers.repo/0","type":"function"},{"doc":"","ref":"ActivityPub.Test.Helpers.html#test_path/0","title":"ActivityPub.Test.Helpers.test_path/0","type":"function"},{"doc":"","ref":"ActivityPub.Test.HttpRequestMock.html","title":"ActivityPub.Test.HttpRequestMock","type":"module"},{"doc":"","ref":"ActivityPub.Test.HttpRequestMock.html#file/1","title":"ActivityPub.Test.HttpRequestMock.file/1","type":"function"},{"doc":"","ref":"ActivityPub.Test.HttpRequestMock.html#get/4","title":"ActivityPub.Test.HttpRequestMock.get/4","type":"function"},{"doc":"","ref":"ActivityPub.Test.HttpRequestMock.html#request/1","title":"ActivityPub.Test.HttpRequestMock.request/1","type":"function"},{"doc":"","ref":"ActivityPub.TestAdapter.html","title":"ActivityPub.TestAdapter","type":"module"},{"doc":"Callback implementation for ActivityPub.Adapter.base_url/0 .","ref":"ActivityPub.TestAdapter.html#base_url/0","title":"ActivityPub.TestAdapter.base_url/0","type":"function"},{"doc":"Callback implementation for ActivityPub.Adapter.get_actor_by_id/1 .","ref":"ActivityPub.TestAdapter.html#get_actor_by_id/1","title":"ActivityPub.TestAdapter.get_actor_by_id/1","type":"function"},{"doc":"Callback implementation for ActivityPub.Adapter.get_actor_by_username/1 .","ref":"ActivityPub.TestAdapter.html#get_actor_by_username/1","title":"ActivityPub.TestAdapter.get_actor_by_username/1","type":"function"},{"doc":"Callback implementation for ActivityPub.Adapter.get_follower_local_ids/1 .","ref":"ActivityPub.TestAdapter.html#get_follower_local_ids/1","title":"ActivityPub.TestAdapter.get_follower_local_ids/1","type":"function"},{"doc":"Callback implementation for ActivityPub.Adapter.handle_activity/1 .","ref":"ActivityPub.TestAdapter.html#handle_activity/1","title":"ActivityPub.TestAdapter.handle_activity/1","type":"function"},{"doc":"Callback implementation for ActivityPub.Adapter.maybe_create_remote_actor/1 .","ref":"ActivityPub.TestAdapter.html#maybe_create_remote_actor/1","title":"ActivityPub.TestAdapter.maybe_create_remote_actor/1","type":"function"},{"doc":"Callback implementation for ActivityPub.Adapter.update_local_actor/2 .","ref":"ActivityPub.TestAdapter.html#update_local_actor/2","title":"ActivityPub.TestAdapter.update_local_actor/2","type":"function"},{"doc":"Callback implementation for ActivityPub.Adapter.update_remote_actor/1 .","ref":"ActivityPub.TestAdapter.html#update_remote_actor/1","title":"ActivityPub.TestAdapter.update_remote_actor/1","type":"function"},{"doc":"","ref":"ActivityPub.TestRepo.html","title":"ActivityPub.TestRepo","type":"module"},{"doc":"Callback implementation for Ecto.Repo.aggregate/3 .","ref":"ActivityPub.TestRepo.html#aggregate/3","title":"ActivityPub.TestRepo.aggregate/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.aggregate/4 .","ref":"ActivityPub.TestRepo.html#aggregate/4","title":"ActivityPub.TestRepo.aggregate/4","type":"function"},{"doc":"Callback implementation for Ecto.Repo.all/2 .","ref":"ActivityPub.TestRepo.html#all/2","title":"ActivityPub.TestRepo.all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.checked_out?/0 .","ref":"ActivityPub.TestRepo.html#checked_out?/0","title":"ActivityPub.TestRepo.checked_out?/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.checkout/2 .","ref":"ActivityPub.TestRepo.html#checkout/2","title":"ActivityPub.TestRepo.checkout/2","type":"function"},{"doc":"","ref":"ActivityPub.TestRepo.html#child_spec/1","title":"ActivityPub.TestRepo.child_spec/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.config/0 .","ref":"ActivityPub.TestRepo.html#config/0","title":"ActivityPub.TestRepo.config/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.default_options/1 .","ref":"ActivityPub.TestRepo.html#default_options/1","title":"ActivityPub.TestRepo.default_options/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete!/2 .","ref":"ActivityPub.TestRepo.html#delete!/2","title":"ActivityPub.TestRepo.delete!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete/2 .","ref":"ActivityPub.TestRepo.html#delete/2","title":"ActivityPub.TestRepo.delete/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete_all/2 .","ref":"ActivityPub.TestRepo.html#delete_all/2","title":"ActivityPub.TestRepo.delete_all/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that forces all connections in the pool to disconnect within the given interval. See Ecto.Adapters.SQL.disconnect_all/3 for more information.","ref":"ActivityPub.TestRepo.html#disconnect_all/2","title":"ActivityPub.TestRepo.disconnect_all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.exists?/2 .","ref":"ActivityPub.TestRepo.html#exists?/2","title":"ActivityPub.TestRepo.exists?/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes an EXPLAIN statement or similar depending on the adapter to obtain statistics for the given query. See Ecto.Adapters.SQL.explain/4 for more information.","ref":"ActivityPub.TestRepo.html#explain/3","title":"ActivityPub.TestRepo.explain/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get!/3 .","ref":"ActivityPub.TestRepo.html#get!/3","title":"ActivityPub.TestRepo.get!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get/3 .","ref":"ActivityPub.TestRepo.html#get/3","title":"ActivityPub.TestRepo.get/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by!/3 .","ref":"ActivityPub.TestRepo.html#get_by!/3","title":"ActivityPub.TestRepo.get_by!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by/3 .","ref":"ActivityPub.TestRepo.html#get_by/3","title":"ActivityPub.TestRepo.get_by/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_dynamic_repo/0 .","ref":"ActivityPub.TestRepo.html#get_dynamic_repo/0","title":"ActivityPub.TestRepo.get_dynamic_repo/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.in_transaction?/0 .","ref":"ActivityPub.TestRepo.html#in_transaction?/0","title":"ActivityPub.TestRepo.in_transaction?/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert!/2 .","ref":"ActivityPub.TestRepo.html#insert!/2","title":"ActivityPub.TestRepo.insert!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert/2 .","ref":"ActivityPub.TestRepo.html#insert/2","title":"ActivityPub.TestRepo.insert/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_all/3 .","ref":"ActivityPub.TestRepo.html#insert_all/3","title":"ActivityPub.TestRepo.insert_all/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update!/2 .","ref":"ActivityPub.TestRepo.html#insert_or_update!/2","title":"ActivityPub.TestRepo.insert_or_update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update/2 .","ref":"ActivityPub.TestRepo.html#insert_or_update/2","title":"ActivityPub.TestRepo.insert_or_update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.load/2 .","ref":"ActivityPub.TestRepo.html#load/2","title":"ActivityPub.TestRepo.load/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one!/2 .","ref":"ActivityPub.TestRepo.html#one!/2","title":"ActivityPub.TestRepo.one!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one/2 .","ref":"ActivityPub.TestRepo.html#one/2","title":"ActivityPub.TestRepo.one/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.preload/3 .","ref":"ActivityPub.TestRepo.html#preload/3","title":"ActivityPub.TestRepo.preload/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.prepare_query/3 .","ref":"ActivityPub.TestRepo.html#prepare_query/3","title":"ActivityPub.TestRepo.prepare_query/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.put_dynamic_repo/1 .","ref":"ActivityPub.TestRepo.html#put_dynamic_repo/1","title":"ActivityPub.TestRepo.put_dynamic_repo/1","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query. See Ecto.Adapters.SQL.query!/4 for more information.","ref":"ActivityPub.TestRepo.html#query!/3","title":"ActivityPub.TestRepo.query!/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query. See Ecto.Adapters.SQL.query/4 for more information.","ref":"ActivityPub.TestRepo.html#query/3","title":"ActivityPub.TestRepo.query/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given multi-result query. See Ecto.Adapters.SQL.query_many!/4 for more information.","ref":"ActivityPub.TestRepo.html#query_many!/3","title":"ActivityPub.TestRepo.query_many!/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given multi-result query. See Ecto.Adapters.SQL.query_many/4 for more information.","ref":"ActivityPub.TestRepo.html#query_many/3","title":"ActivityPub.TestRepo.query_many/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.reload!/2 .","ref":"ActivityPub.TestRepo.html#reload!/2","title":"ActivityPub.TestRepo.reload!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.reload/2 .","ref":"ActivityPub.TestRepo.html#reload/2","title":"ActivityPub.TestRepo.reload/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.rollback/1 .","ref":"ActivityPub.TestRepo.html#rollback/1","title":"ActivityPub.TestRepo.rollback/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.start_link/1 .","ref":"ActivityPub.TestRepo.html#start_link/1","title":"ActivityPub.TestRepo.start_link/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stop/1 .","ref":"ActivityPub.TestRepo.html#stop/1","title":"ActivityPub.TestRepo.stop/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stream/2 .","ref":"ActivityPub.TestRepo.html#stream/2","title":"ActivityPub.TestRepo.stream/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that translates the given query to SQL. See Ecto.Adapters.SQL.to_sql/3 for more information.","ref":"ActivityPub.TestRepo.html#to_sql/2","title":"ActivityPub.TestRepo.to_sql/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.transaction/2 .","ref":"ActivityPub.TestRepo.html#transaction/2","title":"ActivityPub.TestRepo.transaction/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update!/2 .","ref":"ActivityPub.TestRepo.html#update!/2","title":"ActivityPub.TestRepo.update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update/2 .","ref":"ActivityPub.TestRepo.html#update/2","title":"ActivityPub.TestRepo.update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update_all/3 .","ref":"ActivityPub.TestRepo.html#update_all/3","title":"ActivityPub.TestRepo.update_all/3","type":"function"},{"doc":"Misc functions used for federation","ref":"ActivityPub.Utils.html","title":"ActivityPub.Utils","type":"module"},{"doc":"","ref":"ActivityPub.Utils.html#actor_url/1","title":"ActivityPub.Utils.actor_url/1","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#actor?/1","title":"ActivityPub.Utils.actor?/1","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#create_context/1","title":"ActivityPub.Utils.create_context/1","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#federating?/0","title":"ActivityPub.Utils.federating?/0","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#fetch_latest_block/2","title":"ActivityPub.Utils.fetch_latest_block/2","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#fetch_latest_follow/2","title":"ActivityPub.Utils.fetch_latest_follow/2","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#generate_context_id/0","title":"ActivityPub.Utils.generate_context_id/0","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#generate_id/1","title":"ActivityPub.Utils.generate_id/1","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#generate_object_id/0","title":"ActivityPub.Utils.generate_object_id/0","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#get_ap_id/1","title":"ActivityPub.Utils.get_ap_id/1","type":"function"},{"doc":"Retruns an existing announce activity if the notice has already been announced","ref":"ActivityPub.Utils.html#get_existing_announce/2","title":"ActivityPub.Utils.get_existing_announce/2","type":"function"},{"doc":"Returns an existing like if a user already liked an object","ref":"ActivityPub.Utils.html#get_existing_like/2","title":"ActivityPub.Utils.get_existing_like/2","type":"function"},{"doc":"Inserts a full object if it is contained in an activity.","ref":"ActivityPub.Utils.html#insert_full_object/4","title":"ActivityPub.Utils.insert_full_object/4","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#is_ulid?/1","title":"ActivityPub.Utils.is_ulid?/1","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#lazy_put_activity_defaults/2","title":"ActivityPub.Utils.lazy_put_activity_defaults/2","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#lazy_put_object_defaults/2","title":"ActivityPub.Utils.lazy_put_object_defaults/2","type":"function"},{"doc":"Make announce activity data for the given actor and object","ref":"ActivityPub.Utils.html#make_announce_data/5","title":"ActivityPub.Utils.make_announce_data/5","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#make_block_data/3","title":"ActivityPub.Utils.make_block_data/3","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#make_create_data/2","title":"ActivityPub.Utils.make_create_data/2","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#make_flag_data/2","title":"ActivityPub.Utils.make_flag_data/2","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#make_follow_data/3","title":"ActivityPub.Utils.make_follow_data/3","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#make_json_ld_header/0","title":"ActivityPub.Utils.make_json_ld_header/0","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#make_like_data/3","title":"ActivityPub.Utils.make_like_data/3","type":"function"},{"doc":"Make unannounce activity data for the given actor and object","ref":"ActivityPub.Utils.html#make_unannounce_data/3","title":"ActivityPub.Utils.make_unannounce_data/3","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#make_unblock_data/4","title":"ActivityPub.Utils.make_unblock_data/4","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#make_unfollow_data/4","title":"ActivityPub.Utils.make_unfollow_data/4","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#make_unlike_data/3","title":"ActivityPub.Utils.make_unlike_data/3","type":"function"},{"doc":"Enqueues an activity for federation if it's local","ref":"ActivityPub.Utils.html#maybe_federate/1","title":"ActivityPub.Utils.maybe_federate/1","type":"function"},{"doc":"Some implementations send the actor URI as the actor field, others send the entire actor object, this function figures out what the actor's URI is based on what we have.","ref":"ActivityPub.Utils.html#normalize_params/1","title":"ActivityPub.Utils.normalize_params/1","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#object_url/1","title":"ActivityPub.Utils.object_url/1","type":"function"},{"doc":"Prepares a struct to be inserted into the objects table","ref":"ActivityPub.Utils.html#prepare_data/4","title":"ActivityPub.Utils.prepare_data/4","type":"function"},{"doc":"Determines if an object or an activity is public.","ref":"ActivityPub.Utils.html#public?/1","title":"ActivityPub.Utils.public?/1","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#public?/2","title":"ActivityPub.Utils.public?/2","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#supported_activity_types/0","title":"ActivityPub.Utils.supported_activity_types/0","type":"function"},{"doc":"","ref":"ActivityPub.Utils.html#supported_actor_types/0","title":"ActivityPub.Utils.supported_actor_types/0","type":"function"},{"doc":"Serves and fetches data (mainly actor URI) necessary for federation when only the username and host is known.","ref":"ActivityPub.WebFinger.html","title":"ActivityPub.WebFinger","type":"module"},{"doc":"Fetches webfinger data for an account given in &quot;@username@domain.tld&quot; format.","ref":"ActivityPub.WebFinger.html#finger/1","title":"ActivityPub.WebFinger.finger/1","type":"function"},{"doc":"Serves a webfinger response for the requested username.","ref":"ActivityPub.WebFinger.html#output/1","title":"ActivityPub.WebFinger.output/1","type":"function"},{"doc":"Formats gathered data into a JRD format.","ref":"ActivityPub.WebFinger.html#represent_user/1","title":"ActivityPub.WebFinger.represent_user/1","type":"function"},{"doc":"","ref":"ActivityPub.Workers.PublisherWorker.html","title":"ActivityPub.Workers.PublisherWorker","type":"module"},{"doc":"","ref":"ActivityPub.Workers.PublisherWorker.html#enqueue/3","title":"ActivityPub.Workers.PublisherWorker.enqueue/3","type":"function"},{"doc":"","ref":"ActivityPub.Workers.PublisherWorker.html#enqueueable/3","title":"ActivityPub.Workers.PublisherWorker.enqueueable/3","type":"function"},{"doc":"","ref":"ActivityPub.Workers.ReceiverWorker.html","title":"ActivityPub.Workers.ReceiverWorker","type":"module"},{"doc":"","ref":"ActivityPub.Workers.ReceiverWorker.html#enqueue/3","title":"ActivityPub.Workers.ReceiverWorker.enqueue/3","type":"function"},{"doc":"","ref":"ActivityPub.Workers.ReceiverWorker.html#enqueueable/3","title":"ActivityPub.Workers.ReceiverWorker.enqueueable/3","type":"function"},{"doc":"","ref":"ActivityPub.Workers.WorkerHelper.html","title":"ActivityPub.Workers.WorkerHelper","type":"module"},{"doc":"","ref":"ActivityPub.Workers.WorkerHelper.html#worker_args/1","title":"ActivityPub.Workers.WorkerHelper.worker_args/1","type":"function"},{"doc":"The entrypoint for defining your web interface, such as controllers, views, channels and so on. This can be used in your application as: use ActivityPubWeb , :controller use ActivityPubWeb , :view The definitions below will be executed for every view, controller, etc, so keep them short and clean, focused on imports, uses and aliases. Do NOT define functions inside the quoted expressions below. Instead, define any helper function in modules and import those modules here.","ref":"ActivityPubWeb.html","title":"ActivityPubWeb","type":"module"},{"doc":"When used, dispatch to the appropriate controller/view/etc.","ref":"ActivityPubWeb.html#__using__/1","title":"ActivityPubWeb.__using__/1","type":"macro"},{"doc":"","ref":"ActivityPubWeb.html#base_url/0","title":"ActivityPubWeb.base_url/0","type":"function"},{"doc":"","ref":"ActivityPubWeb.html#channel/0","title":"ActivityPubWeb.channel/0","type":"function"},{"doc":"","ref":"ActivityPubWeb.html#controller/0","title":"ActivityPubWeb.controller/0","type":"function"},{"doc":"","ref":"ActivityPubWeb.html#router/0","title":"ActivityPubWeb.router/0","type":"function"},{"doc":"","ref":"ActivityPubWeb.html#view/0","title":"ActivityPubWeb.view/0","type":"function"},{"doc":"Endpoints for serving objects and collections, so the ActivityPub API can be used to read information from the server. Even though we store the data in AS format, some changes need to be applied to the entity before serving it in the AP REST response. This is done in ActivityPubWeb.ActivityPubView .","ref":"ActivityPubWeb.ActivityPubController.html","title":"ActivityPubWeb.ActivityPubController","type":"module"},{"doc":"","ref":"ActivityPubWeb.ActivityPubController.html#actor/2","title":"ActivityPubWeb.ActivityPubController.actor/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.ActivityPubController.html#actor_json/2","title":"ActivityPubWeb.ActivityPubController.actor_json/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.ActivityPubController.html#ap_route_helper/1","title":"ActivityPubWeb.ActivityPubController.ap_route_helper/1","type":"function"},{"doc":"","ref":"ActivityPubWeb.ActivityPubController.html#followers/2","title":"ActivityPubWeb.ActivityPubController.followers/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.ActivityPubController.html#following/2","title":"ActivityPubWeb.ActivityPubController.following/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.ActivityPubController.html#inbox/2","title":"ActivityPubWeb.ActivityPubController.inbox/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.ActivityPubController.html#noop/2","title":"ActivityPubWeb.ActivityPubController.noop/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.ActivityPubController.html#object/2","title":"ActivityPubWeb.ActivityPubController.object/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.ActivityPubController.html#outbox/2","title":"ActivityPubWeb.ActivityPubController.outbox/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.ActorView.html","title":"ActivityPubWeb.ActorView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"ActivityPubWeb.ActorView.html#__resource__/0","title":"ActivityPubWeb.ActorView.__resource__/0","type":"function"},{"doc":"","ref":"ActivityPubWeb.ActorView.html#actor_json/1","title":"ActivityPubWeb.ActorView.actor_json/1","type":"function"},{"doc":"","ref":"ActivityPubWeb.ActorView.html#collection/4","title":"ActivityPubWeb.ActorView.collection/4","type":"function"},{"doc":"Renders the given template locally.","ref":"ActivityPubWeb.ActorView.html#render/2","title":"ActivityPubWeb.ActorView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"ActivityPubWeb.ActorView.html#template_not_found/2","title":"ActivityPubWeb.ActorView.template_not_found/2","type":"function"},{"doc":"This module defines the test case to be used by channel tests. Such tests rely on Phoenix.ChannelTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use ActivityPubWeb.ChannelCase, async: true , although this option is not recommended for other databases.","ref":"ActivityPubWeb.ChannelCase.html","title":"ActivityPubWeb.ChannelCase","type":"module"},{"doc":"This module defines the test case to be used by tests that require setting up a connection. Such tests rely on Phoenix.ConnTest and also import other functionality to make it easier to build common data structures and query the data layer. Finally, if the test case interacts with the database, we enable the SQL sandbox, so changes done to the database are reverted at the end of every test. If you are using PostgreSQL, you can even run database tests asynchronously by setting use ActivityPubWeb.ConnCase, async: true , although this option is not recommended for other databases.","ref":"ActivityPubWeb.ConnCase.html","title":"ActivityPubWeb.ConnCase","type":"module"},{"doc":"","ref":"ActivityPubWeb.Endpoint.html","title":"ActivityPubWeb.Endpoint","type":"module"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast!/3 .","ref":"ActivityPubWeb.Endpoint.html#broadcast!/3","title":"ActivityPubWeb.Endpoint.broadcast!/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast/3 .","ref":"ActivityPubWeb.Endpoint.html#broadcast/3","title":"ActivityPubWeb.Endpoint.broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from!/4 .","ref":"ActivityPubWeb.Endpoint.html#broadcast_from!/4","title":"ActivityPubWeb.Endpoint.broadcast_from!/4","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from/4 .","ref":"ActivityPubWeb.Endpoint.html#broadcast_from/4","title":"ActivityPubWeb.Endpoint.broadcast_from/4","type":"function"},{"doc":"Callback implementation for Plug.call/2 .","ref":"ActivityPubWeb.Endpoint.html#call/2","title":"ActivityPubWeb.Endpoint.call/2","type":"function"},{"doc":"Returns the child specification to start the endpoint under a supervision tree.","ref":"ActivityPubWeb.Endpoint.html#child_spec/1","title":"ActivityPubWeb.Endpoint.child_spec/1","type":"function"},{"doc":"Returns the endpoint configuration for key Returns default if the key does not exist.","ref":"ActivityPubWeb.Endpoint.html#config/2","title":"ActivityPubWeb.Endpoint.config/2","type":"function"},{"doc":"Reloads the configuration given the application environment changes.","ref":"ActivityPubWeb.Endpoint.html#config_change/2","title":"ActivityPubWeb.Endpoint.config_change/2","type":"function"},{"doc":"Returns the host for the given endpoint.","ref":"ActivityPubWeb.Endpoint.html#host/0","title":"ActivityPubWeb.Endpoint.host/0","type":"function"},{"doc":"Callback implementation for Plug.init/1 .","ref":"ActivityPubWeb.Endpoint.html#init/1","title":"ActivityPubWeb.Endpoint.init/1","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast/3 .","ref":"ActivityPubWeb.Endpoint.html#local_broadcast/3","title":"ActivityPubWeb.Endpoint.local_broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast_from/4 .","ref":"ActivityPubWeb.Endpoint.html#local_broadcast_from/4","title":"ActivityPubWeb.Endpoint.local_broadcast_from/4","type":"function"},{"doc":"Generates the path information when routing to this endpoint.","ref":"ActivityPubWeb.Endpoint.html#path/1","title":"ActivityPubWeb.Endpoint.path/1","type":"function"},{"doc":"Generates the script name.","ref":"ActivityPubWeb.Endpoint.html#script_name/0","title":"ActivityPubWeb.Endpoint.script_name/0","type":"function"},{"doc":"Starts the endpoint supervision tree. Options :log_access_url - if the access url should be logged once the endpoint starts All other options are merged into the endpoint configuration.","ref":"ActivityPubWeb.Endpoint.html#start_link/1","title":"ActivityPubWeb.Endpoint.start_link/1","type":"function"},{"doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file in priv/static . Meant to be used for Subresource Integrity with CDNs.","ref":"ActivityPubWeb.Endpoint.html#static_integrity/1","title":"ActivityPubWeb.Endpoint.static_integrity/1","type":"function"},{"doc":"Returns a two item tuple with the first item being the static_path and the second item being the static_integrity .","ref":"ActivityPubWeb.Endpoint.html#static_lookup/1","title":"ActivityPubWeb.Endpoint.static_lookup/1","type":"function"},{"doc":"Generates a route to a static file in priv/static .","ref":"ActivityPubWeb.Endpoint.html#static_path/1","title":"ActivityPubWeb.Endpoint.static_path/1","type":"function"},{"doc":"Generates the static URL without any path information. It uses the configuration under :static_url to generate such. It falls back to :url if :static_url is not set.","ref":"ActivityPubWeb.Endpoint.html#static_url/0","title":"ActivityPubWeb.Endpoint.static_url/0","type":"function"},{"doc":"Generates the endpoint base URL but as a URI struct. It uses the configuration under :url to generate such. Useful for manipulating the URL data and passing it to URL helpers.","ref":"ActivityPubWeb.Endpoint.html#struct_url/0","title":"ActivityPubWeb.Endpoint.struct_url/0","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.subscribe/2 .","ref":"ActivityPubWeb.Endpoint.html#subscribe/2","title":"ActivityPubWeb.Endpoint.subscribe/2","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.unsubscribe/1 .","ref":"ActivityPubWeb.Endpoint.html#unsubscribe/1","title":"ActivityPubWeb.Endpoint.unsubscribe/1","type":"function"},{"doc":"Generates the endpoint base URL without any path information. It uses the configuration under :url to generate such.","ref":"ActivityPubWeb.Endpoint.html#url/0","title":"ActivityPubWeb.Endpoint.url/0","type":"function"},{"doc":"Conveniences for translating and building error messages.","ref":"ActivityPubWeb.ErrorHelpers.html","title":"ActivityPubWeb.ErrorHelpers","type":"module"},{"doc":"Generates tag for inlined form input errors.","ref":"ActivityPubWeb.ErrorHelpers.html#error_tag/2","title":"ActivityPubWeb.ErrorHelpers.error_tag/2","type":"function"},{"doc":"Standard error view","ref":"ActivityPubWeb.ErrorView.html","title":"ActivityPubWeb.ErrorView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"ActivityPubWeb.ErrorView.html#__resource__/0","title":"ActivityPubWeb.ErrorView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"ActivityPubWeb.ErrorView.html#render/2","title":"ActivityPubWeb.ErrorView.render/2","type":"function"},{"doc":"By default, Phoenix returns the status message from the template name. For example, &quot;404.html&quot; becomes &quot;Not Found&quot;.","ref":"ActivityPubWeb.ErrorView.html#template_not_found/2","title":"ActivityPubWeb.ErrorView.template_not_found/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.Federator.html","title":"ActivityPubWeb.Federator","type":"module"},{"doc":"","ref":"ActivityPubWeb.Federator.html#incoming_ap_doc/1","title":"ActivityPubWeb.Federator.incoming_ap_doc/1","type":"function"},{"doc":"","ref":"ActivityPubWeb.Federator.html#perform/2","title":"ActivityPubWeb.Federator.perform/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.Federator.html#perform/3","title":"ActivityPubWeb.Federator.perform/3","type":"function"},{"doc":"","ref":"ActivityPubWeb.Federator.html#publish/1","title":"ActivityPubWeb.Federator.publish/1","type":"function"},{"doc":"Defines the contract used by federation implementations to publish messages to their peers.","ref":"ActivityPubWeb.Federator.Publisher.html","title":"ActivityPubWeb.Federator.Publisher","type":"behaviour"},{"doc":"Enqueue publishing a single activity.","ref":"ActivityPubWeb.Federator.Publisher.html#enqueue_one/2","title":"ActivityPubWeb.Federator.Publisher.enqueue_one/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.Federator.Publisher.html#gather_webfinger_links/1","title":"ActivityPubWeb.Federator.Publisher.gather_webfinger_links/1","type":"function"},{"doc":"Gathers links used by an outgoing federation module for WebFinger output.","ref":"ActivityPubWeb.Federator.Publisher.html#c:gather_webfinger_links/1","title":"ActivityPubWeb.Federator.Publisher.gather_webfinger_links/1","type":"callback"},{"doc":"Determine whether an activity can be relayed using the federation module.","ref":"ActivityPubWeb.Federator.Publisher.html#c:is_representable?/1","title":"ActivityPubWeb.Federator.Publisher.is_representable?/1","type":"callback"},{"doc":"","ref":"ActivityPubWeb.Federator.Publisher.html#publish/2","title":"ActivityPubWeb.Federator.Publisher.publish/2","type":"function"},{"doc":"Relays an activity to all specified peers.","ref":"ActivityPubWeb.Federator.Publisher.html#c:publish/2","title":"ActivityPubWeb.Federator.Publisher.publish/2","type":"callback"},{"doc":"Relays an activity to a specified peer, determined by the parameters. The parameters used are controlled by the federation module.","ref":"ActivityPubWeb.Federator.Publisher.html#c:publish_one/1","title":"ActivityPubWeb.Federator.Publisher.publish_one/1","type":"callback"},{"doc":"","ref":"ActivityPubWeb.ObjectView.html","title":"ActivityPubWeb.ObjectView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"ActivityPubWeb.ObjectView.html#__resource__/0","title":"ActivityPubWeb.ObjectView.__resource__/0","type":"function"},{"doc":"","ref":"ActivityPubWeb.ObjectView.html#collection/4","title":"ActivityPubWeb.ObjectView.collection/4","type":"function"},{"doc":"Renders the given template locally.","ref":"ActivityPubWeb.ObjectView.html#render/2","title":"ActivityPubWeb.ObjectView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"ActivityPubWeb.ObjectView.html#template_not_found/2","title":"ActivityPubWeb.ObjectView.template_not_found/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.Plugs.HTTPSignaturePlug.html","title":"ActivityPubWeb.Plugs.HTTPSignaturePlug","type":"module"},{"doc":"","ref":"ActivityPubWeb.Plugs.HTTPSignaturePlug.html#call/2","title":"ActivityPubWeb.Plugs.HTTPSignaturePlug.call/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.Plugs.HTTPSignaturePlug.html#init/1","title":"ActivityPubWeb.Plugs.HTTPSignaturePlug.init/1","type":"function"},{"doc":"","ref":"ActivityPubWeb.Publisher.html","title":"ActivityPubWeb.Publisher","type":"module"},{"doc":"Determine a user inbox to use based on heuristics. These heuristics are based on an approximation of the sharedInbox rules in the ActivityPub specification . Please do not edit this function (or its children) without reading the spec, as editing the code is likely to introduce some breakage without some familiarity.","ref":"ActivityPubWeb.Publisher.html#determine_inbox/2","title":"ActivityPubWeb.Publisher.determine_inbox/2","type":"function"},{"doc":"Callback implementation for ActivityPubWeb.Federator.Publisher.gather_webfinger_links/1 .","ref":"ActivityPubWeb.Publisher.html#gather_webfinger_links/1","title":"ActivityPubWeb.Publisher.gather_webfinger_links/1","type":"function"},{"doc":"Callback implementation for ActivityPubWeb.Federator.Publisher.is_representable?/1 .","ref":"ActivityPubWeb.Publisher.html#is_representable?/1","title":"ActivityPubWeb.Publisher.is_representable?/1","type":"function"},{"doc":"If you put the URL of the shared inbox of an ActivityPub instance in the following env variable, all public content will be pushed there via AP federation for search indexing purposes: PUSH_ALL_PUBLIC_CONTENT_TO_INSTANCE #TODO: move to adapter","ref":"ActivityPubWeb.Publisher.html#maybe_federate_to_search_index/2","title":"ActivityPubWeb.Publisher.maybe_federate_to_search_index/2","type":"function"},{"doc":"Callback implementation for ActivityPubWeb.Federator.Publisher.publish/2 .","ref":"ActivityPubWeb.Publisher.html#publish/2","title":"ActivityPubWeb.Publisher.publish/2","type":"function"},{"doc":"Publish a single message to a peer. Takes a struct with the following parameters set: inbox : the inbox to publish to json : the JSON message body representing the ActivityPub message actor : the actor which is signing the message id : the ActivityStreams URI of the message","ref":"ActivityPubWeb.Publisher.html#publish_one/1","title":"ActivityPubWeb.Publisher.publish_one/1","type":"function"},{"doc":"","ref":"ActivityPubWeb.RedirectController.html","title":"ActivityPubWeb.RedirectController","type":"module"},{"doc":"","ref":"ActivityPubWeb.RedirectController.html#actor/2","title":"ActivityPubWeb.RedirectController.actor/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.RedirectController.html#object/2","title":"ActivityPubWeb.RedirectController.object/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.RedirectController.html#remote_interaction/2","title":"ActivityPubWeb.RedirectController.remote_interaction/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.Router.html","title":"ActivityPubWeb.Router","type":"module"},{"doc":"","ref":"ActivityPubWeb.Telemetry.html","title":"ActivityPubWeb.Telemetry","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"ActivityPubWeb.Telemetry.html#child_spec/1","title":"ActivityPubWeb.Telemetry.child_spec/1","type":"function"},{"doc":"","ref":"ActivityPubWeb.Telemetry.html#metrics/0","title":"ActivityPubWeb.Telemetry.metrics/0","type":"function"},{"doc":"","ref":"ActivityPubWeb.Telemetry.html#start_link/1","title":"ActivityPubWeb.Telemetry.start_link/1","type":"function"},{"doc":"","ref":"ActivityPubWeb.TestRouter.html","title":"ActivityPubWeb.TestRouter","type":"module"},{"doc":"","ref":"ActivityPubWeb.TestRouter.html#activity_pub/2","title":"ActivityPubWeb.TestRouter.activity_pub/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.TestRouter.html#api/2","title":"ActivityPubWeb.TestRouter.api/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.TestRouter.html#browser/2","title":"ActivityPubWeb.TestRouter.browser/2","type":"function"},{"doc":"Callback invoked by Plug on every request.","ref":"ActivityPubWeb.TestRouter.html#call/2","title":"ActivityPubWeb.TestRouter.call/2","type":"function"},{"doc":"Callback required by Plug that initializes the router for serving web requests.","ref":"ActivityPubWeb.TestRouter.html#init/1","title":"ActivityPubWeb.TestRouter.init/1","type":"function"},{"doc":"","ref":"ActivityPubWeb.TestRouter.html#signed_activity_pub/2","title":"ActivityPubWeb.TestRouter.signed_activity_pub/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.TestRouter.html#well_known/2","title":"ActivityPubWeb.TestRouter.well_known/2","type":"function"},{"doc":"Module with named helpers generated from ActivityPubWeb.TestRouter.","ref":"ActivityPubWeb.TestRouter.Helpers.html","title":"ActivityPubWeb.TestRouter.Helpers","type":"module"},{"doc":"","ref":"ActivityPubWeb.TestRouter.Helpers.html#activity_pub_path/2","title":"ActivityPubWeb.TestRouter.Helpers.activity_pub_path/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.TestRouter.Helpers.html#activity_pub_path/3","title":"ActivityPubWeb.TestRouter.Helpers.activity_pub_path/3","type":"function"},{"doc":"","ref":"ActivityPubWeb.TestRouter.Helpers.html#activity_pub_path/4","title":"ActivityPubWeb.TestRouter.Helpers.activity_pub_path/4","type":"function"},{"doc":"","ref":"ActivityPubWeb.TestRouter.Helpers.html#activity_pub_url/2","title":"ActivityPubWeb.TestRouter.Helpers.activity_pub_url/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.TestRouter.Helpers.html#activity_pub_url/3","title":"ActivityPubWeb.TestRouter.Helpers.activity_pub_url/3","type":"function"},{"doc":"","ref":"ActivityPubWeb.TestRouter.Helpers.html#activity_pub_url/4","title":"ActivityPubWeb.TestRouter.Helpers.activity_pub_url/4","type":"function"},{"doc":"","ref":"ActivityPubWeb.TestRouter.Helpers.html#live_dashboard_path/2","title":"ActivityPubWeb.TestRouter.Helpers.live_dashboard_path/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.TestRouter.Helpers.html#live_dashboard_path/3","title":"ActivityPubWeb.TestRouter.Helpers.live_dashboard_path/3","type":"function"},{"doc":"","ref":"ActivityPubWeb.TestRouter.Helpers.html#live_dashboard_path/4","title":"ActivityPubWeb.TestRouter.Helpers.live_dashboard_path/4","type":"function"},{"doc":"","ref":"ActivityPubWeb.TestRouter.Helpers.html#live_dashboard_path/5","title":"ActivityPubWeb.TestRouter.Helpers.live_dashboard_path/5","type":"function"},{"doc":"","ref":"ActivityPubWeb.TestRouter.Helpers.html#live_dashboard_url/2","title":"ActivityPubWeb.TestRouter.Helpers.live_dashboard_url/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.TestRouter.Helpers.html#live_dashboard_url/3","title":"ActivityPubWeb.TestRouter.Helpers.live_dashboard_url/3","type":"function"},{"doc":"","ref":"ActivityPubWeb.TestRouter.Helpers.html#live_dashboard_url/4","title":"ActivityPubWeb.TestRouter.Helpers.live_dashboard_url/4","type":"function"},{"doc":"","ref":"ActivityPubWeb.TestRouter.Helpers.html#live_dashboard_url/5","title":"ActivityPubWeb.TestRouter.Helpers.live_dashboard_url/5","type":"function"},{"doc":"Generates the path information including any necessary prefix.","ref":"ActivityPubWeb.TestRouter.Helpers.html#path/2","title":"ActivityPubWeb.TestRouter.Helpers.path/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.TestRouter.Helpers.html#redirect_path/2","title":"ActivityPubWeb.TestRouter.Helpers.redirect_path/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.TestRouter.Helpers.html#redirect_path/3","title":"ActivityPubWeb.TestRouter.Helpers.redirect_path/3","type":"function"},{"doc":"","ref":"ActivityPubWeb.TestRouter.Helpers.html#redirect_url/2","title":"ActivityPubWeb.TestRouter.Helpers.redirect_url/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.TestRouter.Helpers.html#redirect_url/3","title":"ActivityPubWeb.TestRouter.Helpers.redirect_url/3","type":"function"},{"doc":"Generates an integrity hash to a static asset given its file path.","ref":"ActivityPubWeb.TestRouter.Helpers.html#static_integrity/2","title":"ActivityPubWeb.TestRouter.Helpers.static_integrity/2","type":"function"},{"doc":"Generates path to a static asset given its file path.","ref":"ActivityPubWeb.TestRouter.Helpers.html#static_path/2","title":"ActivityPubWeb.TestRouter.Helpers.static_path/2","type":"function"},{"doc":"Generates url to a static asset given its file path.","ref":"ActivityPubWeb.TestRouter.Helpers.html#static_url/2","title":"ActivityPubWeb.TestRouter.Helpers.static_url/2","type":"function"},{"doc":"Generates the connection/endpoint base URL without any path information.","ref":"ActivityPubWeb.TestRouter.Helpers.html#url/1","title":"ActivityPubWeb.TestRouter.Helpers.url/1","type":"function"},{"doc":"","ref":"ActivityPubWeb.TestRouter.Helpers.html#web_finger_path/2","title":"ActivityPubWeb.TestRouter.Helpers.web_finger_path/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.TestRouter.Helpers.html#web_finger_path/3","title":"ActivityPubWeb.TestRouter.Helpers.web_finger_path/3","type":"function"},{"doc":"","ref":"ActivityPubWeb.TestRouter.Helpers.html#web_finger_url/2","title":"ActivityPubWeb.TestRouter.Helpers.web_finger_url/2","type":"function"},{"doc":"","ref":"ActivityPubWeb.TestRouter.Helpers.html#web_finger_url/3","title":"ActivityPubWeb.TestRouter.Helpers.web_finger_url/3","type":"function"},{"doc":"This module normalises outgoing data to conform with AS2/AP specs and handles incoming objects and activities","ref":"ActivityPubWeb.Transmogrifier.html","title":"ActivityPubWeb.Transmogrifier","type":"module"},{"doc":"","ref":"ActivityPubWeb.Transmogrifier.html#fix_actor/1","title":"ActivityPubWeb.Transmogrifier.fix_actor/1","type":"function"},{"doc":"Modifies an incoming AP object (mastodon format) to our internal format.","ref":"ActivityPubWeb.Transmogrifier.html#fix_object/1","title":"ActivityPubWeb.Transmogrifier.fix_object/1","type":"function"},{"doc":"Handles incoming data, inserts it into the database and triggers side effects if the data is a supported activity type.","ref":"ActivityPubWeb.Transmogrifier.html#handle_incoming/1","title":"ActivityPubWeb.Transmogrifier.handle_incoming/1","type":"function"},{"doc":"Normalises and inserts an incoming AS2 object. Returns Object.","ref":"ActivityPubWeb.Transmogrifier.html#handle_object/1","title":"ActivityPubWeb.Transmogrifier.handle_object/1","type":"function"},{"doc":"","ref":"ActivityPubWeb.Transmogrifier.html#prepare_object/1","title":"ActivityPubWeb.Transmogrifier.prepare_object/1","type":"function"},{"doc":"Translates MN Entity to an AP compatible format","ref":"ActivityPubWeb.Transmogrifier.html#prepare_outgoing/1","title":"ActivityPubWeb.Transmogrifier.prepare_outgoing/1","type":"function"},{"doc":"","ref":"ActivityPubWeb.UserSocket.html","title":"ActivityPubWeb.UserSocket","type":"module"},{"doc":"","ref":"ActivityPubWeb.WebFingerController.html","title":"ActivityPubWeb.WebFingerController","type":"module"},{"doc":"","ref":"ActivityPubWeb.WebFingerController.html#webfinger/2","title":"ActivityPubWeb.WebFingerController.webfinger/2","type":"function"},{"doc":"A handful of (mostly) arrow macros with superpowers.","ref":"Arrows.html","title":"Arrows","type":"module"},{"doc":"Like || , except only defaults if the left is nil (i.e. false is valid)","ref":"Arrows.html#%3C%7C%3E/2","title":"Arrows.<|>/2","type":"macro"},{"doc":"Like || , except with the logic applied by ~&gt;","ref":"Arrows.html#%3C~%3E/2","title":"Arrows.<~>/2","type":"macro"},{"doc":"","ref":"Arrows.html#from_ok/1","title":"Arrows.from_ok/1","type":"function"},{"doc":"","ref":"Arrows.html#ok/1","title":"Arrows.ok/1","type":"function"},{"doc":"","ref":"Arrows.html#ok_or/2","title":"Arrows.ok_or/2","type":"function"},{"doc":"","ref":"Arrows.html#to_ok/1","title":"Arrows.to_ok/1","type":"function"},{"doc":"A more flexible drop-in replacement for the standard elixir pipe operator. Special features are unlocked when using the ... (ellipsis) on the right hand side: The right hand side need not be a function, it can be any expression containing the ellipsis. The ellipsis will be replaced with the result of evaluating the hand side expression. You may use the ellipsis multiple times and the left hand side will be calculated exactly once. You can do crazy stuff with the ellipsis, but remember that people have to read it!","ref":"Arrows.html#%7C%3E/2","title":"Arrows.|>/2","type":"macro"},{"doc":"Like OK.~&gt;","ref":"Arrows.html#~%3E/2","title":"Arrows.~>/2","type":"macro"},{"doc":"","ref":"DummyAdapter.html","title":"DummyAdapter","type":"module"},{"doc":"query_filter brings convenience and shortens the boilterplate of ecto queries Common filters available include: preload - Preloads fields onto the query results start_date - Query for items inserted after this date end_date - Query for items inserted before this date before - Get items with IDs before this value after - Get items with IDs after this value ids - Get items with a list of ids first - Gets the first n items last - Gets the last n items limit - Gets the first n items offset - Offsets limit by n items search - Warning: This requires schemas using this to have a &amp;by_search(query, val) function You are also able to filter on any natural field of a model, as well as use gte/gt lte/lt like/ilike is_nil/not(is_nil) query_filter ( User , %{ name : %{ ilike : &quot;steve&quot; } } ) query_filter ( User , %{ name : %{ ilike : &quot;steve&quot; } } , :last_name , :asc ) query_filter ( User , %{ name : %{ age : %{ gte : 18 , lte : 30 } } } ) query_filter ( User , %{ name : %{ is_banned : %{ != : nil } } } ) query_filter ( User , %{ name : %{ is_banned : %{ == : nil } } } ) my_query = query_filter ( User , %{ name : &quot;Billy&quot; } ) query_filter ( my_query , %{ last_name : &quot;Joe&quot; } )","ref":"EctoSparkles.html","title":"EctoSparkles","type":"module"},{"doc":"join_preload is a helper for preloading associations using joins. By default, Ecto preloads associations using a separate query for each association, which can degrade performance. You could make it run faster by using a combination of join/preload, but that requires a bit of boilerplate (see example below). With EctoSparkles , you can accomplish this with just one line of code. Example using just Ecto import Ecto.Query Invoice |&gt; join ( :left , [ i ] , assoc ( i , :customer ) , as : :customer ) |&gt; join ( :left , [ i , c ] , assoc ( c , :account ) , as : :account ) |&gt; join ( :left , [ i ] , assoc ( i , :lines ) , as : :lines ) |&gt; preload ( [ lines : v , customers : c , account : a ] , lines : v , customer : { c , [ a : account ] } ) |&gt; Repo . all ( ) Example using join_preload import EctoSparkles Invoice |&gt; join_preload ( [ :customer , :account ] ) |&gt; join_preload ( [ :lines ] ) |&gt; Repo . all ( )","ref":"EctoSparkles.html#join_preload/2","title":"EctoSparkles.join_preload/2","type":"macro"},{"doc":"AKA join_preload++ . It's more powerful, but it does it with more (and different!) syntax. e.g. proload ( query , activity : [ :verb , :boost_count , :like_count , :replied , # relations under object will have their aliases prefixed with object_, i.e. # :object_message, :object_post, :object_post_content # the original names will still be used for the associations. object : { &quot;object_&quot; , [ :message , :post , :post_content ] } ] )","ref":"EctoSparkles.html#proload/3","title":"EctoSparkles.proload/3","type":"macro"},{"doc":"","ref":"EctoSparkles.html#query_filter/4","title":"EctoSparkles.query_filter/4","type":"function"},{"doc":"reusable_join is similar to Ecto.Query.join/{4,5} , but can be called multiple times with the same alias. Note that only the first join operation is performed, the subsequent ones that use the same alias are just ignored. Also note that because of this behaviour, it is mandatory to specify an alias when using this function. This is helpful when you need to perform a join while building queries one filter at a time, because the same filter could be used multiple times or you could have multiple filters that require the same join, which poses a problem with how the filter/3 callback work, as you need to return a dynamic with the filtering, which means that the join must have an alias, and by default Ecto raises an error when you add multiple joins with the same alias. To solve this, it is recommended to use this macro instead of the default Ecto.Query.join/{4,5} , in which case there will be only one join in the query that can be reused by multiple filters.","ref":"EctoSparkles.html#reusable_join/5","title":"EctoSparkles.reusable_join/5","type":"macro"},{"doc":"Runs ecto migrations automatically on startup (add this to your app's supervision tree)","ref":"EctoSparkles.AutoMigrator.html","title":"EctoSparkles.AutoMigrator","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"EctoSparkles.AutoMigrator.html#child_spec/1","title":"EctoSparkles.AutoMigrator.child_spec/1","type":"function"},{"doc":"Callback implementation for GenServer.init/1 .","ref":"EctoSparkles.AutoMigrator.html#init/1","title":"EctoSparkles.AutoMigrator.init/1","type":"function"},{"doc":"","ref":"EctoSparkles.AutoMigrator.html#start_link/1","title":"EctoSparkles.AutoMigrator.start_link/1","type":"function"},{"doc":"","ref":"EctoSparkles.AutoMigrator.html#startup_migrations/0","title":"EctoSparkles.AutoMigrator.startup_migrations/0","type":"function"},{"doc":"Helper functions for changesets","ref":"EctoSparkles.Changesets.html","title":"EctoSparkles.Changesets","type":"module"},{"doc":"If a changeset includes a change to bool_field , we ensure that the timestamp field is updated if required. In the case of true, this means setting it to now if it is null and in the case of false, this means setting it to null if it is not null.","ref":"EctoSparkles.Changesets.html#change_synced_timestamp/3","title":"EctoSparkles.Changesets.change_synced_timestamp/3","type":"function"},{"doc":"If a changeset includes a change to bool_field , we change two timestamps columns (representing activated and deactivated) so that only one is set to a non-null value at a time.","ref":"EctoSparkles.Changesets.html#change_synced_timestamps/5","title":"EctoSparkles.Changesets.change_synced_timestamps/5","type":"function"},{"doc":"","ref":"EctoSparkles.Changesets.html#validate_exactly_one/3","title":"EctoSparkles.Changesets.validate_exactly_one/3","type":"function"},{"doc":"Validates that a URL uses HTTP(S) and has a correct format.","ref":"EctoSparkles.Changesets.html#validate_http_url/2","title":"EctoSparkles.Changesets.validate_http_url/2","type":"function"},{"doc":"Validates that the entity has not expired","ref":"EctoSparkles.Changesets.html#validate_not_expired/4","title":"EctoSparkles.Changesets.validate_not_expired/4","type":"function"},{"doc":"","ref":"EctoSparkles.Changesets.Errors.html","title":"EctoSparkles.Changesets.Errors","type":"module"},{"doc":"","ref":"EctoSparkles.Changesets.Errors.html#changeset_errors_string/2","title":"EctoSparkles.Changesets.Errors.changeset_errors_string/2","type":"function"},{"doc":"","ref":"EctoSparkles.Changesets.Errors.html#error/2","title":"EctoSparkles.Changesets.Errors.error/2","type":"function"},{"doc":"A custom Ecto type for handling the serialization of arbitrary data types stored as binary data in the database. Requires the underlying DB field to be a binary.","ref":"EctoSparkles.ErlangTermBinary.html","title":"EctoSparkles.ErlangTermBinary","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"EctoSparkles.ErlangTermBinary.html#cast/1","title":"EctoSparkles.ErlangTermBinary.cast/1","type":"function"},{"doc":"Provides custom casting rules for params. Nothing changes here. We only need to handle deserialization.","ref":"EctoSparkles.ErlangTermBinary.html#cast/2","title":"EctoSparkles.ErlangTermBinary.cast/2","type":"function"},{"doc":"Converting the data structure to binary for storage.","ref":"EctoSparkles.ErlangTermBinary.html#dump/1","title":"EctoSparkles.ErlangTermBinary.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"EctoSparkles.ErlangTermBinary.html#embed_as/1","title":"EctoSparkles.ErlangTermBinary.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"EctoSparkles.ErlangTermBinary.html#equal?/2","title":"EctoSparkles.ErlangTermBinary.equal?/2","type":"function"},{"doc":"Convert the raw binary value from the database back to the desired term.","ref":"EctoSparkles.ErlangTermBinary.html#load/1","title":"EctoSparkles.ErlangTermBinary.load/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0 .","ref":"EctoSparkles.ErlangTermBinary.html#type/0","title":"EctoSparkles.ErlangTermBinary.type/0","type":"function"},{"doc":"Log slow Ecto queries","ref":"EctoSparkles.Log.html","title":"EctoSparkles.Log","type":"module"},{"doc":"","ref":"EctoSparkles.Log.html#format_log/4","title":"EctoSparkles.Log.format_log/4","type":"function"},{"doc":"","ref":"EctoSparkles.Log.html#handle_event/4","title":"EctoSparkles.Log.handle_event/4","type":"function"},{"doc":"","ref":"EctoSparkles.Log.html#log_query/4","title":"EctoSparkles.Log.log_query/4","type":"function"},{"doc":"","ref":"EctoSparkles.Log.html#maybe_trace/3","title":"EctoSparkles.Log.maybe_trace/3","type":"function"},{"doc":"","ref":"EctoSparkles.Log.html#setup/1","title":"EctoSparkles.Log.setup/1","type":"function"},{"doc":"","ref":"EctoSparkles.Migrator.html","title":"EctoSparkles.Migrator","type":"module"},{"doc":"","ref":"EctoSparkles.Migrator.html#create/0","title":"EctoSparkles.Migrator.create/0","type":"function"},{"doc":"","ref":"EctoSparkles.Migrator.html#create/1","title":"EctoSparkles.Migrator.create/1","type":"function"},{"doc":"","ref":"EctoSparkles.Migrator.html#migrate/0","title":"EctoSparkles.Migrator.migrate/0","type":"function"},{"doc":"","ref":"EctoSparkles.Migrator.html#migrate/1","title":"EctoSparkles.Migrator.migrate/1","type":"function"},{"doc":"","ref":"EctoSparkles.Migrator.html#rollback/2","title":"EctoSparkles.Migrator.rollback/2","type":"function"},{"doc":"","ref":"EctoSparkles.Migrator.html#rollback_all/0","title":"EctoSparkles.Migrator.rollback_all/0","type":"function"},{"doc":"","ref":"EctoSparkles.Migrator.html#rollback_all/1","title":"EctoSparkles.Migrator.rollback_all/1","type":"function"},{"doc":"","ref":"EctoSparkles.Migrator.html#rollback_to/1","title":"EctoSparkles.Migrator.rollback_to/1","type":"function"},{"doc":"","ref":"EctoSparkles.Migrator.html#rollback_to/2","title":"EctoSparkles.Migrator.rollback_to/2","type":"function"},{"doc":"Print the migration status for configured Repos' migrations.","ref":"EctoSparkles.Migrator.html#status/0","title":"EctoSparkles.Migrator.status/0","type":"function"},{"doc":"Provides functions for sanitising input on Ecto.Changeset string fields.","ref":"EctoSparkles.SanitiseStrings.html","title":"EctoSparkles.SanitiseStrings","type":"module"},{"doc":"","ref":"EctoSparkles.SanitiseStrings.html#clean_html/2","title":"EctoSparkles.SanitiseStrings.clean_html/2","type":"function"},{"doc":"","ref":"EctoSparkles.SanitiseStrings.html#sanitise_strings/2","title":"EctoSparkles.SanitiseStrings.sanitise_strings/2","type":"function"},{"doc":"Sanitises all changes in the given changeset that apply to field which are of the :string Ecto type. By default it uses the HtmlSanitizeEx.strip_tags/1 function on any change that satisfies all of the following conditions: The field associated with the change is of the type :string . The field associated with the change is not in the blacklisted_fields list of opts as defined using the :except key in opts . Note that this function will change the value in the :changes map of an %Ecto.Changeset{} struct if the given changes are sanitized. Examples iex&gt; attrs = %{ string_field : &quot;&lt;script&gt;Bad&lt;/script&gt;&quot; } iex&gt; result_changeset = ...&gt; attrs ...&gt; |&gt; FakeEctoSchema . changeset ( ) ...&gt; |&gt; EctoSparkles.SanitiseStrings . strip_all_tags ( ) iex&gt; result_changeset . changes %{ string_field : &quot;Bad&quot; } Fields can be exempted from sanitization via the :except option. iex&gt; attrs = %{ string_field : &quot;&lt;script&gt;Bad&lt;/script&gt;&quot; } iex&gt; result_changeset = ...&gt; attrs ...&gt; |&gt; FakeEctoSchema . changeset ( ) ...&gt; |&gt; EctoSparkles.SanitiseStrings . strip_all_tags ( except : [ :string_field ] ) iex&gt; result_changeset . changes %{ string_field : &quot;&lt;script&gt;Bad&lt;/script&gt;&quot; } You can also specify a specific scrubber (by passing a function as reference): ies&gt; attrs ...&gt; |&gt; FakeEctoSchema . changeset ( ) ...&gt; |&gt; EctoSparkles.SanitiseStrings . sanitise_strings ( scrubber : HtmlSanitizeEx.Scrubber . html5 / 1 )","ref":"EctoSparkles.SanitiseStrings.html#strip_all_tags/2","title":"EctoSparkles.SanitiseStrings.strip_all_tags/2","type":"function"},{"doc":"Module for converting emoticons and emoji names to real emojis","ref":"Emote.html","title":"Emote","type":"module"},{"doc":"Converts text in a way that it replaces mapped emojis to real emojis.","ref":"Emote.html#convert_text/1","title":"Emote.convert_text/1","type":"function"},{"doc":"Converts mapping to emoji, eg &quot;:face_with_ok_gesture:&quot; to 🙆, returns original text when emoji not found, helper function for convert_text.","ref":"Emote.html#convert_word/1","title":"Emote.convert_word/1","type":"function"},{"doc":"Converts emoticon or name to emoji, eg &quot;:face_with_ok_gesture:&quot; to 🙆, with fallback returning nil if emoji not found.","ref":"Emote.html#lookup/1","title":"Emote.lookup/1","type":"function"},{"doc":"Module for making and processing AWS requests.","ref":"ExAws.html","title":"ExAws","type":"module"},{"doc":"Perform an AWS request, raise if it fails. Same as request/1,2 except it will either return the successful response from AWS or raise an exception.","ref":"ExAws.html#request!/2","title":"ExAws.request!/2","type":"function"},{"doc":"Perform an AWS request. First build an operation from one of the services, and then pass it to this function to perform it. If you want to build an operation manually, see: ExAws.Operation This function takes an optional second parameter of configuration overrides. This is useful if you want to have certain configuration changed on a per request basis. Also you can configure telemetry metrics with: :telemetry_event - The telemetry event name to dispatch the event under. Defaults to [:ex_aws, :request] . :telemetry_options - Extra options to attach to telemetry event name. Examples If you have one of the service modules installed, you can just use those service modules like this: ExAws.S3 . list_buckets |&gt; ExAws . request ExAws.S3 . list_buckets |&gt; ExAws . request ( region : &quot;eu-west-1&quot; ) ExAws.Dynamo . get_object ( &quot;users&quot; , &quot;foo@bar.com&quot; ) |&gt; ExAws . request Alternatively you can create operation structs manually for services that aren't supported: op = % ExAws.Operation.JSON { http_method : :post , service : :dynamodb , headers : [ { &quot;x-amz-target&quot; , &quot;DynamoDB_20120810.ListTables&quot; } , { &quot;content-type&quot; , &quot;application/x-amz-json-1.0&quot; } ] , } ExAws . request ( op ) Telemetry events The following events are published: [:ex_aws, :request, :start] - dispatched on start every request sent to the AWS. [:ex_aws, :request, :stop] - dispatched on every response from AWS. [:ex_aws, :request, :exception] - dispatched after exceptions on request sent to AWS. With :metadata map including the following fields: :result - the request result: :ok or :error :attempt - the attempt number :service - the AWS service :options - extra options given to the repo operation under :telemetry_options","ref":"ExAws.html#request/2","title":"ExAws.request/2","type":"function"},{"doc":"Return a stream for the AWS resource. Examples ExAws.S3 . list_objects ( &quot;my-bucket&quot; ) |&gt; ExAws . stream!","ref":"ExAws.html#stream!/2","title":"ExAws.stream!/2","type":"function"},{"doc":"A behaviour definition for the core operations of ExAws. ExAws implements this behaviour.","ref":"ExAws.Behaviour.html","title":"ExAws.Behaviour","type":"behaviour"},{"doc":"See ExAws.request!/2 .","ref":"ExAws.Behaviour.html#c:request!/1","title":"ExAws.Behaviour.request!/1","type":"callback"},{"doc":"See ExAws.request!/2 .","ref":"ExAws.Behaviour.html#c:request!/2","title":"ExAws.Behaviour.request!/2","type":"callback"},{"doc":"See ExAws.request/2 .","ref":"ExAws.Behaviour.html#c:request/1","title":"ExAws.Behaviour.request/1","type":"callback"},{"doc":"See ExAws.request/2 .","ref":"ExAws.Behaviour.html#c:request/2","title":"ExAws.Behaviour.request/2","type":"callback"},{"doc":"See ExAws.stream!/2 .","ref":"ExAws.Behaviour.html#c:stream!/1","title":"ExAws.Behaviour.stream!/1","type":"callback"},{"doc":"See ExAws.stream!/2 .","ref":"ExAws.Behaviour.html#c:stream!/2","title":"ExAws.Behaviour.stream!/2","type":"callback"},{"doc":"Generates the configuration for a service. It starts with the defaults for a given environment and then merges in the common config from the ex_aws config root, and then finally any config specified for the particular service.","ref":"ExAws.Config.html","title":"ExAws.Config","type":"module"},{"doc":"","ref":"ExAws.Config.html#awscli_auth_adapter/0","title":"ExAws.Config.awscli_auth_adapter/0","type":"function"},{"doc":"","ref":"ExAws.Config.html#awscli_auth_credentials/2","title":"ExAws.Config.awscli_auth_credentials/2","type":"function"},{"doc":"","ref":"ExAws.Config.html#build_base/2","title":"ExAws.Config.build_base/2","type":"function"},{"doc":"Builds a minimal HTTP configuration.","ref":"ExAws.Config.html#http_config/2","title":"ExAws.Config.http_config/2","type":"function"},{"doc":"Builds a complete set of config for an operation. Defaults are pulled from ExAws.Config.Defaults Common values set via e.g config :ex_aws are merged in. Keys set on the individual service e.g config :ex_aws, :s3 are merged in Finally, any configuration overrides are merged in","ref":"ExAws.Config.html#new/2","title":"ExAws.Config.new/2","type":"function"},{"doc":"","ref":"ExAws.Config.html#parse_host_for_region/1","title":"ExAws.Config.parse_host_for_region/1","type":"function"},{"doc":"","ref":"ExAws.Config.html#retrieve_runtime_config/1","title":"ExAws.Config.retrieve_runtime_config/1","type":"function"},{"doc":"","ref":"ExAws.Config.html#retrieve_runtime_value/2","title":"ExAws.Config.retrieve_runtime_value/2","type":"function"},{"doc":"","ref":"ExAws.Config.html#t:t/0","title":"ExAws.Config.t/0","type":"type"},{"doc":"Defaults for each service","ref":"ExAws.Config.Defaults.html","title":"ExAws.Config.Defaults","type":"module"},{"doc":"","ref":"ExAws.Config.Defaults.html#apply_defaults/4","title":"ExAws.Config.Defaults.apply_defaults/4","type":"function"},{"doc":"Retrieve the default configuration for a service.","ref":"ExAws.Config.Defaults.html#defaults/1","title":"ExAws.Config.Defaults.defaults/1","type":"function"},{"doc":"","ref":"ExAws.Config.Defaults.html#get/2","title":"ExAws.Config.Defaults.get/2","type":"function"},{"doc":"","ref":"ExAws.Config.Defaults.html#host/2","title":"ExAws.Config.Defaults.host/2","type":"function"},{"doc":"Specifies expected behaviour of a credentials provider. A credentials initializer provider is a module that fetches the AWS credentials from different sources.","ref":"ExAws.CredentialsIni.Provider.html","title":"ExAws.CredentialsIni.Provider","type":"behaviour"},{"doc":"","ref":"ExAws.CredentialsIni.Provider.html#c:security_credentials/1","title":"ExAws.CredentialsIni.Provider.security_credentials/1","type":"callback"},{"doc":"","ref":"ExAws.CredentialsIni.Provider.html#t:credentials/0","title":"ExAws.CredentialsIni.Provider.credentials/0","type":"type"},{"doc":"","ref":"ExAws.CredentialsIni.Provider.html#t:profile/0","title":"ExAws.CredentialsIni.Provider.profile/0","type":"type"},{"doc":"A generic AWS error.","ref":"ExAws.Error.html","title":"ExAws.Error","type":"exception"},{"doc":"For use with IMDSv2, this module retrieves the metadata session token and refreshes it before expiration.","ref":"ExAws.InstanceMetaTokenProvider.html","title":"ExAws.InstanceMetaTokenProvider","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"ExAws.InstanceMetaTokenProvider.html#child_spec/1","title":"ExAws.InstanceMetaTokenProvider.child_spec/1","type":"function"},{"doc":"","ref":"ExAws.InstanceMetaTokenProvider.html#get/1","title":"ExAws.InstanceMetaTokenProvider.get/1","type":"function"},{"doc":"","ref":"ExAws.InstanceMetaTokenProvider.html#get_headers/1","title":"ExAws.InstanceMetaTokenProvider.get_headers/1","type":"function"},{"doc":"Callback implementation for GenServer.init/1 .","ref":"ExAws.InstanceMetaTokenProvider.html#init/1","title":"ExAws.InstanceMetaTokenProvider.init/1","type":"function"},{"doc":"","ref":"ExAws.InstanceMetaTokenProvider.html#refresh_in/1","title":"ExAws.InstanceMetaTokenProvider.refresh_in/1","type":"function"},{"doc":"","ref":"ExAws.InstanceMetaTokenProvider.html#refresh_token/2","title":"ExAws.InstanceMetaTokenProvider.refresh_token/2","type":"function"},{"doc":"","ref":"ExAws.InstanceMetaTokenProvider.html#request_token/1","title":"ExAws.InstanceMetaTokenProvider.request_token/1","type":"function"},{"doc":"","ref":"ExAws.InstanceMetaTokenProvider.html#start_link/1","title":"ExAws.InstanceMetaTokenProvider.start_link/1","type":"function"},{"doc":"Defines the specification for a JSON codec. ExAws supports the use of your favorite JSON codec provided it fulfills this specification. Poison fulfills this spec without modification, and is the default. See the contents of ExAws.JSON.JSX for an example of an alternative implementation. Example Here for example is the code required to make jsx comply with this spec. In your config you would do: config :ex_aws , json_codec : ExAws.JSON.JSX defmodule ExAws.JSON.JSX do @behaviour ExAws.JSON.Codec @moduledoc false def encode! ( %{ } = map ) do map |&gt; :jsx . encode end def encode ( map ) do try do { :ok , encode! ( map ) } rescue ArgumentError -&gt; { :error , :badarg } end end def decode! ( string ) do :jsx . decode ( string , [ :return_maps ] ) end def decode ( string ) do try do { :ok , decode! ( string ) } rescue ArgumentError -&gt; { :error , :badarg } end end end","ref":"ExAws.JSON.Codec.html","title":"ExAws.JSON.Codec","type":"behaviour"},{"doc":"","ref":"ExAws.JSON.Codec.html#c:decode!/1","title":"ExAws.JSON.Codec.decode!/1","type":"callback"},{"doc":"","ref":"ExAws.JSON.Codec.html#c:decode/1","title":"ExAws.JSON.Codec.decode/1","type":"callback"},{"doc":"","ref":"ExAws.JSON.Codec.html#c:encode!/1","title":"ExAws.JSON.Codec.encode!/1","type":"callback"},{"doc":"","ref":"ExAws.JSON.Codec.html#c:encode/1","title":"ExAws.JSON.Codec.encode/1","type":"callback"},{"doc":"An operation to perform on AWS. This module defines a protocol for executing operations on AWS. ExAws ships with several different modules that each implement the ExAws.Operation protocol. These modules each handle one of the broad categories of AWS service types: ExAws.Operation.JSON ExAws.Operation.Query ExAws.Operation.RestQuery ExAws.Operation.S3 ExAws works by creating a data structure that implements this protocol, and then calling perform/2 on it.","ref":"ExAws.Operation.html","title":"ExAws.Operation","type":"protocol"},{"doc":"Perform a request on AWS. The operation is synchronous, returning a response or an error. Example % ExAws.Operation.JSON { data : %{ } , headers : [ { &quot;x-amz-target&quot; , &quot;DynamoDB_20120810.ListTables&quot; } , { &quot;content-type&quot; , &quot;application/x-amz-json-1.0&quot; } ] , http_method : :post , params : %{ } , path : &quot;/&quot; , service : :dynamodb , } |&gt; ExAws.Operation . perform ( ExAws.Config . new ( :dynamodb ) )","ref":"ExAws.Operation.html#perform/2","title":"ExAws.Operation.perform/2","type":"function"},{"doc":"Perform a streaming request on AWS.","ref":"ExAws.Operation.html#stream!/2","title":"ExAws.Operation.stream!/2","type":"function"},{"doc":"","ref":"ExAws.Operation.html#t:t/0","title":"ExAws.Operation.t/0","type":"type"},{"doc":"Datastructure representing an operation on a JSON based AWS service. This module is generally not used directly, but rather is constructed by one of the relevant AWS services. These include: DynamoDB Kinesis Lambda (Rest style) ElasticTranscoder JSON services are generally pretty simple. You just need to populate the data attribute with whatever request body parameters need converted to JSON, and set any service specific headers. The before_request","ref":"ExAws.Operation.JSON.html","title":"ExAws.Operation.JSON","type":"module"},{"doc":"","ref":"ExAws.Operation.JSON.html#new/2","title":"ExAws.Operation.JSON.new/2","type":"function"},{"doc":"","ref":"ExAws.Operation.JSON.html#t:t/0","title":"ExAws.Operation.JSON.t/0","type":"type"},{"doc":"Datastructure representing an operation on a Query based AWS service These include: SQS SNS SES","ref":"ExAws.Operation.Query.html","title":"ExAws.Operation.Query","type":"module"},{"doc":"","ref":"ExAws.Operation.Query.html#t:t/0","title":"ExAws.Operation.Query.t/0","type":"type"},{"doc":"Holds data necessary for an operation on the S3 service.","ref":"ExAws.Operation.S3.html","title":"ExAws.Operation.S3","type":"module"},{"doc":"","ref":"ExAws.Operation.S3.html#t:t/0","title":"ExAws.Operation.S3.t/0","type":"type"},{"doc":"Configuration for :hackney . Options can be set for :hackney with the following config: config :ex_aws , :hackney_opts , recv_timeout : 30_000 The default config handles setting the above.","ref":"ExAws.Request.Hackney.html","title":"ExAws.Request.Hackney","type":"module"},{"doc":"Callback implementation for ExAws.Request.HttpClient.request/5 .","ref":"ExAws.Request.Hackney.html#request/5","title":"ExAws.Request.Hackney.request/5","type":"function"},{"doc":"Specifies expected behaviour of an HTTP client. ExAws allows you to use your HTTP client of choice, provided that it can be coerced into complying with this module's specification. The default is :hackney . Example Here for example is the code required to make HTTPotion comply with this spec. In your config you would do: config :ex_aws , http_client : ExAws.Request.HTTPotion defmodule ExAws.Request.HTTPotion do @behaviour ExAws.Request.HttpClient def request ( method , url , body , headers , http_opts ) do { :ok , HTTPotion . request ( method , url , [ body : body , headers : headers , ibrowse : [ headers_as_is : true ] ] ) } end end When conforming your selected HTTP Client take note of a few things : - The module name doesn &#39;t need to follow the same styling as this module it is simply your own &#39; HTTP Client &#39; , i . e . ` MyApp.HttpClient ` - The request function must accept the methods as described in the ` c :request / 5 ` callback , you can however set these as optional , i . e . ` http_opts \\ [ ] ` - Ensure the call to your chosen HTTP Client is correct and the return is in the same format as defined in the ` c :request / 5 ` callback ## Example def request ( method , url , body , headers , http_opts \\ [ ] ) do Mojito . request ( method , url , headers , body , http_opts ) end","ref":"ExAws.Request.HttpClient.html","title":"ExAws.Request.HttpClient","type":"behaviour"},{"doc":"","ref":"ExAws.Request.HttpClient.html#c:request/5","title":"ExAws.Request.HttpClient.request/5","type":"callback"},{"doc":"","ref":"ExAws.Request.HttpClient.html#t:http_method/0","title":"ExAws.Request.HttpClient.http_method/0","type":"type"},{"doc":"Configuration-driven Ecto Schemata.","ref":"Flexto.html","title":"Flexto","type":"module"},{"doc":"Adds additional associations dynamically from app config. Reads config for the given OTP application, under the name of the current module. Each key maps to an Ecto.Schema function: belongs_to field has_many has_one many_to_many Each of these keys should map to a keyword list where the key is the name of the field or association and the value is one of: A type A tuple of type and options (keyword list) Example Schema: defmodule My.Schema do use Ecto.Schema import Flexto , only : [ flex_schema : 1 ] schema &quot;my_table&quot; do field :name , :string # just normal schema things flex_schema ( :my_app ) # boom! give me the stuff end end Example configuration: config :my_app , My.Schema , belongs_to : [ foo : Foo , # belongs_to :foo, Foo bar : { Bar , type : :integer } , # belongs_to :bar, Bar, type: :integer ] , field : [ foo : :string , # field :foo, :string bar : { :integer , default : 4 } , # field :foo, :integer, default: 4 ] , has_one : [ foo : Foo , # has_one :foo, Foo bar : { Bar , foreign_key : :the_bar_id } , # has_one :bar, Bar, foreign_key: :the_bar_id ] has_many : [ foo : Foo , # has_many :foo, Foo bar : { Bar , foreign_key : :the_bar_id } , # has_many :bar, Bar, foreign_key: :the_bar_id ] many_to_many : [ foo : Foo , # many_to_many :foo, Foo bar : { Bar , join_through : FooBar } , # many_to_many :bar, Bar, :join_through: FooBar ] This one won't work very well because we define foo and bar 5 times each, but I think you get the point. Reading of configuration is done during compile time. The relations will be baked in during compilation, thus: Do not expect this to work in release config. You will need to rebuild all dependencies which use this macro when you change their configuration.","ref":"Flexto.html#flex_schema/1","title":"Flexto.flex_schema/1","type":"macro"},{"doc":"Furlex is a structured data extraction tool written in Elixir. It currently supports unfurling oEmbed, Twitter Card, Facebook Open Graph, JSON-LD and plain ole' HTML &lt;meta /&gt; data out of any url you supply.","ref":"Furlex.html","title":"Furlex","type":"module"},{"doc":"","ref":"Furlex.html#maybe_favicon/2","title":"Furlex.maybe_favicon/2","type":"function"},{"doc":"Unfurls a url unfurl/1 fetches oembed data if applicable to the given url's host, in addition to Twitter Card, Open Graph, JSON-LD and other HTML meta tags. unfurl/2 also accepts opts as a keyword list that will be passed to the fetcher.","ref":"Furlex.html#unfurl/2","title":"Furlex.unfurl/2","type":"function"},{"doc":"","ref":"Furlex.html#t:t/0","title":"Furlex.t/0","type":"type"},{"doc":"A module for fetching body data for a given url","ref":"Furlex.Fetcher.html","title":"Furlex.Fetcher","type":"module"},{"doc":"Perform a DELETE request. See request!/1 or request!/2 for options definition. delete! ( &quot;/users&quot; ) delete! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete! ( client , &quot;/users&quot; ) delete! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Furlex.Fetcher.html#delete!/3","title":"Furlex.Fetcher.delete!/3","type":"function"},{"doc":"Perform a DELETE request. See request/1 or request/2 for options definition. delete ( &quot;/users&quot; ) delete ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete ( client , &quot;/users&quot; ) delete ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Furlex.Fetcher.html#delete/3","title":"Furlex.Fetcher.delete/3","type":"function"},{"doc":"Fetches a url and extracts the body","ref":"Furlex.Fetcher.html#fetch/2","title":"Furlex.Fetcher.fetch/2","type":"function"},{"doc":"Fetches oembed data for the given url","ref":"Furlex.Fetcher.html#fetch_oembed/2","title":"Furlex.Fetcher.fetch_oembed/2","type":"function"},{"doc":"Perform a GET request. See request!/1 or request!/2 for options definition. get! ( &quot;/users&quot; ) get! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get! ( client , &quot;/users&quot; ) get! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Furlex.Fetcher.html#get!/3","title":"Furlex.Fetcher.get!/3","type":"function"},{"doc":"Perform a GET request. See request/1 or request/2 for options definition. get ( &quot;/users&quot; ) get ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get ( client , &quot;/users&quot; ) get ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Furlex.Fetcher.html#get/3","title":"Furlex.Fetcher.get/3","type":"function"},{"doc":"Perform a HEAD request. See request!/1 or request!/2 for options definition. head! ( &quot;/users&quot; ) head! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head! ( client , &quot;/users&quot; ) head! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Furlex.Fetcher.html#head!/3","title":"Furlex.Fetcher.head!/3","type":"function"},{"doc":"Perform a HEAD request. See request/1 or request/2 for options definition. head ( &quot;/users&quot; ) head ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head ( client , &quot;/users&quot; ) head ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Furlex.Fetcher.html#head/3","title":"Furlex.Fetcher.head/3","type":"function"},{"doc":"Perform a OPTIONS request. See request!/1 or request!/2 for options definition. options! ( &quot;/users&quot; ) options! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options! ( client , &quot;/users&quot; ) options! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Furlex.Fetcher.html#options!/3","title":"Furlex.Fetcher.options!/3","type":"function"},{"doc":"Perform a OPTIONS request. See request/1 or request/2 for options definition. options ( &quot;/users&quot; ) options ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options ( client , &quot;/users&quot; ) options ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Furlex.Fetcher.html#options/3","title":"Furlex.Fetcher.options/3","type":"function"},{"doc":"Perform a PATCH request. See request!/1 or request!/2 for options definition. patch! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) patch! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Furlex.Fetcher.html#patch!/4","title":"Furlex.Fetcher.patch!/4","type":"function"},{"doc":"Perform a PATCH request. See request/1 or request/2 for options definition. patch ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) patch ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Furlex.Fetcher.html#patch/4","title":"Furlex.Fetcher.patch/4","type":"function"},{"doc":"Perform a POST request. See request!/1 or request!/2 for options definition. post! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) post! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Furlex.Fetcher.html#post!/4","title":"Furlex.Fetcher.post!/4","type":"function"},{"doc":"Perform a POST request. See request/1 or request/2 for options definition. post ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Furlex.Fetcher.html#post/4","title":"Furlex.Fetcher.post/4","type":"function"},{"doc":"Perform a PUT request. See request!/1 or request!/2 for options definition. put! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) put! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Furlex.Fetcher.html#put!/4","title":"Furlex.Fetcher.put!/4","type":"function"},{"doc":"Perform a PUT request. See request/1 or request/2 for options definition. put ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) put ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Furlex.Fetcher.html#put/4","title":"Furlex.Fetcher.put/4","type":"function"},{"doc":"Perform request and raise in case of error. This is similar to request/2 behaviour from Tesla 0.x See request/2 for list of available options.","ref":"Furlex.Fetcher.html#request!/2","title":"Furlex.Fetcher.request!/2","type":"function"},{"doc":"Perform a request. Options :method - the request method, one of [ :head , :get , :delete , :trace , :options , :post , :put , :patch ] :url - either full url e.g. &quot; http://example.com/some/path&quot; or just &quot;/some/path&quot; if using Tesla.Middleware.BaseUrl :query - a keyword list of query params, e.g. [page: 1, per_page: 100] :headers - a keyworld list of headers, e.g. [{&quot;content-type&quot;, &quot;text/plain&quot;}] :body - depends on used middleware: by default it can be a binary if using e.g. JSON encoding middleware it can be a nested map if adapter supports it it can be a Stream with any of the above :opts - custom, per-request middleware or adapter options Examples ExampleApi . request ( method : :get , url : &quot;/users/path&quot; ) # use shortcut methods ExampleApi . get ( &quot;/users/1&quot; ) ExampleApi . post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } )","ref":"Furlex.Fetcher.html#request/2","title":"Furlex.Fetcher.request/2","type":"function"},{"doc":"Perform a TRACE request. See request!/1 or request!/2 for options definition. trace! ( &quot;/users&quot; ) trace! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace! ( client , &quot;/users&quot; ) trace! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Furlex.Fetcher.html#trace!/3","title":"Furlex.Fetcher.trace!/3","type":"function"},{"doc":"Perform a TRACE request. See request/1 or request/2 for options definition. trace ( &quot;/users&quot; ) trace ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace ( client , &quot;/users&quot; ) trace ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Furlex.Fetcher.html#trace/3","title":"Furlex.Fetcher.trace/3","type":"function"},{"doc":"Options that may be passed to a request function. See request/2 for detailed descriptions.","ref":"Furlex.Fetcher.html#t:option/0","title":"Furlex.Fetcher.option/0","type":"type"},{"doc":"A module for managing oembed data","ref":"Furlex.Oembed.html","title":"Furlex.Oembed","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Furlex.Oembed.html#child_spec/1","title":"Furlex.Oembed.child_spec/1","type":"function"},{"doc":"Returns an Oembed endpoint for the given url Examples iex&gt; Oembed.endpoint_from_url &quot; https://vimeo.com/88856141&quot; iex&gt; Oembed.endpoint_from_url &quot; https://vimeo.com/88856141&quot; , %{&quot;format&quot; =&gt; &quot;xml&quot;}","ref":"Furlex.Oembed.html#endpoint_from_url/3","title":"Furlex.Oembed.endpoint_from_url/3","type":"function"},{"doc":"Fetches the list of Oembed providers Soft fetch will fetch cached providers. Hard fetch requests providers from oembed.com and purges the cache.","ref":"Furlex.Oembed.html#fetch_providers/1","title":"Furlex.Oembed.fetch_providers/1","type":"function"},{"doc":"Callback implementation for GenServer.init/1 .","ref":"Furlex.Oembed.html#init/1","title":"Furlex.Oembed.init/1","type":"function"},{"doc":"","ref":"Furlex.Oembed.html#process_response_body/1","title":"Furlex.Oembed.process_response_body/1","type":"function"},{"doc":"","ref":"Furlex.Oembed.html#process_url/1","title":"Furlex.Oembed.process_url/1","type":"function"},{"doc":"","ref":"Furlex.Parser.html","title":"Furlex.Parser","type":"behaviour"},{"doc":"Extracts the given tags from the given raw html according to the given match function","ref":"Furlex.Parser.html#extract/3","title":"Furlex.Parser.extract/3","type":"function"},{"doc":"Extracts a canonical url from the given raw HTML","ref":"Furlex.Parser.html#extract_canonical/1","title":"Furlex.Parser.extract_canonical/1","type":"function"},{"doc":"Groups colon-separated keys into dynamic map structures Examples iex&gt; Application.put_env(:furlex, :group_keys?, false) iex&gt; Furlex.Parser.group_keys %{&quot;twitter:app:id&quot; =&gt; 123, &quot;twitter:app:name&quot; =&gt; &quot;YouTube&quot;} %{&quot;twitter:app:id&quot; =&gt; 123, &quot;twitter:app:name&quot; =&gt; &quot;YouTube&quot;} iex&gt; Application.put_env(:furlex, :group_keys?, true) iex&gt; Furlex.Parser.group_keys %{&quot;twitter:app:id&quot; =&gt; 123, &quot;twitter:app:name&quot; =&gt; &quot;YouTube&quot;} %{ &quot;twitter&quot; =&gt; %{ &quot;app&quot; =&gt; %{ &quot;id&quot; =&gt; 123 , &quot;name&quot; =&gt; &quot;YouTube&quot; } } }","ref":"Furlex.Parser.html#group_keys/1","title":"Furlex.Parser.group_keys/1","type":"function"},{"doc":"Parses the given HTML, returning a map structure of structured data keys mapping to their respective values, or an error.","ref":"Furlex.Parser.html#c:parse/1","title":"Furlex.Parser.parse/1","type":"callback"},{"doc":"","ref":"Furlex.Parser.Facebook.html","title":"Furlex.Parser.Facebook","type":"module"},{"doc":"Callback implementation for Furlex.Parser.parse/1 .","ref":"Furlex.Parser.Facebook.html#parse/1","title":"Furlex.Parser.Facebook.parse/1","type":"function"},{"doc":"","ref":"Furlex.Parser.Facebook.html#tags/0","title":"Furlex.Parser.Facebook.tags/0","type":"function"},{"doc":"","ref":"Furlex.Parser.HTML.html","title":"Furlex.Parser.HTML","type":"module"},{"doc":"Callback implementation for Furlex.Parser.parse/1 .","ref":"Furlex.Parser.HTML.html#parse/1","title":"Furlex.Parser.HTML.parse/1","type":"function"},{"doc":"","ref":"Furlex.Parser.JsonLD.html","title":"Furlex.Parser.JsonLD","type":"module"},{"doc":"Callback implementation for Furlex.Parser.parse/1 .","ref":"Furlex.Parser.JsonLD.html#parse/1","title":"Furlex.Parser.JsonLD.parse/1","type":"function"},{"doc":"","ref":"Furlex.Parser.Twitter.html","title":"Furlex.Parser.Twitter","type":"module"},{"doc":"Callback implementation for Furlex.Parser.parse/1 .","ref":"Furlex.Parser.Twitter.html#parse/1","title":"Furlex.Parser.Twitter.parse/1","type":"function"},{"doc":"","ref":"Grumble.html","title":"Grumble","type":"module"},{"doc":"","ref":"Grumble.html#arg/2","title":"Grumble.arg/2","type":"function"},{"doc":"","ref":"Grumble.html#field/2","title":"Grumble.field/2","type":"function"},{"doc":"","ref":"Grumble.html#fragment_spread/1","title":"Grumble.fragment_spread/1","type":"function"},{"doc":"","ref":"Grumble.html#list_type/2","title":"Grumble.list_type/2","type":"function"},{"doc":"","ref":"Grumble.html#mutation/1","title":"Grumble.mutation/1","type":"function"},{"doc":"","ref":"Grumble.html#object_spread/2","title":"Grumble.object_spread/2","type":"function"},{"doc":"","ref":"Grumble.html#param/2","title":"Grumble.param/2","type":"function"},{"doc":"","ref":"Grumble.html#query/1","title":"Grumble.query/1","type":"function"},{"doc":"","ref":"Grumble.html#subscription/1","title":"Grumble.subscription/1","type":"function"},{"doc":"","ref":"Grumble.html#type!/2","title":"Grumble.type!/2","type":"function"},{"doc":"","ref":"Grumble.html#type/2","title":"Grumble.type/2","type":"function"},{"doc":"","ref":"Grumble.html#var/1","title":"Grumble.var/1","type":"function"},{"doc":"","ref":"Grumble.html#t:name/0","title":"Grumble.name/0","type":"type"},{"doc":"","ref":"Grumble.Arg.html","title":"Grumble.Arg","type":"module"},{"doc":"","ref":"Grumble.Arg.html#new/2","title":"Grumble.Arg.new/2","type":"function"},{"doc":"","ref":"Grumble.Arg.html#t:name/0","title":"Grumble.Arg.name/0","type":"type"},{"doc":"","ref":"Grumble.Arg.html#t:t/0","title":"Grumble.Arg.t/0","type":"type"},{"doc":"","ref":"Grumble.Field.html","title":"Grumble.Field","type":"module"},{"doc":"","ref":"Grumble.Field.html#new/2","title":"Grumble.Field.new/2","type":"function"},{"doc":"","ref":"Grumble.Field.html#set/2","title":"Grumble.Field.set/2","type":"function"},{"doc":"","ref":"Grumble.Field.html#set/3","title":"Grumble.Field.set/3","type":"function"},{"doc":"","ref":"Grumble.Field.html#t:name/0","title":"Grumble.Field.name/0","type":"type"},{"doc":"","ref":"Grumble.Field.html#t:t/0","title":"Grumble.Field.t/0","type":"type"},{"doc":"","ref":"Grumble.FragmentSpread.html","title":"Grumble.FragmentSpread","type":"module"},{"doc":"","ref":"Grumble.FragmentSpread.html#new/1","title":"Grumble.FragmentSpread.new/1","type":"function"},{"doc":"","ref":"Grumble.FragmentSpread.html#t:name/0","title":"Grumble.FragmentSpread.name/0","type":"type"},{"doc":"","ref":"Grumble.FragmentSpread.html#t:t/0","title":"Grumble.FragmentSpread.t/0","type":"type"},{"doc":"","ref":"Grumble.Helpers.html","title":"Grumble.Helpers","type":"module"},{"doc":"","ref":"Grumble.Helpers.html#const_value?/1","title":"Grumble.Helpers.const_value?/1","type":"function"},{"doc":"","ref":"Grumble.Helpers.html#field_case/1","title":"Grumble.Helpers.field_case/1","type":"function"},{"doc":"","ref":"Grumble.Helpers.html#fragment_name?/1","title":"Grumble.Helpers.fragment_name?/1","type":"function"},{"doc":"","ref":"Grumble.Helpers.html#name?/1","title":"Grumble.Helpers.name?/1","type":"function"},{"doc":"","ref":"Grumble.Helpers.html#operation?/1","title":"Grumble.Helpers.operation?/1","type":"function"},{"doc":"","ref":"Grumble.Helpers.html#string_literal/1","title":"Grumble.Helpers.string_literal/1","type":"function"},{"doc":"","ref":"Grumble.Helpers.html#type_case/1","title":"Grumble.Helpers.type_case/1","type":"function"},{"doc":"","ref":"Grumble.Helpers.html#validate/3","title":"Grumble.Helpers.validate/3","type":"function"},{"doc":"","ref":"Grumble.Helpers.html#value?/1","title":"Grumble.Helpers.value?/1","type":"function"},{"doc":"","ref":"Grumble.Helpers.html#t:predicate/0","title":"Grumble.Helpers.predicate/0","type":"type"},{"doc":"","ref":"Grumble.ObjectSpread.html","title":"Grumble.ObjectSpread","type":"module"},{"doc":"","ref":"Grumble.ObjectSpread.html#new/2","title":"Grumble.ObjectSpread.new/2","type":"function"},{"doc":"","ref":"Grumble.ObjectSpread.html#set/2","title":"Grumble.ObjectSpread.set/2","type":"function"},{"doc":"","ref":"Grumble.ObjectSpread.html#set/3","title":"Grumble.ObjectSpread.set/3","type":"function"},{"doc":"","ref":"Grumble.ObjectSpread.html#t:name/0","title":"Grumble.ObjectSpread.name/0","type":"type"},{"doc":"","ref":"Grumble.ObjectSpread.html#t:t/0","title":"Grumble.ObjectSpread.t/0","type":"type"},{"doc":"","ref":"Grumble.PP.html","title":"Grumble.PP","type":"module"},{"doc":"","ref":"Grumble.PP.html#to_iolist/2","title":"Grumble.PP.to_iolist/2","type":"function"},{"doc":"","ref":"Grumble.PP.html#to_string/1","title":"Grumble.PP.to_string/1","type":"function"},{"doc":"","ref":"Grumble.Param.html","title":"Grumble.Param","type":"module"},{"doc":"","ref":"Grumble.Param.html#new/2","title":"Grumble.Param.new/2","type":"function"},{"doc":"","ref":"Grumble.Param.html#t:name/0","title":"Grumble.Param.name/0","type":"type"},{"doc":"","ref":"Grumble.Param.html#t:t/0","title":"Grumble.Param.t/0","type":"type"},{"doc":"","ref":"Grumble.Query.html","title":"Grumble.Query","type":"module"},{"doc":"","ref":"Grumble.Query.html#new/2","title":"Grumble.Query.new/2","type":"function"},{"doc":"","ref":"Grumble.Query.html#set/2","title":"Grumble.Query.set/2","type":"function"},{"doc":"","ref":"Grumble.Query.html#set/3","title":"Grumble.Query.set/3","type":"function"},{"doc":"","ref":"Grumble.Query.html#t:name/0","title":"Grumble.Query.name/0","type":"type"},{"doc":"","ref":"Grumble.Query.html#t:operation/0","title":"Grumble.Query.operation/0","type":"type"},{"doc":"","ref":"Grumble.Query.html#t:t/0","title":"Grumble.Query.t/0","type":"type"},{"doc":"","ref":"Grumble.Type.html","title":"Grumble.Type","type":"module"},{"doc":"","ref":"Grumble.Type.html#new/2","title":"Grumble.Type.new/2","type":"function"},{"doc":"","ref":"Grumble.Type.html#set/2","title":"Grumble.Type.set/2","type":"function"},{"doc":"","ref":"Grumble.Type.html#set/3","title":"Grumble.Type.set/3","type":"function"},{"doc":"","ref":"Grumble.Type.html#t:name/0","title":"Grumble.Type.name/0","type":"type"},{"doc":"","ref":"Grumble.Type.html#t:t/0","title":"Grumble.Type.t/0","type":"type"},{"doc":"","ref":"Grumble.Var.html","title":"Grumble.Var","type":"module"},{"doc":"","ref":"Grumble.Var.html#new/1","title":"Grumble.Var.new/1","type":"function"},{"doc":"","ref":"Grumble.Var.html#t:name/0","title":"Grumble.Var.name/0","type":"type"},{"doc":"","ref":"Grumble.Var.html#t:t/0","title":"Grumble.Var.t/0","type":"type"},{"doc":"Properties iconify :string, required: false solid :string, required: false outline :string, required: false class :css_class, default: &quot;w-4 h-4&quot;","ref":"Icon.html","title":"Icon","type":"module"},{"doc":"","ref":"Icon.html#class_to_string/1","title":"Icon.class_to_string/1","type":"function"},{"doc":"Callback implementation for Surface.Component.render/1 .","ref":"Icon.html#render/1","title":"Icon.render/1","type":"function"},{"doc":"","ref":"Iconify.html","title":"Iconify","type":"module"},{"doc":"","ref":"Iconify.html#iconify/1","title":"Iconify.iconify/1","type":"function"},{"doc":"","ref":"Iconify.Bx.At.html","title":"Iconify.Bx.At","type":"module"},{"doc":"","ref":"Iconify.Bx.At.html#render/1","title":"Iconify.Bx.At.render/1","type":"function"},{"doc":"","ref":"Iconify.Bx.Block.html","title":"Iconify.Bx.Block","type":"module"},{"doc":"","ref":"Iconify.Bx.Block.html#render/1","title":"Iconify.Bx.Block.render/1","type":"function"},{"doc":"","ref":"Iconify.Bx.CheckShield.html","title":"Iconify.Bx.CheckShield","type":"module"},{"doc":"","ref":"Iconify.Bx.CheckShield.html#render/1","title":"Iconify.Bx.CheckShield.render/1","type":"function"},{"doc":"","ref":"Iconify.Bx.CommentEdit.html","title":"Iconify.Bx.CommentEdit","type":"module"},{"doc":"","ref":"Iconify.Bx.CommentEdit.html#render/1","title":"Iconify.Bx.CommentEdit.render/1","type":"function"},{"doc":"","ref":"Iconify.Bx.Gift.html","title":"Iconify.Bx.Gift","type":"module"},{"doc":"","ref":"Iconify.Bx.Gift.html#render/1","title":"Iconify.Bx.Gift.render/1","type":"function"},{"doc":"","ref":"Iconify.Bx.Highlight.html","title":"Iconify.Bx.Highlight","type":"module"},{"doc":"","ref":"Iconify.Bx.Highlight.html#render/1","title":"Iconify.Bx.Highlight.render/1","type":"function"},{"doc":"","ref":"Iconify.Bx.Key.html","title":"Iconify.Bx.Key","type":"module"},{"doc":"","ref":"Iconify.Bx.Key.html#render/1","title":"Iconify.Bx.Key.render/1","type":"function"},{"doc":"","ref":"Iconify.Bx.QuestionMark.html","title":"Iconify.Bx.QuestionMark","type":"module"},{"doc":"","ref":"Iconify.Bx.QuestionMark.html#render/1","title":"Iconify.Bx.QuestionMark.render/1","type":"function"},{"doc":"","ref":"Iconify.Bx.Reply.html","title":"Iconify.Bx.Reply","type":"module"},{"doc":"","ref":"Iconify.Bx.Reply.html#render/1","title":"Iconify.Bx.Reply.render/1","type":"function"},{"doc":"","ref":"Iconify.Bx.Repost.html","title":"Iconify.Bx.Repost","type":"module"},{"doc":"","ref":"Iconify.Bx.Repost.html#render/1","title":"Iconify.Bx.Repost.render/1","type":"function"},{"doc":"","ref":"Iconify.Bx.ShapeCircle.html","title":"Iconify.Bx.ShapeCircle","type":"module"},{"doc":"","ref":"Iconify.Bx.ShapeCircle.html#render/1","title":"Iconify.Bx.ShapeCircle.render/1","type":"function"},{"doc":"","ref":"Iconify.Bx.Shield.html","title":"Iconify.Bx.Shield","type":"module"},{"doc":"","ref":"Iconify.Bx.Shield.html#render/1","title":"Iconify.Bx.Shield.render/1","type":"function"},{"doc":"","ref":"Iconify.Bx.ShieldX.html","title":"Iconify.Bx.ShieldX","type":"module"},{"doc":"","ref":"Iconify.Bx.ShieldX.html#render/1","title":"Iconify.Bx.ShieldX.render/1","type":"function"},{"doc":"","ref":"Iconify.Bx.ToggleRight.html","title":"Iconify.Bx.ToggleRight","type":"module"},{"doc":"","ref":"Iconify.Bx.ToggleRight.html#render/1","title":"Iconify.Bx.ToggleRight.render/1","type":"function"},{"doc":"","ref":"Iconify.Bx.Walk.html","title":"Iconify.Bx.Walk","type":"module"},{"doc":"","ref":"Iconify.Bx.Walk.html#render/1","title":"Iconify.Bx.Walk.render/1","type":"function"},{"doc":"","ref":"Iconify.Bxs.BookReader.html","title":"Iconify.Bxs.BookReader","type":"module"},{"doc":"","ref":"Iconify.Bxs.BookReader.html#render/1","title":"Iconify.Bxs.BookReader.render/1","type":"function"},{"doc":"","ref":"Iconify.Bxs.EditLocation.html","title":"Iconify.Bxs.EditLocation","type":"module"},{"doc":"","ref":"Iconify.Bxs.EditLocation.html#render/1","title":"Iconify.Bxs.EditLocation.render/1","type":"function"},{"doc":"","ref":"Iconify.Bxs.FlagAlt.html","title":"Iconify.Bxs.FlagAlt","type":"module"},{"doc":"","ref":"Iconify.Bxs.FlagAlt.html#render/1","title":"Iconify.Bxs.FlagAlt.render/1","type":"function"},{"doc":"","ref":"Iconify.Bxs.FlagCheckered.html","title":"Iconify.Bxs.FlagCheckered","type":"module"},{"doc":"","ref":"Iconify.Bxs.FlagCheckered.html#render/1","title":"Iconify.Bxs.FlagCheckered.render/1","type":"function"},{"doc":"","ref":"Iconify.Bxs.Pen.html","title":"Iconify.Bxs.Pen","type":"module"},{"doc":"","ref":"Iconify.Bxs.Pen.html#render/1","title":"Iconify.Bxs.Pen.render/1","type":"function"},{"doc":"","ref":"Iconify.Bxs.PurchaseTag.html","title":"Iconify.Bxs.PurchaseTag","type":"module"},{"doc":"","ref":"Iconify.Bxs.PurchaseTag.html#render/1","title":"Iconify.Bxs.PurchaseTag.render/1","type":"function"},{"doc":"","ref":"Iconify.Bxs.Send.html","title":"Iconify.Bxs.Send","type":"module"},{"doc":"","ref":"Iconify.Bxs.Send.html#render/1","title":"Iconify.Bxs.Send.render/1","type":"function"},{"doc":"","ref":"Iconify.Bxs.Star.html","title":"Iconify.Bxs.Star","type":"module"},{"doc":"","ref":"Iconify.Bxs.Star.html#render/1","title":"Iconify.Bxs.Star.render/1","type":"function"},{"doc":"","ref":"Iconify.Bxs.TrashAlt.html","title":"Iconify.Bxs.TrashAlt","type":"module"},{"doc":"","ref":"Iconify.Bxs.TrashAlt.html#render/1","title":"Iconify.Bxs.TrashAlt.render/1","type":"function"},{"doc":"","ref":"Iconify.Bxs.UserBadge.html","title":"Iconify.Bxs.UserBadge","type":"module"},{"doc":"","ref":"Iconify.Bxs.UserBadge.html#render/1","title":"Iconify.Bxs.UserBadge.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.Adjustments.html","title":"Iconify.HeroiconsOutline.Adjustments","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.Adjustments.html#render/1","title":"Iconify.HeroiconsOutline.Adjustments.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.ArrowNarrowRight.html","title":"Iconify.HeroiconsOutline.ArrowNarrowRight","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.ArrowNarrowRight.html#render/1","title":"Iconify.HeroiconsOutline.ArrowNarrowRight.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.ArrowsExpand.html","title":"Iconify.HeroiconsOutline.ArrowsExpand","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.ArrowsExpand.html#render/1","title":"Iconify.HeroiconsOutline.ArrowsExpand.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.Bell.html","title":"Iconify.HeroiconsOutline.Bell","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.Bell.html#render/1","title":"Iconify.HeroiconsOutline.Bell.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.ChatAlt.html","title":"Iconify.HeroiconsOutline.ChatAlt","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.ChatAlt.html#render/1","title":"Iconify.HeroiconsOutline.ChatAlt.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.Check.html","title":"Iconify.HeroiconsOutline.Check","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.Check.html#render/1","title":"Iconify.HeroiconsOutline.Check.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.CheckCircle.html","title":"Iconify.HeroiconsOutline.CheckCircle","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.CheckCircle.html#render/1","title":"Iconify.HeroiconsOutline.CheckCircle.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.ChevronDoubleDown.html","title":"Iconify.HeroiconsOutline.ChevronDoubleDown","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.ChevronDoubleDown.html#render/1","title":"Iconify.HeroiconsOutline.ChevronDoubleDown.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.ChevronDoubleUp.html","title":"Iconify.HeroiconsOutline.ChevronDoubleUp","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.ChevronDoubleUp.html#render/1","title":"Iconify.HeroiconsOutline.ChevronDoubleUp.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.ChevronDown.html","title":"Iconify.HeroiconsOutline.ChevronDown","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.ChevronDown.html#render/1","title":"Iconify.HeroiconsOutline.ChevronDown.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.ChevronLeft.html","title":"Iconify.HeroiconsOutline.ChevronLeft","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.ChevronLeft.html#render/1","title":"Iconify.HeroiconsOutline.ChevronLeft.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.Cog.html","title":"Iconify.HeroiconsOutline.Cog","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.Cog.html#render/1","title":"Iconify.HeroiconsOutline.Cog.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.Exclamation.html","title":"Iconify.HeroiconsOutline.Exclamation","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.Exclamation.html#render/1","title":"Iconify.HeroiconsOutline.Exclamation.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.Fire.html","title":"Iconify.HeroiconsOutline.Fire","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.Fire.html#render/1","title":"Iconify.HeroiconsOutline.Fire.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.Flag.html","title":"Iconify.HeroiconsOutline.Flag","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.Flag.html#render/1","title":"Iconify.HeroiconsOutline.Flag.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.Key.html","title":"Iconify.HeroiconsOutline.Key","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.Key.html#render/1","title":"Iconify.HeroiconsOutline.Key.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.LockClosed.html","title":"Iconify.HeroiconsOutline.LockClosed","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.LockClosed.html#render/1","title":"Iconify.HeroiconsOutline.LockClosed.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.Logout.html","title":"Iconify.HeroiconsOutline.Logout","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.Logout.html#render/1","title":"Iconify.HeroiconsOutline.Logout.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.Mail.html","title":"Iconify.HeroiconsOutline.Mail","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.Mail.html#render/1","title":"Iconify.HeroiconsOutline.Mail.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.MenuAlt2.html","title":"Iconify.HeroiconsOutline.MenuAlt2","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.MenuAlt2.html#render/1","title":"Iconify.HeroiconsOutline.MenuAlt2.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.MinusCircle.html","title":"Iconify.HeroiconsOutline.MinusCircle","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.MinusCircle.html#render/1","title":"Iconify.HeroiconsOutline.MinusCircle.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.Pencil.html","title":"Iconify.HeroiconsOutline.Pencil","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.Pencil.html#render/1","title":"Iconify.HeroiconsOutline.Pencil.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.Plus.html","title":"Iconify.HeroiconsOutline.Plus","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.Plus.html#render/1","title":"Iconify.HeroiconsOutline.Plus.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.Puzzle.html","title":"Iconify.HeroiconsOutline.Puzzle","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.Puzzle.html#render/1","title":"Iconify.HeroiconsOutline.Puzzle.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.Reply.html","title":"Iconify.HeroiconsOutline.Reply","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.Reply.html#render/1","title":"Iconify.HeroiconsOutline.Reply.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.Scale.html","title":"Iconify.HeroiconsOutline.Scale","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.Scale.html#render/1","title":"Iconify.HeroiconsOutline.Scale.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.Star.html","title":"Iconify.HeroiconsOutline.Star","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.Star.html#render/1","title":"Iconify.HeroiconsOutline.Star.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.User.html","title":"Iconify.HeroiconsOutline.User","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.User.html#render/1","title":"Iconify.HeroiconsOutline.User.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.UserGroup.html","title":"Iconify.HeroiconsOutline.UserGroup","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.UserGroup.html#render/1","title":"Iconify.HeroiconsOutline.UserGroup.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.ViewGridAdd.html","title":"Iconify.HeroiconsOutline.ViewGridAdd","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.ViewGridAdd.html#render/1","title":"Iconify.HeroiconsOutline.ViewGridAdd.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.VolumeOff.html","title":"Iconify.HeroiconsOutline.VolumeOff","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.VolumeOff.html#render/1","title":"Iconify.HeroiconsOutline.VolumeOff.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsOutline.X.html","title":"Iconify.HeroiconsOutline.X","type":"module"},{"doc":"","ref":"Iconify.HeroiconsOutline.X.html#render/1","title":"Iconify.HeroiconsOutline.X.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.Adjustments.html","title":"Iconify.HeroiconsSolid.Adjustments","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.Adjustments.html#render/1","title":"Iconify.HeroiconsSolid.Adjustments.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.Ban.html","title":"Iconify.HeroiconsSolid.Ban","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.Ban.html#render/1","title":"Iconify.HeroiconsSolid.Ban.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.Bell.html","title":"Iconify.HeroiconsSolid.Bell","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.Bell.html#render/1","title":"Iconify.HeroiconsSolid.Bell.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.CheckCircle.html","title":"Iconify.HeroiconsSolid.CheckCircle","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.CheckCircle.html#render/1","title":"Iconify.HeroiconsSolid.CheckCircle.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.ChevronDown.html","title":"Iconify.HeroiconsSolid.ChevronDown","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.ChevronDown.html#render/1","title":"Iconify.HeroiconsSolid.ChevronDown.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.ChevronLeft.html","title":"Iconify.HeroiconsSolid.ChevronLeft","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.ChevronLeft.html#render/1","title":"Iconify.HeroiconsSolid.ChevronLeft.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.ChevronRight.html","title":"Iconify.HeroiconsSolid.ChevronRight","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.ChevronRight.html#render/1","title":"Iconify.HeroiconsSolid.ChevronRight.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.Cog.html","title":"Iconify.HeroiconsSolid.Cog","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.Cog.html#render/1","title":"Iconify.HeroiconsSolid.Cog.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.Collection.html","title":"Iconify.HeroiconsSolid.Collection","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.Collection.html#render/1","title":"Iconify.HeroiconsSolid.Collection.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.DotsHorizontal.html","title":"Iconify.HeroiconsSolid.DotsHorizontal","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.DotsHorizontal.html#render/1","title":"Iconify.HeroiconsSolid.DotsHorizontal.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.DotsVertical.html","title":"Iconify.HeroiconsSolid.DotsVertical","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.DotsVertical.html#render/1","title":"Iconify.HeroiconsSolid.DotsVertical.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.ExternalLink.html","title":"Iconify.HeroiconsSolid.ExternalLink","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.ExternalLink.html#render/1","title":"Iconify.HeroiconsSolid.ExternalLink.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.Eye.html","title":"Iconify.HeroiconsSolid.Eye","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.Eye.html#render/1","title":"Iconify.HeroiconsSolid.Eye.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.EyeOff.html","title":"Iconify.HeroiconsSolid.EyeOff","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.EyeOff.html#render/1","title":"Iconify.HeroiconsSolid.EyeOff.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.Flag.html","title":"Iconify.HeroiconsSolid.Flag","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.Flag.html#render/1","title":"Iconify.HeroiconsSolid.Flag.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.Globe.html","title":"Iconify.HeroiconsSolid.Globe","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.Globe.html#render/1","title":"Iconify.HeroiconsSolid.Globe.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.Home.html","title":"Iconify.HeroiconsSolid.Home","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.Home.html#render/1","title":"Iconify.HeroiconsSolid.Home.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.InformationCircle.html","title":"Iconify.HeroiconsSolid.InformationCircle","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.InformationCircle.html#render/1","title":"Iconify.HeroiconsSolid.InformationCircle.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.Link.html","title":"Iconify.HeroiconsSolid.Link","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.Link.html#render/1","title":"Iconify.HeroiconsSolid.Link.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.LocationMarker.html","title":"Iconify.HeroiconsSolid.LocationMarker","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.LocationMarker.html#render/1","title":"Iconify.HeroiconsSolid.LocationMarker.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.Login.html","title":"Iconify.HeroiconsSolid.Login","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.Login.html#render/1","title":"Iconify.HeroiconsSolid.Login.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.Mail.html","title":"Iconify.HeroiconsSolid.Mail","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.Mail.html#render/1","title":"Iconify.HeroiconsSolid.Mail.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.Minus.html","title":"Iconify.HeroiconsSolid.Minus","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.Minus.html#render/1","title":"Iconify.HeroiconsSolid.Minus.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.Newspaper.html","title":"Iconify.HeroiconsSolid.Newspaper","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.Newspaper.html#render/1","title":"Iconify.HeroiconsSolid.Newspaper.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.PaperClip.html","title":"Iconify.HeroiconsSolid.PaperClip","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.PaperClip.html#render/1","title":"Iconify.HeroiconsSolid.PaperClip.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.Pencil.html","title":"Iconify.HeroiconsSolid.Pencil","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.Pencil.html#render/1","title":"Iconify.HeroiconsSolid.Pencil.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.PencilAlt.html","title":"Iconify.HeroiconsSolid.PencilAlt","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.PencilAlt.html#render/1","title":"Iconify.HeroiconsSolid.PencilAlt.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.Plus.html","title":"Iconify.HeroiconsSolid.Plus","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.Plus.html#render/1","title":"Iconify.HeroiconsSolid.Plus.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.QuestionMarkCircle.html","title":"Iconify.HeroiconsSolid.QuestionMarkCircle","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.QuestionMarkCircle.html#render/1","title":"Iconify.HeroiconsSolid.QuestionMarkCircle.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.Search.html","title":"Iconify.HeroiconsSolid.Search","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.Search.html#render/1","title":"Iconify.HeroiconsSolid.Search.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.Star.html","title":"Iconify.HeroiconsSolid.Star","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.Star.html#render/1","title":"Iconify.HeroiconsSolid.Star.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.Trash.html","title":"Iconify.HeroiconsSolid.Trash","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.Trash.html#render/1","title":"Iconify.HeroiconsSolid.Trash.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.User.html","title":"Iconify.HeroiconsSolid.User","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.User.html#render/1","title":"Iconify.HeroiconsSolid.User.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.UserAdd.html","title":"Iconify.HeroiconsSolid.UserAdd","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.UserAdd.html#render/1","title":"Iconify.HeroiconsSolid.UserAdd.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.UserGroup.html","title":"Iconify.HeroiconsSolid.UserGroup","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.UserGroup.html#render/1","title":"Iconify.HeroiconsSolid.UserGroup.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.UserRemove.html","title":"Iconify.HeroiconsSolid.UserRemove","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.UserRemove.html#render/1","title":"Iconify.HeroiconsSolid.UserRemove.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.Users.html","title":"Iconify.HeroiconsSolid.Users","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.Users.html#render/1","title":"Iconify.HeroiconsSolid.Users.render/1","type":"function"},{"doc":"","ref":"Iconify.HeroiconsSolid.X.html","title":"Iconify.HeroiconsSolid.X","type":"module"},{"doc":"","ref":"Iconify.HeroiconsSolid.X.html#render/1","title":"Iconify.HeroiconsSolid.X.render/1","type":"function"},{"doc":"Creates an account in the database, automatically activated Usage mix bonfire . account . new [ email @address ] You will be prompted for a password and an email if it was not provided.","ref":"Mix.Tasks.Bonfire.Account.New.html","title":"Mix.Tasks.Bonfire.Account.New","type":"task"},{"doc":"Callback implementation for Mix.Task.run/1 .","ref":"Mix.Tasks.Bonfire.Account.New.html#run/1","title":"Mix.Tasks.Bonfire.Account.New.run/1","type":"function"},{"doc":"Compiles dependencies. This is a modified version of Elixir's Mix.Tasks.Deps.Compile which was needed to compile depedencies and extract localisable strings in Mix.Tasks.Bonfire.Localise.Extract By default, compile all dependencies. A list of dependencies can be given compile multiple dependencies in order. This task attempts to detect if the project contains one of the following files and act accordingly: mix.exs - invokes mix compile otherwise skip If a list of dependencies is given, Mix will attempt to compile them as is. For example, if project a depends on b , calling mix deps.compile a will compile a even if b is out of date. This is to allow parts of the dependency tree to be recompiled without propagating those changes upstream. To ensure b is included in the compilation step, pass --include-children .","ref":"Mix.Tasks.Bonfire.Dep.Compile.html","title":"Mix.Tasks.Bonfire.Dep.Compile","type":"task"},{"doc":"Receives a list of dependency names and returns loaded Mix.Dep s. Logs a message if the dependency could not be found. Exceptions This function raises an exception if any of the dependencies provided in the project are in the wrong format.","ref":"Mix.Tasks.Bonfire.Dep.Compile.html#loaded_by_name/3","title":"Mix.Tasks.Bonfire.Dep.Compile.loaded_by_name/3","type":"function"},{"doc":"Callback implementation for Mix.Task.run/1 .","ref":"Mix.Tasks.Bonfire.Dep.Compile.html#run/1","title":"Mix.Tasks.Bonfire.Dep.Compile.run/1","type":"function"},{"doc":"Extracts translations by recompiling the Elixir source code. mix gettext . extract [ OPTIONS ] Translations are extracted into POT (Portable Object Template) files (with a .pot extension). The location of these files is determined by the :otp_app and :priv options given by Gettext modules when they call use Gettext . One POT file is generated for each translation domain. It is possible to give the --merge option to perform merging for every Gettext backend updated during merge: mix gettext . extract -- merge All other options passed to gettext.extract are forwarded to the gettext.merge task ( Mix.Tasks.Gettext.Merge ), which is called internally by this task. For example: mix gettext . extract -- merge -- no - fuzzy","ref":"Mix.Tasks.Bonfire.Localise.Extract.html","title":"Mix.Tasks.Bonfire.Localise.Extract","type":"task"},{"doc":"Callback implementation for Mix.Task.run/1 .","ref":"Mix.Tasks.Bonfire.Localise.Extract.html#run/1","title":"Mix.Tasks.Bonfire.Localise.Extract.run/1","type":"function"},{"doc":"","ref":"Mix.Tasks.Bonfire.Release.html","title":"Mix.Tasks.Bonfire.Release","type":"task"},{"doc":"","ref":"Mix.Tasks.Bonfire.Release.html#main/1","title":"Mix.Tasks.Bonfire.Release.main/1","type":"function"},{"doc":"","ref":"Mix.Tasks.Bonfire.Release.html#run/1","title":"Mix.Tasks.Bonfire.Release.run/1","type":"function"},{"doc":"Generates secrets and prints to the terminal. mix secrets [ length ] By default, it generates keys 64 characters long. The minimum value for length is 32.","ref":"Mix.Tasks.Bonfire.Secrets.html","title":"Mix.Tasks.Bonfire.Secrets","type":"task"},{"doc":"","ref":"Mix.Tasks.Bonfire.Secrets.html#main/1","title":"Mix.Tasks.Bonfire.Secrets.main/1","type":"function"},{"doc":"Creates an account in the database, automatically activated Usage mix bonfire . user . admin . promote username","ref":"Mix.Tasks.Bonfire.User.Admin.Promote.html","title":"Mix.Tasks.Bonfire.User.Admin.Promote","type":"task"},{"doc":"Callback implementation for Mix.Task.run/1 .","ref":"Mix.Tasks.Bonfire.User.Admin.Promote.html#run/1","title":"Mix.Tasks.Bonfire.User.Admin.Promote.run/1","type":"function"},{"doc":"mix docs.deps Command line options --only - the environment to include dependencies for --target - the target to include dependencies for --exclude - exclude dependencies which you do not want to see in docs. any arguments supported by mix docs will be passed along","ref":"Mix.Tasks.Docs.Deps.html","title":"Mix.Tasks.Docs.Deps","type":"task"},{"doc":"","ref":"Nodeinfo.html","title":"Nodeinfo","type":"module"},{"doc":"Contract for Nodeinfo module adapters","ref":"Nodeinfo.Adapter.html","title":"Nodeinfo.Adapter","type":"behaviour"},{"doc":"","ref":"Nodeinfo.Adapter.html#base_url/0","title":"Nodeinfo.Adapter.base_url/0","type":"function"},{"doc":"","ref":"Nodeinfo.Adapter.html#c:base_url/0","title":"Nodeinfo.Adapter.base_url/0","type":"callback"},{"doc":"","ref":"Nodeinfo.Adapter.html#gather_nodeinfo_data/0","title":"Nodeinfo.Adapter.gather_nodeinfo_data/0","type":"function"},{"doc":"","ref":"Nodeinfo.Adapter.html#c:gather_nodeinfo_data/0","title":"Nodeinfo.Adapter.gather_nodeinfo_data/0","type":"callback"},{"doc":"","ref":"NodeinfoWeb.html","title":"NodeinfoWeb","type":"module"},{"doc":"When used, dispatch to the appropriate controller/view/etc.","ref":"NodeinfoWeb.html#__using__/1","title":"NodeinfoWeb.__using__/1","type":"macro"},{"doc":"","ref":"NodeinfoWeb.html#channel/0","title":"NodeinfoWeb.channel/0","type":"function"},{"doc":"","ref":"NodeinfoWeb.html#controller/0","title":"NodeinfoWeb.controller/0","type":"function"},{"doc":"","ref":"NodeinfoWeb.html#router/0","title":"NodeinfoWeb.router/0","type":"function"},{"doc":"","ref":"NodeinfoWeb.html#view/0","title":"NodeinfoWeb.view/0","type":"function"},{"doc":"","ref":"NodeinfoWeb.NodeinfoController.html","title":"NodeinfoWeb.NodeinfoController","type":"module"},{"doc":"","ref":"NodeinfoWeb.NodeinfoController.html#nodeinfo/2","title":"NodeinfoWeb.NodeinfoController.nodeinfo/2","type":"function"},{"doc":"","ref":"NodeinfoWeb.NodeinfoController.html#raw_nodeinfo/1","title":"NodeinfoWeb.NodeinfoController.raw_nodeinfo/1","type":"function"},{"doc":"","ref":"NodeinfoWeb.NodeinfoController.html#schemas/2","title":"NodeinfoWeb.NodeinfoController.schemas/2","type":"function"},{"doc":"","ref":"NodeinfoWeb.Router.html","title":"NodeinfoWeb.Router","type":"module"},{"doc":"Defines a paginator. This module adds a paginate/3 function to your Ecto.Repo so that you can paginate through results using opaque cursors. Usage defmodule MyApp.Repo do use Ecto.Repo , otp_app : :my_app use Paginator end Options Paginator can take any options accepted by paginate/3 . This is useful when you want to enforce some options globally across your project. Example defmodule MyApp.Repo do use Ecto.Repo , otp_app : :my_app use Paginator , limit : 10 , # sets the default limit to 10 maximum_limit : 100 , # sets the maximum limit to 100 include_total_count : true , # include total count by default total_count_primary_key_field : :uuid # sets the total_count_primary_key_field to uuid for calculate total_count end Note that these values can be still be overriden when paginate/3 is called. Use without macros If you wish to avoid use of macros or you wish to use a different name for the pagination function you can define your own function like so: defmodule MyApp.Repo do use Ecto.Repo , otp_app : :my_app def my_paginate_function ( queryable , opts \\ [ ] , repo_opts \\ [ ] ) do defaults = [ limit : 10 ] # Default options of your choice here opts = Keyword . merge ( defaults , opts ) Paginator . paginate ( queryable , opts , __MODULE__ , repo_opts ) end end","ref":"Paginator.html","title":"Paginator","type":"behaviour"},{"doc":"Generate a cursor for the supplied record, in the same manner as the before and after cursors generated by paginate/3 . For the cursor to be compatible with paginate/3 , cursor_fields must have the same value as the cursor_fields option passed to it. Example iex&gt; Paginator . cursor_for_record ( % Paginator.Customer { id : 1 } , [ :id ] ) &quot;g3QAAAABZAACaWRhAQ==&quot; iex&gt; Paginator . cursor_for_record ( % Paginator.Customer { id : 1 , name : &quot;Alice&quot; } , [ id : :asc , name : :desc ] ) &quot;g3QAAAACZAACaWRhAWQABG5hbWVtAAAABUFsaWNl&quot;","ref":"Paginator.html#cursor_for_record/3","title":"Paginator.cursor_for_record/3","type":"function"},{"doc":"Default function used to get the value of a cursor field from the supplied map. This function can be overriden in the Paginator.Config using the fetch_cursor_value_fun key. When using named bindings to sort on joined columns it will attempt to get the value of joined column by using the named binding as the name of the relationship on the original Ecto.Schema. Example iex&gt; Paginator . default_fetch_cursor_value ( % Paginator.Customer { id : 1 } , :id ) 1 iex&gt; Paginator . default_fetch_cursor_value ( % Paginator.Customer { id : 1 , address : % Paginator.Address { city : &quot;London&quot; } } , { :address , :city } ) &quot;London&quot;","ref":"Paginator.html#default_fetch_cursor_value/2","title":"Paginator.default_fetch_cursor_value/2","type":"function"},{"doc":"Fetches all the results matching the query within the cursors. Options :after - Fetch the records after this cursor. :before - Fetch the records before this cursor. :cursor_fields - The fields with sorting direction used to determine the cursor. In most cases, this should be the same fields as the ones used for sorting in the query. When you use named bindings in your query they can also be provided. :fetch_cursor_value_fun function of arity 2 to lookup cursor values on returned records. Defaults to Paginator.default_fetch_cursor_value/2 :include_total_count - Set this to true to return the total number of records matching the query. Note that this number will be capped by :total_count_limit . Defaults to false . :total_count_primary_key_field - Running count queries on specified column of the table :limit - Limits the number of records returned per page. Note that this number will be capped by :maximum_limit . Defaults to 50 . :maximum_limit - Sets a maximum cap for :limit . This option can be useful when :limit is set dynamically (e.g from a URL param set by a user) but you still want to enfore a maximum. Defaults to 500 . :sort_direction - The direction used for sorting. Defaults to :asc . It is preferred to set the sorting direction per field in :cursor_fields . :total_count_limit - Running count queries on tables with a large number of records is expensive so it is capped by default. Can be set to :infinity in order to count all the records. Defaults to 10,000 . Repo options This will be passed directly to Ecto.Repo.all/2 , as such any option supported by this function can be used here. Simple example query = from ( p in Post , order_by : [ asc : p . inserted_at , asc : p . id ] , select : p ) Repo . paginate ( query , cursor_fields : [ :inserted_at , :id ] , limit : 50 ) Example with using custom sort directions per field query = from ( p in Post , order_by : [ asc : p . inserted_at , desc : p . id ] , select : p ) Repo . paginate ( query , cursor_fields : [ inserted_at : :asc , id : :desc ] , limit : 50 ) Example with sorting on columns in joined tables from ( p in Post , as : :posts , join : a in assoc ( p , :author ) , as : :author , preload : [ author : a ] , select : p , order_by : [ { :asc , a . name } , { :asc , p . id } ] ) Repo . paginate ( query , cursor_fields : [ { { :author , :name } , :asc } , id : :asc ] , limit : 50 ) When sorting on columns in joined tables it is necessary to use named bindings. In this case we name it author . In the cursor_fields we refer to this named binding and its column name. To build the cursor Paginator uses the returned Ecto.Schema. When using a joined column the returned Ecto.Schema won't have the value of the joined column unless we preload it. E.g. in this case the cursor will be build up from post.id and post.author.name . This presupposes that the named of the binding is the same as the name of the relationship on the original struct. One level deep joins are supported out of the box but if we join on a second level, e.g. post.author.company.name a custom function can be supplied to handle the cursor value retrieval. This also applies when the named binding does not map to the name of the relationship. Example from ( p in Post , as : :posts , join : a in assoc ( p , :author ) , as : :author , join : c in assoc ( a , :company ) , as : :company , preload : [ author : a ] , select : p , order_by : [ { :asc , a . name } , { :asc , p . id } ] ) Repo . paginate ( query , cursor_fields : [ { { :company , :name } , :asc } , id : :asc ] , fetch_cursor_value_fun : fn post , { { :company , name } , _ } -&gt; post . author . company . name post , field -&gt; Paginator . default_fetch_cursor_value ( post , field ) end , limit : 50 )","ref":"Paginator.html#c:paginate/3","title":"Paginator.paginate/3","type":"callback"},{"doc":"","ref":"Paginator.html#paginated_query/2","title":"Paginator.paginated_query/2","type":"function"},{"doc":"","ref":"Paginator.Address.html","title":"Paginator.Address","type":"module"},{"doc":"","ref":"Paginator.Customer.html","title":"Paginator.Customer","type":"module"},{"doc":"","ref":"Paginator.Customer.html#active/1","title":"Paginator.Customer.active/1","type":"function"},{"doc":"","ref":"Paginator.DataCase.html","title":"Paginator.DataCase","type":"module"},{"doc":"","ref":"Paginator.Factory.html","title":"Paginator.Factory","type":"module"},{"doc":"","ref":"Paginator.Factory.html#address_factory/0","title":"Paginator.Factory.address_factory/0","type":"function"},{"doc":"","ref":"Paginator.Factory.html#build/2","title":"Paginator.Factory.build/2","type":"function"},{"doc":"","ref":"Paginator.Factory.html#build_list/3","title":"Paginator.Factory.build_list/3","type":"function"},{"doc":"","ref":"Paginator.Factory.html#build_pair/2","title":"Paginator.Factory.build_pair/2","type":"function"},{"doc":"","ref":"Paginator.Factory.html#create/1","title":"Paginator.Factory.create/1","type":"function"},{"doc":"","ref":"Paginator.Factory.html#create/2","title":"Paginator.Factory.create/2","type":"function"},{"doc":"","ref":"Paginator.Factory.html#create_list/3","title":"Paginator.Factory.create_list/3","type":"function"},{"doc":"","ref":"Paginator.Factory.html#create_pair/2","title":"Paginator.Factory.create_pair/2","type":"function"},{"doc":"","ref":"Paginator.Factory.html#customer_factory/0","title":"Paginator.Factory.customer_factory/0","type":"function"},{"doc":"Raises a helpful error if no factory is defined.","ref":"Paginator.Factory.html#factory/1","title":"Paginator.Factory.factory/1","type":"function"},{"doc":"","ref":"Paginator.Factory.html#insert/1","title":"Paginator.Factory.insert/1","type":"function"},{"doc":"","ref":"Paginator.Factory.html#insert/2","title":"Paginator.Factory.insert/2","type":"function"},{"doc":"","ref":"Paginator.Factory.html#insert/3","title":"Paginator.Factory.insert/3","type":"function"},{"doc":"","ref":"Paginator.Factory.html#insert_list/3","title":"Paginator.Factory.insert_list/3","type":"function"},{"doc":"","ref":"Paginator.Factory.html#insert_list/4","title":"Paginator.Factory.insert_list/4","type":"function"},{"doc":"","ref":"Paginator.Factory.html#insert_pair/2","title":"Paginator.Factory.insert_pair/2","type":"function"},{"doc":"","ref":"Paginator.Factory.html#insert_pair/3","title":"Paginator.Factory.insert_pair/3","type":"function"},{"doc":"","ref":"Paginator.Factory.html#params_for/2","title":"Paginator.Factory.params_for/2","type":"function"},{"doc":"","ref":"Paginator.Factory.html#params_with_assocs/2","title":"Paginator.Factory.params_with_assocs/2","type":"function"},{"doc":"","ref":"Paginator.Factory.html#payment_factory/0","title":"Paginator.Factory.payment_factory/0","type":"function"},{"doc":"","ref":"Paginator.Factory.html#string_params_for/2","title":"Paginator.Factory.string_params_for/2","type":"function"},{"doc":"","ref":"Paginator.Factory.html#string_params_with_assocs/2","title":"Paginator.Factory.string_params_with_assocs/2","type":"function"},{"doc":"Defines a page. Fields edges - a list of entries contained in this page. page_info - meta-data attached to this page.","ref":"Paginator.Page.html","title":"Paginator.Page","type":"module"},{"doc":"","ref":"Paginator.Page.html#t:t/0","title":"Paginator.Page.t/0","type":"type"},{"doc":"Defines page page_info. Fields start_cursor - an opaque cursor representing the first row of the current page, to be used with the before query parameter. end_cursor - an opaque cursor representing the last row of the current page, to be used with the after query parameter. limit - the maximum number of edges that can be contained in this page. total_count - the total number of edges matching the query. total_count_cap_exceeded - a boolean indicating whether the :total_count_limit was exceeded.","ref":"Paginator.PageInfo.html","title":"Paginator.PageInfo","type":"module"},{"doc":"","ref":"Paginator.PageInfo.html#t:opaque_cursor/0","title":"Paginator.PageInfo.opaque_cursor/0","type":"type"},{"doc":"","ref":"Paginator.PageInfo.html#t:t/0","title":"Paginator.PageInfo.t/0","type":"type"},{"doc":"","ref":"Paginator.Payment.html","title":"Paginator.Payment","type":"module"},{"doc":"","ref":"Paginator.Payment.html#failed/1","title":"Paginator.Payment.failed/1","type":"function"},{"doc":"","ref":"Paginator.Payment.html#successful/1","title":"Paginator.Payment.successful/1","type":"function"},{"doc":"","ref":"Paginator.Repo.html","title":"Paginator.Repo","type":"module"},{"doc":"Callback implementation for Ecto.Repo.aggregate/3 .","ref":"Paginator.Repo.html#aggregate/3","title":"Paginator.Repo.aggregate/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.aggregate/4 .","ref":"Paginator.Repo.html#aggregate/4","title":"Paginator.Repo.aggregate/4","type":"function"},{"doc":"Callback implementation for Ecto.Repo.all/2 .","ref":"Paginator.Repo.html#all/2","title":"Paginator.Repo.all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.checked_out?/0 .","ref":"Paginator.Repo.html#checked_out?/0","title":"Paginator.Repo.checked_out?/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.checkout/2 .","ref":"Paginator.Repo.html#checkout/2","title":"Paginator.Repo.checkout/2","type":"function"},{"doc":"","ref":"Paginator.Repo.html#child_spec/1","title":"Paginator.Repo.child_spec/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.config/0 .","ref":"Paginator.Repo.html#config/0","title":"Paginator.Repo.config/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.default_options/1 .","ref":"Paginator.Repo.html#default_options/1","title":"Paginator.Repo.default_options/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete!/2 .","ref":"Paginator.Repo.html#delete!/2","title":"Paginator.Repo.delete!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete/2 .","ref":"Paginator.Repo.html#delete/2","title":"Paginator.Repo.delete/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete_all/2 .","ref":"Paginator.Repo.html#delete_all/2","title":"Paginator.Repo.delete_all/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that forces all connections in the pool to disconnect within the given interval. See Ecto.Adapters.SQL.disconnect_all/3 for more information.","ref":"Paginator.Repo.html#disconnect_all/2","title":"Paginator.Repo.disconnect_all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.exists?/2 .","ref":"Paginator.Repo.html#exists?/2","title":"Paginator.Repo.exists?/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes an EXPLAIN statement or similar depending on the adapter to obtain statistics for the given query. See Ecto.Adapters.SQL.explain/4 for more information.","ref":"Paginator.Repo.html#explain/3","title":"Paginator.Repo.explain/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get!/3 .","ref":"Paginator.Repo.html#get!/3","title":"Paginator.Repo.get!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get/3 .","ref":"Paginator.Repo.html#get/3","title":"Paginator.Repo.get/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by!/3 .","ref":"Paginator.Repo.html#get_by!/3","title":"Paginator.Repo.get_by!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by/3 .","ref":"Paginator.Repo.html#get_by/3","title":"Paginator.Repo.get_by/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_dynamic_repo/0 .","ref":"Paginator.Repo.html#get_dynamic_repo/0","title":"Paginator.Repo.get_dynamic_repo/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.in_transaction?/0 .","ref":"Paginator.Repo.html#in_transaction?/0","title":"Paginator.Repo.in_transaction?/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert!/2 .","ref":"Paginator.Repo.html#insert!/2","title":"Paginator.Repo.insert!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert/2 .","ref":"Paginator.Repo.html#insert/2","title":"Paginator.Repo.insert/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_all/3 .","ref":"Paginator.Repo.html#insert_all/3","title":"Paginator.Repo.insert_all/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update!/2 .","ref":"Paginator.Repo.html#insert_or_update!/2","title":"Paginator.Repo.insert_or_update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update/2 .","ref":"Paginator.Repo.html#insert_or_update/2","title":"Paginator.Repo.insert_or_update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.load/2 .","ref":"Paginator.Repo.html#load/2","title":"Paginator.Repo.load/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one!/2 .","ref":"Paginator.Repo.html#one!/2","title":"Paginator.Repo.one!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one/2 .","ref":"Paginator.Repo.html#one/2","title":"Paginator.Repo.one/2","type":"function"},{"doc":"","ref":"Paginator.Repo.html#paginate/3","title":"Paginator.Repo.paginate/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.preload/3 .","ref":"Paginator.Repo.html#preload/3","title":"Paginator.Repo.preload/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.prepare_query/3 .","ref":"Paginator.Repo.html#prepare_query/3","title":"Paginator.Repo.prepare_query/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.put_dynamic_repo/1 .","ref":"Paginator.Repo.html#put_dynamic_repo/1","title":"Paginator.Repo.put_dynamic_repo/1","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query. See Ecto.Adapters.SQL.query!/4 for more information.","ref":"Paginator.Repo.html#query!/3","title":"Paginator.Repo.query!/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query. See Ecto.Adapters.SQL.query/4 for more information.","ref":"Paginator.Repo.html#query/3","title":"Paginator.Repo.query/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given multi-result query. See Ecto.Adapters.SQL.query_many!/4 for more information.","ref":"Paginator.Repo.html#query_many!/3","title":"Paginator.Repo.query_many!/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given multi-result query. See Ecto.Adapters.SQL.query_many/4 for more information.","ref":"Paginator.Repo.html#query_many/3","title":"Paginator.Repo.query_many/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.reload!/2 .","ref":"Paginator.Repo.html#reload!/2","title":"Paginator.Repo.reload!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.reload/2 .","ref":"Paginator.Repo.html#reload/2","title":"Paginator.Repo.reload/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.rollback/1 .","ref":"Paginator.Repo.html#rollback/1","title":"Paginator.Repo.rollback/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.start_link/1 .","ref":"Paginator.Repo.html#start_link/1","title":"Paginator.Repo.start_link/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stop/1 .","ref":"Paginator.Repo.html#stop/1","title":"Paginator.Repo.stop/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stream/2 .","ref":"Paginator.Repo.html#stream/2","title":"Paginator.Repo.stream/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that translates the given query to SQL. See Ecto.Adapters.SQL.to_sql/3 for more information.","ref":"Paginator.Repo.html#to_sql/2","title":"Paginator.Repo.to_sql/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.transaction/2 .","ref":"Paginator.Repo.html#transaction/2","title":"Paginator.Repo.transaction/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update!/2 .","ref":"Paginator.Repo.html#update!/2","title":"Paginator.Repo.update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update/2 .","ref":"Paginator.Repo.html#update/2","title":"Paginator.Repo.update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update_all/3 .","ref":"Paginator.Repo.html#update_all/3","title":"Paginator.Repo.update_all/3","type":"function"},{"doc":"","ref":"Paginator.TestMigration.html","title":"Paginator.TestMigration","type":"module"},{"doc":"","ref":"Paginator.TestMigration.html#change/0","title":"Paginator.TestMigration.change/0","type":"function"},{"doc":"A context for working with Pointers, a sort of global foreign key scheme.","ref":"Pointers.html","title":"Pointers","type":"module"},{"doc":"Return the provided pointer when it belongs to table queryable by the given table search term.","ref":"Pointers.html#assert_points_to!/2","title":"Pointers.assert_points_to!/2","type":"function"},{"doc":"Returns a Pointer, either the one provided or a synthesised one pointing to the provided schema object. Does not hit the database or cause the pointer to be written to the database whatsoever.","ref":"Pointers.html#cast!/1","title":"Pointers.cast!/1","type":"function"},{"doc":"","ref":"Pointers.html#get_table_id!/1","title":"Pointers.get_table_id!/1","type":"function"},{"doc":"Given a list of pointers which may or may have their pointed loaded, return a plan for preloading, a map of module name to set of loadable IDs.","ref":"Pointers.html#plan/1","title":"Pointers.plan/1","type":"function"},{"doc":"Returns a basic query over undeleted pointable objects in the system, optionally limited to one or more types. If the type is set to a Pointable, Virtual or Mixin schema, records will be selected from that schema directly. It is assumed this filters deleted records by construction. Otherwise, will query from Pointer, filtering not is_nil(deleted_at)","ref":"Pointers.html#query_base/1","title":"Pointers.query_base/1","type":"function"},{"doc":"","ref":"Pointers.html#schema/1","title":"Pointers.schema/1","type":"function"},{"doc":"Looks up the table for a given pointer","ref":"Pointers.html#table/1","title":"Pointers.table/1","type":"function"},{"doc":"","ref":"Pointers.Changesets.html","title":"Pointers.Changesets","type":"module"},{"doc":"Like Ecto.build_assoc/3, but can work with a Changeset","ref":"Pointers.Changesets.html#build_assoc/3","title":"Pointers.Changesets.build_assoc/3","type":"function"},{"doc":"True if the schema object's current state is :built","ref":"Pointers.Changesets.html#built?/1","title":"Pointers.Changesets.built?/1","type":"function"},{"doc":"Like Ecto.Changeset.cast but for Pointables, Virtuals and Mixins. If a pointable or virtual, Generates an ID if one is not present.","ref":"Pointers.Changesets.html#cast/3","title":"Pointers.Changesets.cast/3","type":"function"},{"doc":"","ref":"Pointers.Changesets.html#cast_assoc/3","title":"Pointers.Changesets.cast_assoc/3","type":"function"},{"doc":"","ref":"Pointers.Changesets.html#cast_belongs_to/4","title":"Pointers.Changesets.cast_belongs_to/4","type":"function"},{"doc":"","ref":"Pointers.Changesets.html#cast_has_many/4","title":"Pointers.Changesets.cast_has_many/4","type":"function"},{"doc":"","ref":"Pointers.Changesets.html#cast_has_one/4","title":"Pointers.Changesets.cast_has_one/4","type":"function"},{"doc":"","ref":"Pointers.Changesets.html#config_for/3","title":"Pointers.Changesets.config_for/3","type":"function"},{"doc":"True if the schema object's current state is :deleted","ref":"Pointers.Changesets.html#deleted?/1","title":"Pointers.Changesets.deleted?/1","type":"function"},{"doc":"","ref":"Pointers.Changesets.html#insert_verb/1","title":"Pointers.Changesets.insert_verb/1","type":"function"},{"doc":"True if the schema object's current state is :loaded","ref":"Pointers.Changesets.html#loaded?/1","title":"Pointers.Changesets.loaded?/1","type":"function"},{"doc":"Like put_assoc/3 but doesn't raise if the association doesn't exist","ref":"Pointers.Changesets.html#maybe_put_assoc/3","title":"Pointers.Changesets.maybe_put_assoc/3","type":"function"},{"doc":"","ref":"Pointers.Changesets.html#merge_child_errors/1","title":"Pointers.Changesets.merge_child_errors/1","type":"function"},{"doc":"Like Ecto.Changeset.put_assoc/3 but for Pointables, Virtuals and Mixins. Copies across keys where possible.","ref":"Pointers.Changesets.html#put_assoc/3","title":"Pointers.Changesets.put_assoc/3","type":"function"},{"doc":"","ref":"Pointers.Changesets.html#put_id_on_mixins/3","title":"Pointers.Changesets.put_id_on_mixins/3","type":"function"},{"doc":"Returns the schema object's current state.","ref":"Pointers.Changesets.html#state/1","title":"Pointers.Changesets.state/1","type":"function"},{"doc":"","ref":"Pointers.Changesets.html#update_data/2","title":"Pointers.Changesets.update_data/2","type":"function"},{"doc":"true if the provided changeset or list of changesets is valid.","ref":"Pointers.Changesets.html#valid?/1","title":"Pointers.Changesets.valid?/1","type":"function"},{"doc":"","ref":"Pointers.Class.html","title":"Pointers.Class","type":"module"},{"doc":"","ref":"Pointers.Class.html#t:t/0","title":"Pointers.Class.t/0","type":"type"},{"doc":"","ref":"Pointers.Form.html","title":"Pointers.Form","type":"module"},{"doc":"","ref":"Pointers.Form.html#form_schema/1","title":"Pointers.Form.form_schema/1","type":"macro"},{"doc":"","ref":"Pointers.Form.html#using/2","title":"Pointers.Form.using/2","type":"function"},{"doc":"Helpers for writing Pointer-aware migrations.","ref":"Pointers.Migration.html","title":"Pointers.Migration","type":"module"},{"doc":"Creates a mixin table - one with a ULID primary key and no trigger","ref":"Pointers.Migration.html#create_mixin_table/3","title":"Pointers.Migration.create_mixin_table/3","type":"macro"},{"doc":"Creates a pointable table along with its trigger.","ref":"Pointers.Migration.html#create_pointable_table/2","title":"Pointers.Migration.create_pointable_table/2","type":"macro"},{"doc":"","ref":"Pointers.Migration.html#create_pointable_table/3","title":"Pointers.Migration.create_pointable_table/3","type":"macro"},{"doc":"","ref":"Pointers.Migration.html#create_pointable_table/4","title":"Pointers.Migration.create_pointable_table/4","type":"macro"},{"doc":"Creates a random table - one with a UUID v4 primary key.","ref":"Pointers.Migration.html#create_random_table/3","title":"Pointers.Migration.create_random_table/3","type":"macro"},{"doc":"","ref":"Pointers.Migration.html#create_virtual/1","title":"Pointers.Migration.create_virtual/1","type":"function"},{"doc":"","ref":"Pointers.Migration.html#create_virtual/2","title":"Pointers.Migration.create_virtual/2","type":"function"},{"doc":"","ref":"Pointers.Migration.html#create_virtual_trigger_function/0","title":"Pointers.Migration.create_virtual_trigger_function/0","type":"function"},{"doc":"Drops a mixin table.","ref":"Pointers.Migration.html#drop_mixin_table/1","title":"Pointers.Migration.drop_mixin_table/1","type":"function"},{"doc":"Drops a pointable table","ref":"Pointers.Migration.html#drop_pointable_table/1","title":"Pointers.Migration.drop_pointable_table/1","type":"function"},{"doc":"","ref":"Pointers.Migration.html#drop_pointable_table/2","title":"Pointers.Migration.drop_pointable_table/2","type":"function"},{"doc":"Drops a random table.","ref":"Pointers.Migration.html#drop_random_table/1","title":"Pointers.Migration.drop_random_table/1","type":"function"},{"doc":"","ref":"Pointers.Migration.html#drop_table/1","title":"Pointers.Migration.drop_table/1","type":"function"},{"doc":"","ref":"Pointers.Migration.html#drop_virtual/1","title":"Pointers.Migration.drop_virtual/1","type":"function"},{"doc":"","ref":"Pointers.Migration.html#drop_virtual/2","title":"Pointers.Migration.drop_virtual/2","type":"function"},{"doc":"When migrating up: initialises the pointers database. When migrating down: deinitialises the pointers database.","ref":"Pointers.Migration.html#init_pointers/0","title":"Pointers.Migration.init_pointers/0","type":"function"},{"doc":"Given :up : initialises the pointers database. Given :down : deinitialises the pointers database.","ref":"Pointers.Migration.html#init_pointers/1","title":"Pointers.Migration.init_pointers/1","type":"function"},{"doc":"See Pointers.ULID.Migration.init_pointers_ulid_extra/0 .","ref":"Pointers.Migration.html#init_pointers_ulid_extra/0","title":"Pointers.Migration.init_pointers_ulid_extra/0","type":"function"},{"doc":"","ref":"Pointers.Migration.html#migrate_virtual/1","title":"Pointers.Migration.migrate_virtual/1","type":"function"},{"doc":"","ref":"Pointers.Migration.html#migrate_virtual/2","title":"Pointers.Migration.migrate_virtual/2","type":"function"},{"doc":"","ref":"Pointers.Migration.html#migrate_virtual/3","title":"Pointers.Migration.migrate_virtual/3","type":"function"},{"doc":"Creates a strong, weak or unbreakable pointer depending on type .","ref":"Pointers.Migration.html#pointer/2","title":"Pointers.Migration.pointer/2","type":"function"},{"doc":"A reference to a pointer for use with add/3 . A strong pointer will be deleted when the thing it's pointing to is deleted.","ref":"Pointers.Migration.html#strong_pointer/1","title":"Pointers.Migration.strong_pointer/1","type":"function"},{"doc":"A reference to a pointer for use with add/3 . An unbreakable pointer will prevent the thing it's pointing to from being deleted.","ref":"Pointers.Migration.html#unbreakable_pointer/1","title":"Pointers.Migration.unbreakable_pointer/1","type":"function"},{"doc":"A reference to a pointer for use with add/3 . A weak pointer will be set null when the thing it's pointing to is deleted.","ref":"Pointers.Migration.html#weak_pointer/1","title":"Pointers.Migration.weak_pointer/1","type":"function"},{"doc":"","ref":"Pointers.Migration.html#t:pointer_type/0","title":"Pointers.Migration.pointer_type/0","type":"type"},{"doc":"If a Pointer represents an object, mixins represent data about the object. Mixins collate optional additional information about an object. Different types of object will typically make use of different mixins. You can see these as aspects of the data if you like. A mixin table starts with an id column which references Pointer and forms the default primary key. It is up to the user to choose which other fields go in the table, and thus what the mixin is for. Use of a mixin is typically through has_one : has_one :my_mixin , MyMixin , foreign_key : :id , references : :id Sometimes, the user may wish to add fields to the primary key by using the primary_key: true option to add in their migrations. This is permitted and in such case we call the resulting mixin a multimixin . Use becomes has_many : has_many :my_mixin , MyMixin , foreign_key : :id , references : :id Thus the choice of single or multi comes down to how many times you want to store that data for the object. A user's profile naturally lends itself to a regular single mixin, whereas an object's appearance in a feed would naturally lend itself to being a multimixin since the object may appear in many feeds. Declaring a mixin table type defmodule My.Mixin do use Pointers.Mixin , otp_app : :my_app , source : &quot;postgres_table_name&quot; mixin_schema do field :is_awesome , :boolean end end","ref":"Pointers.Mixin.html","title":"Pointers.Mixin","type":"module"},{"doc":"","ref":"Pointers.Mixin.html#mixin_schema/1","title":"Pointers.Mixin.mixin_schema/1","type":"macro"},{"doc":"","ref":"Pointers.Mixin.html#using/2","title":"Pointers.Mixin.using/2","type":"function"},{"doc":"We could not find the requested object","ref":"Pointers.NotFound.html","title":"Pointers.NotFound","type":"exception"},{"doc":"Creates a new NotFound","ref":"Pointers.NotFound.html#new/1","title":"Pointers.NotFound.new/1","type":"function"},{"doc":"","ref":"Pointers.NotFound.html#t:t/0","title":"Pointers.NotFound.t/0","type":"type"},{"doc":"Sets up an Ecto Schema for a Pointable table. Sample Usage use Pointers.Pointable , otp_app : :my_app , # your OTP application&#39;s name source : &quot;my_table&quot; , # default name of table in database table_id : &quot;01EBTVSZJ6X02J01R1XWWPWGZW&quot; # unique ULID to identify table pointable_schema do # ... fields go here, if any end Overriding with configuration During use (i.e. compilation time), we will attempt to load configuration from the provided :otp_app under the key of the current module. Any values provided here will override the defaults provided to use . This allows you to configure them after the fact. Additionally, pointables use Flexto 's flex_schema() , so you can provide additional configuration for those in the same place. I shall say it again because it's important: This happens at compile time . You must rebuild the app containing the pointable whenever the configuration changes. Introspection Defines a function __pointers__/1 to introspect data. Recognised parameters: :role - :pointable :table_id - retrieves the ULID id of the pointable table. :otp_app - retrieves the OTP application to which this belongs.","ref":"Pointers.Pointable.html","title":"Pointers.Pointable","type":"module"},{"doc":"","ref":"Pointers.Pointable.html#pointable_schema/1","title":"Pointers.Pointable.pointable_schema/1","type":"macro"},{"doc":"A Pointer is any object that can be referenced by its id. Pointer is a simple table consisting of three fields: id - the database-unique id for this pointer in ULID format. table_id - a type tag, references Table . deleted_at - timestamp of when the object was deleted, null by default. To reference any object, simply reference Pointer : alias Pointers.Pointer belongs_to :object , Pointer To define a new object type there are two options, you should choose one: Virtual - an object type with a view over Pointer limited by type. Pointable - an object type with a table which is kept synchronised with Pointer . For most purposes, you should use a Virtual . Pointable exists mostly to support existing code. The major difference in practice is that you cannot add new fields to a virtual. Most of the time you will want to store such extra fields in one or more mixins anyway so they may be reused. See Mixin for more information about mixins.","ref":"Pointers.Pointer.html","title":"Pointers.Pointer","type":"module"},{"doc":"Changeset for creating a Pointer","ref":"Pointers.Pointer.html#create/2","title":"Pointers.Pointer.create/2","type":"function"},{"doc":"A securely randomly generated UUID keyed table. Not pointable.","ref":"Pointers.Random.html","title":"Pointers.Random","type":"module"},{"doc":"","ref":"Pointers.Random.html#random_schema/1","title":"Pointers.Random.random_schema/1","type":"macro"},{"doc":"","ref":"Pointers.Random.html#using/2","title":"Pointers.Random.using/2","type":"function"},{"doc":"One Table to rule them all. A record of a table participating in the pointers abstraction - mandatory if participating.","ref":"Pointers.Table.html","title":"Pointers.Table","type":"module"},{"doc":"","ref":"Pointers.Table.html#t:t/0","title":"Pointers.Table.t/0","type":"type"},{"doc":"A Global cache of Tables to be queried by their (Pointer) IDs, table names or Ecto Schema module names. Use of the Table Service requires: You have run the migrations shipped with this library. You have started Pointers.Tables before querying. All OTP applications with pointable Ecto Schemata to be added to the schema path. OTP 21.2 or greater, though we recommend using the most recent release available. While this module is a GenServer, it is only responsible for setup of the cache and then exits with :ignore having done so. It is not recommended to restart the service as this will lead to a stop the world garbage collection of all processes and the copying of the entire cache to each process that has queried it since its last local garbage collection.","ref":"Pointers.Tables.html","title":"Pointers.Tables","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Pointers.Tables.html#child_spec/1","title":"Pointers.Tables.child_spec/1","type":"function"},{"doc":"","ref":"Pointers.Tables.html#data/0","title":"Pointers.Tables.data/0","type":"function"},{"doc":"Look up a table id by id, name or schema, raise NotFound if not found.","ref":"Pointers.Tables.html#id!/1","title":"Pointers.Tables.id!/1","type":"function"},{"doc":"Look up a table id by id, name or schema.","ref":"Pointers.Tables.html#id/1","title":"Pointers.Tables.id/1","type":"function"},{"doc":"Look up many ids at once, raise NotFound if any of them are not found","ref":"Pointers.Tables.html#ids!/1","title":"Pointers.Tables.ids!/1","type":"function"},{"doc":"Look up a schema module by id, name or schema, raise NotFound if not found","ref":"Pointers.Tables.html#schema!/1","title":"Pointers.Tables.schema!/1","type":"function"},{"doc":"Look up a schema module by id, name or schema","ref":"Pointers.Tables.html#schema/1","title":"Pointers.Tables.schema/1","type":"function"},{"doc":"Populates the global cache with table data via introspection.","ref":"Pointers.Tables.html#start_link/1","title":"Pointers.Tables.start_link/1","type":"function"},{"doc":"Look up a Table by name or id, raise NotFound if not found.","ref":"Pointers.Tables.html#table!/1","title":"Pointers.Tables.table!/1","type":"function"},{"doc":"Get a Table identified by name, id or module.","ref":"Pointers.Tables.html#table/1","title":"Pointers.Tables.table/1","type":"function"},{"doc":"A query is either a table's (database) name or (Pointer) ID as a binary or the name of its Ecto Schema Module as an atom.","ref":"Pointers.Tables.html#t:query/0","title":"Pointers.Tables.query/0","type":"type"},{"doc":"","ref":"Pointers.Test.M.html","title":"Pointers.Test.M","type":"module"},{"doc":"","ref":"Pointers.Test.MM.html","title":"Pointers.Test.MM","type":"module"},{"doc":"","ref":"Pointers.Test.P.html","title":"Pointers.Test.P","type":"module"},{"doc":"","ref":"Pointers.Test.V.html","title":"Pointers.Test.V","type":"module"},{"doc":"An Ecto type for ULID strings.","ref":"Pointers.ULID.html","title":"Pointers.ULID","type":"module"},{"doc":"Generates a binary ULID. If a value is provided for timestamp , the generated ULID will be for the provided timestamp. Otherwise, a ULID will be generated for the current time. Arguments: timestamp : A Unix timestamp with millisecond precision.","ref":"Pointers.ULID.html#bingenerate/1","title":"Pointers.ULID.bingenerate/1","type":"function"},{"doc":"","ref":"Pointers.ULID.html#bintimestamp/1","title":"Pointers.ULID.bintimestamp/1","type":"function"},{"doc":"Same as cast/1 but raises Ecto.CastError on invalid arguments.","ref":"Pointers.ULID.html#cast!/1","title":"Pointers.ULID.cast!/1","type":"function"},{"doc":"Casts a 26-byte encoded string to ULID or a 16-byte binary unchanged","ref":"Pointers.ULID.html#cast/1","title":"Pointers.ULID.cast/1","type":"function"},{"doc":"","ref":"Pointers.ULID.html#dump!/1","title":"Pointers.ULID.dump!/1","type":"function"},{"doc":"Converts a Crockford Base32 encoded ULID into a binary.","ref":"Pointers.ULID.html#dump/1","title":"Pointers.ULID.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"Pointers.ULID.html#embed_as/1","title":"Pointers.ULID.embed_as/1","type":"function"},{"doc":"Returns the randomness portion of the encoded ulid","ref":"Pointers.ULID.html#encoded_randomness/1","title":"Pointers.ULID.encoded_randomness/1","type":"function"},{"doc":"Returns the timestamp portion of the encoded ulid","ref":"Pointers.ULID.html#encoded_timestamp/1","title":"Pointers.ULID.encoded_timestamp/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"Pointers.ULID.html#equal?/2","title":"Pointers.ULID.equal?/2","type":"function"},{"doc":"Generates a Crockford Base32 encoded ULID. If a value is provided for timestamp , the generated ULID will be for the provided timestamp. Otherwise, a ULID will be generated for the current time. Arguments: timestamp : A Unix timestamp with millisecond precision.","ref":"Pointers.ULID.html#generate/1","title":"Pointers.ULID.generate/1","type":"function"},{"doc":"Converts a binary ULID into a Crockford Base32 encoded string.","ref":"Pointers.ULID.html#load/1","title":"Pointers.ULID.load/1","type":"function"},{"doc":"translates alphanumerics into a sentinel ulid value","ref":"Pointers.ULID.html#synthesise!/1","title":"Pointers.ULID.synthesise!/1","type":"function"},{"doc":"Returns the timestamp of an encoded or unencoded ULID","ref":"Pointers.ULID.html#timestamp/1","title":"Pointers.ULID.timestamp/1","type":"function"},{"doc":"The underlying schema type.","ref":"Pointers.ULID.html#type/0","title":"Pointers.ULID.type/0","type":"function"},{"doc":"","ref":"Pointers.ULID.Migration.html","title":"Pointers.ULID.Migration","type":"module"},{"doc":"","ref":"Pointers.ULID.Migration.html#init_pointers_ulid_extra/0","title":"Pointers.ULID.Migration.init_pointers_ulid_extra/0","type":"function"},{"doc":"","ref":"Pointers.ULID.Migration.html#init_pointers_ulid_extra/1","title":"Pointers.ULID.Migration.init_pointers_ulid_extra/1","type":"function"},{"doc":"Has a ULID primary key but is not pointable.","ref":"Pointers.Unpointable.html","title":"Pointers.Unpointable","type":"module"},{"doc":"","ref":"Pointers.Unpointable.html#unpointable_schema/1","title":"Pointers.Unpointable.unpointable_schema/1","type":"macro"},{"doc":"","ref":"Pointers.Unpointable.html#using/2","title":"Pointers.Unpointable.using/2","type":"function"},{"doc":"Sets up an Ecto Schema for a Virtual Pointable Virtual Pointables (or just virtuals ) are like pointables with no additional columns, except instead of being backed by a table they are backed by a view. This is more efficient of resources but only works when there are no additional columns to add. If you need to add columns to the schema, you should use a pointable. Sample Usage use Pointers.Virtual , otp_app : :my_app , # your OTP application&#39;s name source : &quot;my_table&quot; , # default name of view in database table_id : &quot;01EBTVSZJ6X02J01R1XWWPWGZW&quot; # valid ULID to identify virtual virtual_schema do # ... `has_one`, `has_many`, or *virtual* fields ONLY go here. end Overriding with configuration During use (i.e. compilation time), we will attempt to load configuration from the provided :otp_app under the key of the current module. Any values provided here will override the defaults provided to use . This allows you to configure them after the fact. Additionally, pointables use Flexto 's flex_schema() , so you can provide additional configuration for those in the same place. Unlike a regular pointable, you should not add additional (non-virtual) fields, but it is permitted to add has_one / has_many associations. I shall say it again because it's important: This happens at compile time . You must rebuild the app containing the pointable whenever the configuration changes. Introspection Defines a function __pointers__/1 to introspect data. Recognised parameters: :role - :virtual . :table_id - retrieves the ULID id of the virtual. :otp_app - retrieves the OTP application to which this belongs.","ref":"Pointers.Virtual.html","title":"Pointers.Virtual","type":"module"},{"doc":"","ref":"Pointers.Virtual.html#virtual_schema/1","title":"Pointers.Virtual.virtual_schema/1","type":"macro"},{"doc":"","ref":"Releaser.Git.html","title":"Releaser.Git","type":"module"},{"doc":"This module contains some git-specific functionality","ref":"Releaser.Git.html#add_commit_and_tag/1","title":"Releaser.Git.add_commit_and_tag/1","type":"function"},{"doc":"","ref":"Releaser.Publish.html","title":"Releaser.Publish","type":"module"},{"doc":"","ref":"Releaser.Publish.html#publish!/0","title":"Releaser.Publish.publish!/0","type":"function"},{"doc":"","ref":"Releaser.Tests.html","title":"Releaser.Tests","type":"module"},{"doc":"","ref":"Releaser.Tests.html#run_tests!/0","title":"Releaser.Tests.run_tests!/0","type":"function"},{"doc":"","ref":"Releaser.VersionUtils.html","title":"Releaser.VersionUtils","type":"module"},{"doc":"Some utilities to get and set version numbers in the mix.exs file and to programatically transform version numbers. Maybe the bump_* functions should be in the standard library? This script doesn't support pre-release versions or versions with build information.","ref":"Releaser.VersionUtils.html#bump_major/1","title":"Releaser.VersionUtils.bump_major/1","type":"function"},{"doc":"","ref":"Releaser.VersionUtils.html#bump_minor/1","title":"Releaser.VersionUtils.bump_minor/1","type":"function"},{"doc":"","ref":"Releaser.VersionUtils.html#bump_patch/1","title":"Releaser.VersionUtils.bump_patch/1","type":"function"},{"doc":"","ref":"Releaser.VersionUtils.html#bump_pre/2","title":"Releaser.VersionUtils.bump_pre/2","type":"function"},{"doc":"","ref":"Releaser.VersionUtils.html#get_version/1","title":"Releaser.VersionUtils.get_version/1","type":"function"},{"doc":"","ref":"Releaser.VersionUtils.html#set_version/2","title":"Releaser.VersionUtils.set_version/2","type":"function"},{"doc":"","ref":"Releaser.VersionUtils.html#update_version/2","title":"Releaser.VersionUtils.update_version/2","type":"function"},{"doc":"","ref":"Releaser.VersionUtils.html#version_to_string/1","title":"Releaser.VersionUtils.version_to_string/1","type":"function"},{"doc":"","ref":"Voodoo.html","title":"Voodoo","type":"module"},{"doc":"Generates a reverse router function with the given name based upon a compiled(!) phoenix router module. Must be used outside of the router module, or else the router won't be compiled yet and we won't be able to look up the routes. Generated function wraps the existing phoenix helpers. defmodule MyAppWeb.Router do use MyAppWeb , :router # ... end defmodule MyAppWeb.Router.Reverse do import Voodoo , only : [ def_reverse_router : 2 ] def_reverse_router :path , for : MyAppWeb.Router end","ref":"Voodoo.html#def_reverse_router/2","title":"Voodoo.def_reverse_router/2","type":"macro"},{"doc":"Turns a Conn or Socket into the name of the router that routed it.","ref":"Voodoo.html#router/1","title":"Voodoo.router/1","type":"function"},{"doc":"Logging and debug printing that include location information","ref":"Where.html","title":"Where","type":"module"},{"doc":"Like dump , but logging at debug level","ref":"Where.html#debug/2","title":"Where.debug/2","type":"macro"},{"doc":"Like debug , but will do nothing unless the :debug option is truthy","ref":"Where.html#debug?/3","title":"Where.debug?/3","type":"macro"},{"doc":"IO.inspect with position information, an optional label and configured not to truncate output.","ref":"Where.html#dump/2","title":"Where.dump/2","type":"macro"},{"doc":"Like dump , but logging at error level, and returns an error tuple","ref":"Where.html#error/2","title":"Where.error/2","type":"macro"},{"doc":"Like dump , but logging at info level","ref":"Where.html#info/2","title":"Where.info/2","type":"macro"},{"doc":"","ref":"Where.html#return_error/2","title":"Where.return_error/2","type":"function"},{"doc":"Tries to 'do what i mean'. Requires the debug option to be set regardless. If verbose is also set, will inspect else will attempt to print some (hopefully smaller) type-dependent summary of the data (list length, map keys).","ref":"Where.html#smart/3","title":"Where.smart/3","type":"macro"},{"doc":"Like debug? , but additionally required the :verbose option to be set. Intended for large output.","ref":"Where.html#verbose?/3","title":"Where.verbose?/3","type":"macro"},{"doc":"Like dump , but logging at warn level","ref":"Where.html#warn/2","title":"Where.warn/2","type":"macro"},{"doc":"","ref":"Zest.html","title":"Zest","type":"module"},{"doc":"Iterates over a collections, calling the provided effectful function with each item.","ref":"Zest.html#each/2","title":"Zest.each/2","type":"function"},{"doc":"Iterates over two collections, calling the provided effectful function with each pair of items","ref":"Zest.html#each/3","title":"Zest.each/3","type":"function"},{"doc":"You take on the role of the apply function in this exciting function that wraps execution of a function such that your function is responsible for calling it.","ref":"Zest.html#hijack/2","title":"Zest.hijack/2","type":"function"},{"doc":"Add some debug information to the context for the duration of a function's execution. If a raise , throw or exit occurs, the context will be pretty printed to the screen to aid with debugging.","ref":"Zest.html#in_scope/2","title":"Zest.in_scope/2","type":"function"},{"doc":"Catches errors and exceptions, invoking an interceptor function","ref":"Zest.html#intercept/2","title":"Zest.intercept/2","type":"function"},{"doc":"An interceptor function which simply rethrows/reraises/re-exits","ref":"Zest.html#rethrow/3","title":"Zest.rethrow/3","type":"function"},{"doc":"Wraps an interceptor or nullary function into an interceptor function such that after the execution of the provided function, the error or exception will be rethrown.","ref":"Zest.html#rethrowing/1","title":"Zest.rethrowing/1","type":"function"},{"doc":"Add some debug information to the context for the duration of a block or expression. If a raise , throw or exit occurs, the context will be pretty printed to the screen to aid with debugging. Examples: scope [foo: :bar[, assert(true == false) scope [foo: :bar] do assert true == false end","ref":"Zest.html#scope/2","title":"Zest.scope/2","type":"macro"},{"doc":"Wrap a function such that it is as if its body was wrapped in scope/2","ref":"Zest.html#scoped/2","title":"Zest.scoped/2","type":"function"},{"doc":"","ref":"Zest.html#t:intercept_type/0","title":"Zest.intercept_type/0","type":"type"},{"doc":"","ref":"Zest.html#t:interceptor/0","title":"Zest.interceptor/0","type":"type"},{"doc":"Helpers to make random generator functions more useful in tests","ref":"Zest.Faking.html","title":"Zest.Faking","type":"module"},{"doc":"Partner to unused . Adds a list of values to the list of used values under a key.","ref":"Zest.Faking.html#forbid/2","title":"Zest.Faking.forbid/2","type":"function"},{"doc":"Returns the next unused integer id for name starting from start . Permits jumping by artificially increasing start - if start is higher than the last used id, it will return start and set it as the last used id","ref":"Zest.Faking.html#sequential/2","title":"Zest.Faking.sequential/2","type":"function"},{"doc":"Reruns a faker until a predicate passes. Default limit is 10 tries.","ref":"Zest.Faking.html#such_that/4","title":"Zest.Faking.such_that/4","type":"function"},{"doc":"Reruns a faker until an unseen value has been generated. Default limit is 10 tries. Stores seen things in the process dict (yes, that process dict)","ref":"Zest.Faking.html#unused/3","title":"Zest.Faking.unused/3","type":"function"},{"doc":"Bonfire - tend to your digital life in community Customise and host your own online space and control your experience at the most granular level. ⚠️ Warning This project is in the beta stage - you're welcome to try out it out (specifically the social features in the classic flavour), but APIs may still change and no guarantees are given about stability. You can keep track of progress in our milestones 🔥 Flavours This repo includes configurations to run two main flavours of Bonfire you can choose from: Classic for basic social networking Cooperation with a bunch more extensions and features As well as app flavours being built by others, including: Haha Academy by haha.academy Reflow by reflowproject.eu and dyne.org","ref":"readme.html","title":"Bonfire","type":"extras"},{"doc":"Website Set up an instance - for testing and evaluation only! Hacking on Bonfire Code documentation Community chat","ref":"readme.html#documentation","title":"Bonfire - 📖 Documentation","type":"extras"},{"doc":"Copyright (c) 2020-2022 Bonfire Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"readme.html#copyright-and-license","title":"Bonfire - Copyright and License","type":"extras"},{"doc":"These instructions are for hacking on Bonfire. If you wish to deploy in production, please refer to our Deployment Guide ! Hello, potential contributor! :-) This is a work in progress guide to getting up and running as a developer. Please ask questions in the issue tracker if something is not clear and we'll try to improve it. Happy hacking!","ref":"hacking.html","title":"Development guide","type":"extras"},{"doc":"Bonfire is currently beta software. While it's fun to play with it, we would not recommend running any production instances (meaning not using it for your primary fediverse identity) yet because it's not quite ready for that today.","ref":"hacking.html#status-beta-have-fun-and-provide-feedback","title":"Development guide - Status: beta - have fun and provide feedback 🙏","type":"extras"},{"doc":"Either way, you need to first clone this repository and change into the directory and then do some configuration: $ git clone https://github.com/bonfire-networks/bonfire-app bonfire $ cd bonfire","ref":"hacking.html#download","title":"Development guide - Download","type":"extras"},{"doc":"Pick a flavour Bonfire is a flexible platform that powers a variety of social networks. The first thing you have to choose is which app (or &quot;flavour&quot;) you want to hack on: classic (&quot;Bonfire Social&quot;, a toot-based social network that interoperates with the fediverse) cooperation (for building cooperative communities) reflow (for community economic activities) haha (for learning new things) Note that at the current time, the core team are focusing most of their efforts on the classic flavour and this is where we recommend you start. You first need to install just which is a handy tool (a just alternative) to run commands defined in ./justfile . So for example if you want to run the classic flavour, run: export FLAVOUR=classic (you may also want to put this in the appropriate place in your system so your choice of flavour is remembered for next time) just config Configure Then edit the config (especially the secrets) for the current flavour in ./.env Option A - the entry way (fully managed via docker-compose, recommended when you're first exploring) Dependencies: Recent versions of Docker &amp; docker-compose Set an environment variable to indicate your choice: export WITH_DOCKER=total Make sure you've edited your .env file (see above) before getting started and proceed to Hello world! Option B - the easy way (with bare-metal elixir, and docker-managed tooling, database &amp; search index, recommended for active development) Dependencies: Recent versions of Elixir (1.13+) and OTP/erlang (24+) yarn Recent versions of Docker &amp; docker-compose Set an environment variable to indicate your choice: export WITH_DOCKER=easy Make sure you've edited your .env file (see above) before getting started and proceed to Hello world! Option C - the partial way (with bare-metal elixir and tooling, and docker-managed database &amp; search index) Dependencies: Recent versions of Elixir (1.13+) and OTP/erlang (24+) Recent versions of Rust and Cargo yarn Recent versions of Docker &amp; docker-compose Set an environment variable to indicate your choice: export WITH_DOCKER=partial Make sure you've edited your .env file (see above) before getting started and proceed to Hello world! Option D - the bare metal (if you don't use docker) Dependencies: Recent versions of Elixir (1.13+) and OTP/erlang (24+) Recent versions of Rust and Cargo yarn Postgres 12+ (or rather Postgis if using the bonfire_geolocate extension) Meili Search (optional) You will need to set the relevant environment variables in the .env file (see above) to match your local install of Postgres. If you want search capabilities, you'll also need to setup a Meili server and set the relevant env variables as well. Set an environment variable to indicate your choice: export WITH_DOCKER=no and proceed to Hello world! Option E - the nix one (dev environment with Nix) Dependencies: Run a recent version of Nix or NixOS: https://nixos.org/download.html Enable Flakes: https://nixos.wiki/wiki/Flakes#Installing_flakes Install direnv through nix if you don't have the tool already: nix profile install nixpkgs#direnv and add it to your shell: https://direnv.net/docs/hook.html Clone the bonfire-app repo if you haven't already and allow direnv to use environment variables: git clone https :// github . com / bonfire - networks / bonfire - app cd ` bonfire - app ` direnv allow The tool direnv is necessary for the nix setup as the nix shell environment will use variables defined on .envrc to set itself up. Note: when you run direnv allow on the bonfire-app directory for the first time, nix will automatically fetch the dependencies for bonfire. The process will take a while as it's downloading everything needed to use the development environment. Afterwards you will be able to use just fine. Proceeding times you enter the directory, the shell with automatically set up for your use without downloading the packages again. You will need to update the db directory which is automatically created by nix the first time you initialized the shell with direnv allow . You can do so with the following steps: Update props.nix to the settings you want. Run just nix-db-init to create the database and user for postgres defined on props.nix . Modify the .env file to comment out all POSTGRES_* variables. These are populated automatically by nix. So if the variables are set here, you may get issues with overriding your settings in props.nix when using bonfire. You can now proceed to Hello World! Note: if you ever want to shut off the postgres server in nix, simply run the nix-db targets in just: # stop postgres server running locally just nix - db stop # start postgres server running locally just nix - db start","ref":"hacking.html#configure","title":"Development guide - Configure","type":"extras"},{"doc":"From a fresh checkout of this repository, this command will fetch the app's dependencies and setup the database (the same commands apply for all three options above): just setup You should then be able to run the app with: just dev See the just commands below for more things you may want to do.","ref":"hacking.html#hello-world","title":"Development guide - Hello world!","type":"extras"},{"doc":"By default, the back-end listens on port 4000 (TCP), so you can access it on http://localhost:4000/ Your first step will be to create an account to log in with. The easiest way to do this is with our mix task: $ just mix bonfire.account.new Enter an email address: root@localhost Enter a password: Your password must be at least 10 characters long and the output could be more helpful if you don't do that. This task seems to work most reliably if you open a second terminal window with the devserver running. We're not sure why. You should then be able to log in and create a user through the web interface. If you would like to become an administrator, there is a mix task for that too: just mix bonfire.user.admin.promote your_username","ref":"hacking.html#onboarding","title":"Development guide - Onboarding","type":"extras"},{"doc":"We like to think of bonfire as a comfortable way of developing software - there are a lot of conveniences built in once you know how they all work. The gotcha is that while you don't know them, it can be a bit overwhelming. Don't worry, we've got your back. Architecture - an overview of the stack and code structure. Bonfire-flavoured Elixir - an introduction to the way we write Elixir. Bonfire's Database: an Introduction - an overview of how our database is designed. Boundaries - an introduction to our access control system. Note: these are still at the early draft stage, we expect to gradually improve documentation over time.","ref":"hacking.html#the-bonfire-environment","title":"Development guide - The Bonfire Environment","type":"extras"},{"doc":"The code is somewhat documented inline. You can generate HTML docs (using Exdoc ) by running just docs .","ref":"hacking.html#documentation","title":"Development guide - Documentation","type":"extras"},{"doc":"messctl is a little utility for programmatically updating the .deps files from which the final elixir dependencies list is compiled by the mess script. The only use of it is in the dep-* tasks of the Makefile. It is used by some of the project developers and the build does not rely on it. ./forks/ is used to hack on local copies of dependencies. You can clone a dependency from its git repo (like a bonfire extension) and use the local version during development, eg: just dep.clone.local bonfire_me https://github.com/bonfire-networks/bonfire_me You can migrate the DB when the app is running (also runs automatically on startup): EctoSparkles.Migrator.migrate Usage under Windows (WSL, MSYS or CYGWIN) By default, the justfile requires symlinks, which can be enabled with the help of this link . See the pull request adding WSL support for details about usage without symlinks.","ref":"hacking.html#additional-information","title":"Development guide - Additional information","type":"extras"},{"doc":"Run just followed by any of these commands when appropriate rather than directly using the equivalent commands like mix , docker , docker-compose , etc. For example, just setup will get you started, and just dev will run the app. You can first set an env variable to control which mode these commands will assume you're using. Here are your options: WITH_DOCKER=total : use docker for everything (default) WITH_DOCKER=partial : use docker for services like the DB WITH_DOCKER=easy : use docker for services like the DB &amp; compiled utilities like messctl WITH_DOCKER=no : please no Run just help to see the list of possible commands and what they do.","ref":"hacking.html#just-commands","title":"Development guide - just commands","type":"extras"},{"doc":"EACCES Permissions Error If you get a permissions error when following any of the steps, run the following command and it should be fixed: cd bonfire &amp;&amp; sudo chown -R yourusername:yourusername . Note that the command should be modified so your shell is pointing to wherever you have bonfire installed. If you are already in the bonfire directory then you only need to worry about running the chown portion of the command. Unable to access Postgres database If you are getting any :nxdomain errors, check if you have any firewalls that may be blocking the port on your system. For example, if you are running UFW (a lot of Linux distros do), run the following command to allow access to port 4000: sudo ufw allow 4000 (Mix) Package fetch failed Example: ** (Mix) Package fetch failed and no cached copy available (https://repo.hex.pm/tarballs/distillery-2.0.12.tar) In this case, distillery (as an example of a dependency) made a new release and retired the old release from hex. The new version ( 2.0.14 ) is quite close to the version we were depending on ( 2.0.12 ), so we chose to upgrade: mix deps.update distillery This respects the version bounds in mix.exs ( ~&gt; 2.0 ), so increment that if required. (DBConnection.ConnectionError) tcp recv: closed Example: ** (DBConnection.ConnectionError) tcp recv: closed (the connection was closed by the pool, possibly due to a timeout or because the pool has been terminated) In this case, the seeds were unable to complete because a query took too long to execute on your machine. You can configure the timeout to be larger in the dev environment: Open config/dev.exs in your editor. Find the database configuration (search for Bonfire.Repo ). Add timeout: 60_000 to the list of options: config :bonfire , Bonfire.Repo , timeout : 60_000 , [ ... ]","ref":"hacking.html#troubleshooting","title":"Development guide - Troubleshooting","type":"extras"},{"doc":"WARNING: beta status - have fun but don't rely on it yet 🙏 Bonfire is currently beta software. While it's fun to play with it, we would not recommend running any production instances yet (meaning not using it for your primary fediverse identity) because it's not quite ready for that today. These instructions are for setting up Bonfire in production. If you want to run the backend in development, please refer to our Developer Guide !","ref":"deploy.html","title":"Deployment guide","type":"extras"},{"doc":"We recommend only granting an account to people you trust to minimise the attack surface. Accordingly, Bonfire ships with public registration disabled. The admin panel has an invite facility.","ref":"deploy.html#security-warning","title":"Deployment guide - Security Warning","type":"extras"},{"doc":"You must provide a postgresql database for data storage. We require postgres 12 or above. If you are running in a restricted environment such as Amazon RDS, you will need to execute some sql against the database: CREATE EXTENSION IF NOT EXISTS citext ;","ref":"deploy.html#step-0-configure-your-database","title":"Deployment guide - Step 0 - Configure your database","type":"extras"},{"doc":"Install dependencies. You will need to install just , and other requirements such as Docker (check the exact list of requirements based on the option you choose in step 2.) Clone this repository and change into the directory: $ git clone https://github.com/bonfire-networks/bonfire-app.git bonfire $ cd bonfire Specify what flavour you want to run in production: The first thing to do is choose what flavour of Bonfire you want to deploy, as each flavour uses different Docker images and set of configs. For example if you want to run the classic flavour: export MIX_ENV=prod FLAVOUR=classic (you may also want to put this in the appropriate place in your system so your choice of flavour is remembered for next time) just config This will initialise some default config (a .env file which won't be checked into git) Edit the config (especially the secrets) for the selected flavour in ./.env (except if using the Bonfire co-op cloud recipe, which will create its own env file you should edit instead). These are the config keys you should especially pay attention to: HOSTNAME (your domain name, eg: bonfire.example.com ) PUBLIC_PORT (usually 443) MAIL_DOMAIN and MAIL_KEY to configure transactional email, you can for example sign up at Mailgun and then configure the domain name and key. Other providers are supported as well. UPLOADS_S3_BUCKET and the related API key and secret for uploads. WARNING: If you want to store uploads in an object storage rather than directly on your server (which you probably want, to not run out of space), you need to configure that up front, otherwise URLs will break if you change it later. See config/runtime.exs for extra variables to set if you're not using the default service and region (which is Scaleway Paris). These are the secret keys for which you should put random secrets. You can run just secrets to generate some: SECRET_KEY_BASE SIGNING_SALT ENCRYPTION_SALT POSTGRES_PASSWORD MEILI_MASTER_KEY Further information on config The app needs some environment variables to be configured in order to work. The easy way to manage that is whit the just commands which take care of loading the environment for you. In the ./config/ (which is a symbolic link to the config of the flavour you choose to run) directory of the codebase, there are following config files: config.exs : default base configuration, which itself loads many other config files, such as one for each installed Bonfire extension. prod.exs : default extra configuration for MIX_ENV=prod runtime.exs : extra configuration which is loaded at runtime (vs the others which are only loaded once at compile time, i.e. when you build a release) bonfire_*.exs : configs specific to different extensions, which are automatically imported by config.exs You should not have to modify the files above. Instead, overload any settings from the above files using env variables or in ./.env .","ref":"deploy.html#step-1-download-and-configure-the-app","title":"Deployment guide - Step 1 - Download and configure the app","type":"extras"},{"doc":"Option A - Install using Co-op Cloud (recommended) https://coopcloud.tech is an alternative to corporate clouds built by tech co-ops, and provides very useful tools for setting up and managing many self-hosted free software tools using ready-to-use &quot;recipes&quot;. If you're interested in hosting Bonfire alongside other open and/or federated projects, we recommend installing Abra , setting up a co-op cloud server and using the Bonfire recipe (which provides it's own instructions, so read that and you can mostly ignore this document) to set up an instance. Option B - Install using Docker containers (easy mode) The easiest way to launch the docker image is using the just commands. The docker-compose.release.yml uses config/prod/.env to launch a container with the necessary environment variables along with its dependencies, currently that means an extra postgres container, along with a reverse proxy (Caddy server, which you may want to replace with nginx or whatever you prefer). Install with docker-compose Make sure you have Docker , a recent docker-compose (which supports v3 configs), and just installed: $ docker version Docker version 18.09.1-ce $ docker-compose -v docker-compose version 1.23.2 $ just --version just 1.1.3 ... Now that your tooling is set up, you have the choice of using pre-built images or building your own. For example if your flavour does not have a prebuilt image on Docker Hub, or if you want to customise any of the extensions, you can build one yourself - see option A2 below. Option B1 - Using pre-built Docker images (recommended to start with) The image entry in docker-compose.release.yml will by default use the image on Docker Hub which corresponds to your chosen flavour (see step 1 above for choosing your flavour). You can see the images available per flavour, version (we currently recommend using the latest tag), and architecture at https://hub.docker.com/r/bonfirenetworks/bonfire/tags Start the docker containers with docker-compose: just rel - run Run this at the prompt: bin/bonfire remote to enter Elixir's iex environment EctoSparkles.Migrator.migrate to initialise your database The backend should now be running at http://localhost:4000/ . If that worked, start the app as a daemon next time: just rel - run - bg Docker-related handy commands just update to update to the latest release of Bonfire just rel-run Run the app in Docker, in the foreground just rel-run-bg Run the app in Docker, and keep running in the background just rel-stop Stop the running release just rel-shell Runs a simple shell inside of the container, useful to explore the image Once in the shell, you can run bin/bonfire with the following commands: Usage: bonfire COMMAND [ARGS] The known commands are: start Starts the system start_iex Starts the system with IEx attached daemon Starts the system as a daemon daemon_iex Starts the system as a daemon with IEx attached eval &quot;EXPR&quot; Executes the given expression on a new, non-booted system rpc &quot;EXPR&quot; Executes the given expression remotely on the running system remote Connects to the running system via a IEx remote shell restart Restarts the running system via a remote command stop Stops the running system via a remote command pid Prints the operating system PID of the running system via a remote command version Prints the release name and version to be booted There are some useful database-related release tasks under EctoSparkles.Migrator. that can be run in an iex console (which you get to with just rel.shell followed by bin/bonfire remote , assuming the app is already running): migrate runs all up migrations rollback(step) roll back to step X rollback_to(version) roll back to a specific version rollback_all rolls back all migrations back to zero (caution: this means loosing all data) You can also directly call some functions in the code from the command line, for example: to migrate: docker exec bonfire_web bin/bonfire rpc 'EctoSparkles.Migrator.migrate' to just yourself an admin: docker exec bonfire_web bin/bonfire rpc 'Bonfire.Me.Users.make_admin(&quot;my_username&quot;)' Option B2 - Building your own Docker image Dockerfile.release uses the multistage build feature to just the image as small as possible. It generates the OTP release which is later copied into the final image packaged in an Alpine linux container. There is a justfile with relevant commands (make sure set the MIX_ENV=prod env variable): just rel-build-release which builds the docker image of the latest release just rel-build which builds the docker image, including local changes to any cloned extensions in ./forks/ just rel-tag adds the &quot;latest&quot; tag to your last build, so that it will be used when running Once you've built and tagged your image, you may need to update the image name in docker-compose.release.release.yml to match (either your local image name if running on the same machine you used for the build, or a remote image on Docker Hub if you pushed it) and then follow the same steps as for option A1. For production, we recommend to set up a CI workflow to automate this, for an example you can look at the one we currently use . Option C - Manual installation (without Docker) Dependencies Postgres (or Postgis) version 12 or newer just Elixir version 1.13 with OTP 24 (or newer). If your distribution only has an old version available, check Elixir's install page or use a tool like asdf (run asdf install in this directory). C-1. Building the release Make sure you have erlang and elixir installed (check Dockerfile for what version we're currently using) Run mix deps.get --only prod to install elixir dependencies. Prepare assets with just js-deps-get , just assets-prepare and mix phx.digest Run mix release to create an elixir release. This will create an executable in your _build/prod/rel/bonfire directory. We will be using the bin/bonfire executable from here on. C-2. Running the release cd _build/prod/rel/bonfire/ Create a database and run the migrations with bin/bonfire eval 'EctoSparkles.Migrator.migrate()' . If you’re using RDS or some other locked down DB, you may need to run CREATE EXTENSION IF NOT EXISTS citext WITH SCHEMA public; on your database with elevated privileges. You can check if your instance is configured correctly by running it with bin/bonfire start To run the instance as a daemon, use bin/bonfire start daemon . Option D - with Nix This repo is a Flake and includes a Nix module. Here are the detailed steps to deploy it: run a recent version of Nix or NixOS: https://nixos.wiki enable Flakes: https://nixos.wiki/wiki/Flakes#Installing_flakes add sandbox = false in your nix.conf fetch and build the app and dependencies: nix run github:bonfire-networks/bonfire-app start_iex add it as an input to your system flake. add an overlay to just the package available add the required configuration in your system Your flake.nix file would look like the following. Remember to replace myHostName with your actual hostname or however your deployed system is called. { inputs.bonfire.url = &quot;github:happysalada/bonfire-app/main&quot;; outputs = { self, nixpkgs, bonfire }: { overlay = final: prev: with final;{ # a package named bonfire already exists on nixpkgs so we put it under a different name elixirBonfire = bonfire.defaultPackage.x86_64-linux; }; nixosConfigurations.myHostName = nixpkgs.lib.nixosSystem { system = &quot;x86_64-linux&quot;; modules = [ { environment.systemPackages = [ agenix.defaultPackage.x86_64-linux ]; nixpkgs.overlays = [ self.overlay ]; } ./myHostName.nix bonfire.nixosModules.bonfire ]; }; }; } Then your myHostName.nix would look like the following: TODO: add caddy reverse proxy config { config, lib, pkgs, ... }: { services.bonfire = { # you will additionally need to expose bonfire with a reverse proxy, for example caddy port = 4000; package = pkgs.elixirBonfire; dbName = &quot;bonfire&quot;; # the environment should contain a minimum of # SECRET_KEY_BASE # SIGNING_SALT # ENCRYPTION_SALT # RELEASE_COOKIE # have a look into nix/module.nix for more details # the way to deploy secrets is beyond this readme, but I would recommend agenix environmentFile = &quot;/run/secrets/bonfireEnv&quot;; dbSocketDir = &quot;/var/run/postgresql&quot;; }; # this is uniquely for database backup purposes # replace myBackupUserName with the user name that will do the backups # if you want to do backups differently, feel free to remove this part of the config services.postgresql = { ensureDatabases = [ &quot;bonfire&quot; ]; ensureUsers = [{ name = &quot;myBackupUserName&quot;; ensurePermissions = { &quot;DATABASE bonfire&quot; = &quot;ALL PRIVILEGES&quot;; }; }]; }; } Option C with nixos this repo is a flake and includes a nixos module. Here are the detailed steps to deploy it. add it as an input to your system flake. add an overlay to just the package available add the required configuration in your system Your flake.nix file would look like the following. Remember to replace myHostName with your actual hostname or however your deployed system is called. { inputs.bonfire.url = &quot;github:happysalada/bonfire-app/main&quot;; outputs = { self, nixpkgs, bonfire }: { overlay = final: prev: with final;{ # a package named bonfire already exists on nixpkgs so we put it under a different name elixirBonfire = bonfire.defaultPackage.x86_64-linux; }; nixosConfigurations.myHostName = nixpkgs.lib.nixosSystem { system = &quot;x86_64-linux&quot;; modules = [ { environment.systemPackages = [ agenix.defaultPackage.x86_64-linux ]; nixpkgs.overlays = [ self.overlay ]; } ./myHostName.nix bonfire.nixosModules.bonfire ]; }; }; } then in myHostName.nix would look like the following TODO: add the caddy config { config, lib, pkgs, ... }: { services.bonfire = { # you will need to expose bonfire with a reverse proxy, for example caddy port = 4000; package = pkgs.elixirBonfire; dbName = &quot;bonfire&quot;; # the environment should contain a minimum of # SECRET_KEY_BASE # SIGNING_SALT # ENCRYPTION_SALT # RELEASE_COOKIE # have a look into nix/module.nix for more details # the way to deploy secrets is beyond this readme, but I would recommend agenix environmentFile = &quot;/run/secrets/bonfireEnv&quot;; dbSocketDir = &quot;/var/run/postgresql&quot;; }; # this is uniquely for database backup purposes # replace myBackupUserName with the user name that will do the backups # if you want to do backups differently, feel free to remove this part of the config services.postgresql = { ensureDatabases = [ &quot;bonfire&quot; ]; ensureUsers = [{ name = &quot;myBackupUserName&quot;; ensurePermissions = { &quot;DATABASE bonfire&quot; = &quot;ALL PRIVILEGES&quot;; }; }]; }; }","ref":"deploy.html#step-2-install","title":"Deployment guide - Step 2 - Install","type":"extras"},{"doc":"By default, the backend listens on port 4000 (TCP), so you can access it on http://localhost:4000/ (if you are on the same machine). In case of an error it will restart automatically. Once you've signed up, you will automatically be an instance admin if you were the first to register. Step 4 - Adding HTTPS The common and convenient way for adding HTTPS is by using a reverse proxy like Nginx or Caddyserver (the latter of which is bundled as part of the docker-compose setup). Caddyserver and other servers can handle generating and setting up HTTPS certificates automatically, but if you need TLS/SSL certificates for nginx, you can look get some for free with letsencrypt . The simplest way to obtain and install a certificate is to use Certbot. . Depending on your specific setup, certbot may be able to get a certificate and configure your web server automatically.","ref":"deploy.html#step-3-run","title":"Deployment guide - Step 3 - Run","type":"extras"},{"doc":"","ref":"architecture.html","title":"Bonfire Architecture","type":"extras"},{"doc":"Bonfire is an unusual piece of software, developed in an unusual way. It originally started with requests by Moodle users to be able to share and collaborate on educational resources with their peers and has been forked and evolved a lot since then. Hacking on it is actually pretty fun. The codebase has a unique feeling to work with and we've relentlessly refactored to manage the ever-growing complexity that a distributed social networking toolkit implies. That said, it is not easy to understand without context, which is what this document is here to provide.","ref":"architecture.html#hacking","title":"Bonfire Architecture - Hacking","type":"extras"},{"doc":"Feature goals: Flexibility for developers and users. Extreme configurability and extensibility. Integrated federation with the existing fediverse. Operational goals: Easy to set up and run. Light on resources for small deployments. Scalable for large deployments.","ref":"architecture.html#design-decisions","title":"Bonfire Architecture - Design Decisions","type":"extras"},{"doc":"Our main implementation language is Elixir , which is designed for building reliable systems. We have almost our own dialect . We use the Phoenix web framework with LiveView and Surface for UI components and views. Surface is a different syntax for LiveView that is designed to be more convenient and understandable to frontend developers, with extra compile time checks. Surface views and components are compiled into LiveView code (so once you hit runtime, Surface in effect doesn't exist any more). Some extensions use the Absinthe GraphQL library to expose an API.","ref":"architecture.html#stack","title":"Bonfire Architecture - Stack","type":"extras"},{"doc":"We like to think of bonfire as a comfortable way of developing software - there are a lot of conveniences built in once you know how they all work. The gotcha is that while you don't know them, it can be a bit overwhelming. Don't worry, we've got your back. Bonfire-flavoured Elixir - an introduction to the way write elixir. Bonfire's Database: an Introduction - an overview of how our database is designed. Boundaries - an introduction to our access control system. Note: these are still at the early draft stage, we expect to gradually improve documentation over time.","ref":"architecture.html#the-bonfire-environment","title":"Bonfire Architecture - The Bonfire Environment","type":"extras"},{"doc":"The code is broadly composed of these namespaces, many of which are packaged as &quot;extensions&quot; which are in separate git repos, and are included in the app by way of mix dependencies. Bonfire.* - Core application logic (very little code). Bonfire.*.* - Bonfire extensions (eg Bonfire.Social.Posts ) containing mostly context modules, APIs, and routes Bonfire.Data.* - Extensions containing database schemas and migrations Bonfire.UI.* - UI component extensions Bonfire.*.*.LiveHandler - Backend logic to handle events in the frontend Bonfire.Editor.* (pluggable text editors, eg. CKEditor for WYSIWYG markdown input) Bonfire.GraphQL.* - Optional GraphQL API Bonfire.Federate.* - Optional Federation hooks ActivityPub - ActivityPub S2S models, logic and various helper modules ActivityPubWeb - ActivityPub S2S REST endpoints, activity ingestion and push federation facilities ValueFlows.* - economic extensions implementing the ValueFlows vocabulary Contexts are were we put any core logic. A context often is circumscribed to providing logic for a particular object type (e. g. Bonfire.Social.Posts implements Bonfire.Data.Social.Post ). All Bonfire objects use an ULID as their primary key. We use the Pointers library (with extra logic in Bonfire.Common.Pointers ) to reference any object by its primary key without knowing what type it is beforehand. This is very useful as it allows for example following or liking many different types of objects (as opposed to say only a user or a post) and this approach allows us to store the context of the like/follow by only storing its primary key (see Bonfire.Data.Social.Follow ) for an example. Context modules usually have one/2 , many/2 , and many_paginated/1 functions for fetching objects, which in turn call a query/2 function. These take a keyword list as filters (and an optional opts argument) allowing objects to be fetched by arbitrary criteria. Examples: Users . one ( username : &quot;bob&quot; ) # Fetching by username Posts . many_paginated ( by : &quot;01E9TQP93S8XFSV2ZATX1FQ528&quot; ) # List a page of posts by its author EconomicResources . many ( deleted : true ) # List any deleted resources Context modules also have functions for creating, updating and deleting objects, as well as hooks for federating or indexing in the search engine. Here is an incomplete sample of some of current extensions and modules: Bonfire.Me.Accounts (for managing and querying local user accounts) Bonfire.Me.Users (for managing and querying both local and remote user identities and profiles) Bonfire.Boundaries (for managing and querying circles, ACLs, permissions...) Bonfire.Social.FeedActivities , Bonfire.Social.Feeds and Bonfire.Social.Activities (for managing and querying activities and feeds) Bonfire.Social.Posts and Bonfire.Social.PostContents (for managing and querying posts) Bonfire.Social.Threads (for managing and querying threads and comments) Bonfire.Social.Flags (for managing and querying flags) Bonfire.Social.Follows (for managing and querying follows) Bonfire.Classify (for managing and querying categories, topics, and the like) Bonfire.Tag (for managing and querying tags and mentions) Bonfire.Geolocate (for managing and querying locations and geographical coordinates) Bonfire.Quantify (for managing and querying units and measures) Additional extensions, libraries, and modules Bonfire.Common and Bonfire.Common.Utils (stuff that gets used everywhere) Bonfire.Application (OTP application) Bonfire.MixProject (Mix application configuration and helpers) Bonfire.Me.Characters (a shared abstraction over users, organisations, categories, and other objects that need to have feeds and behave as an actor in ActivityPub land) Bonfire.Federate.ActivityPub and ActivityPub (ActivityPub integration) Bonfire.Search (local search indexing and search API, powered by Meili) Bonfire.Mailer , Bonfire.Me.Mails , and Bamboo (for rendering and sending emails) Bonfire.Files , Waffle , TreeMagic and TwinkleStar (for managing uploaded content) Bonfire.GraphQL (GraphQL API abstractions) Queery and Bonfire.Repo.Query (Helpers for making queries on the database) Bonfire.Repo (Ecto repository) Flexto (to extend DB schemas in config, especially useful for adding associations) AbsintheClient (for querying the API from within the server) General structure Bonfire app A flavour running Bonfire.Application as supervisor Configs assembled from extensions at flavour/$FLAVOUR/config Phoenix at Bonfire.Web.Endpoint Routes assembled from extensions at Bonfire.Web.Router GraphQL schema assembled from extensions at Bonfire.GraphQL.Schema Database migrations assembled from extensions at flavour/$FLAVOUR/repo/migrations Data seeds assembled from extensions at flavour/$FLAVOUR/repo/seeds Extensions and libraries as listed in flavour/$FLAVOUR/config/deps.* Extensions defining schemas and migrations (usually Bonfire.Data.* ) Schemas Migrations defined as functions in the schema modules in lib/ Migration templates calling those functions in priv/repo/migrations which are then copied into an app flavour's migrations Extensions implementing features or groups of features (eg. Bonfire.Me ) Config template which is then copied into an app flavour's config (eg config/bonfire_me.exs ) Contexts (eg Bonfire.Me.Users ) Sometimes LiveHandlers for handling frontend events in the backend (eg Bonfire.Me.Users.LiveHandler ) Routes (eg Bonfire.UI.Me.Routes ) Controllers and/or Views (eg Bonfire.UI.Me.CreateUserController and Bonfire.UI.Me.CreateUserLive ) API (eg Bonfire.Me.API.GraphQL ), refer to GraphQL API documentation Schemas Resolvers Sometimes Plugs (eg Bonfire.Web.Plugs.UserRequired and Bonfire.Web.LivePlugs.UserRequired ) Other extensions or libraries (eg Pointers or Bonfire.Common which are used by most other extensions)","ref":"architecture.html#code-structure","title":"Bonfire Architecture - Code Structure","type":"extras"},{"doc":"It is said that naming is one of the four hard problems of computer science (along with cache management and off-by-one errors). We don't claim our scheme is the best, but we do strive for consistency. Naming guidelines Module names mostly begin with Bonfire. unless they belong to a more generic library (eg Pointers or ValueFlows ) Everything within an extension begins with the context name and a . (eg Bonfire.Social.Migrations ) Database schemas should be named in the singular (eg Bonfire.Data.Social.Post ) Context modules are named in plural where possible (eg Bonfire.Social.Posts ) Other modules within a context begins with the context name and a . (eg Bonfire.Social.Posts.LiveHandler ) Modules use UpperCamelCase while functions use snake_case Acronyms in module names should be all uppercase (eg Bonfire.Social.APActivities )","ref":"architecture.html#naming","title":"Bonfire Architecture - Naming","type":"extras"},{"doc":"ActivityPub This namespace handles the ActivityPub logic and stores AP activities. It is largely adapted Pleroma code with some modifications, for example merging of the activity and object tables and new actor object abstraction. ActivityPub contains the main API and is documented there. ActivityPub.Adapter defines callback functions for the AP library. It also contains some functionality that isn't part of the AP spec but is required for federation: ActivityPub.Keys - Generating and handling RSA keys for messagage signing ActivityPub.Signature - Adapter for the HTTPSignature library ActivityPub.WebFinger - Implementation of the WebFinger protocol ActivityPub.HTTP - Module for making HTTP requests (wrapper around tesla) ActivityPub.Instances - Module for storing reachability information about remote instances Also refer to MRF documentation to learn how to rewrite or discard messages. ActivityPubWeb This namespace contains the ActivityPub Server-to-Server REST API, the activity ingestion pipeline ( ActivityPubWeb.Transmogrifier ) and the push federation facilities ( ActivityPubWeb.Federator , ActivityPubWeb.Publisher and others). The outgoing federation module is designed in a modular way allowing federating through different protocols in the future. ActivityPub integration with Bonfire's application logic The callback functions defined in ActivityPub.Adapter are implemented in Bonfire.Federate.ActivityPub.Adapter . When implementing federation for a new object type it needs to be implemented for both directions: for outgoing federation using the hooks in Bonfire.Federate.ActivityPub.Publisher and for incoming federation using the hooks in Bonfire.Federate.ActivityPub.Receiver .","ref":"architecture.html#federation-libraries","title":"Bonfire Architecture - Federation libraries","type":"extras"},{"doc":"Bonfire has a few libraries that are widely used in the codebase and make writing Elixir feel a little bit different. To help you get less confused by this, here's a guide on what we can call &quot;bonfire-flavoured elixir&quot;! Please note this guide assumes you already know Elixir .","ref":"bonfire-flavoured-elixir.html","title":"Bonfire-flavoured Elixir","type":"extras"},{"doc":"The Elixir |&gt; (&quot;pipe&quot;) operator is one of the things that seems to get people excited about elixir. Probably in part because you then don't have to keep coming up with function names. Unfortunately it's kind of limiting. The moment you need to pipe a parameter into a position that isn't the first one, it breaks down and you have to drop out of the pipeline format or write a secondary function to handle it. Not any more! By simply inserting ... where you would like the value to be inserted, Arrows will override where it is placed. This allows you to keep on piping while accommodating that function with the annoying argument order. Arrows was inspired by an existing library . Here is part of the test suite in lieu of examples: defmodule ArrowsTest do use ExUnit.Case use Arrows def double ( x ) , do : x * 2 def double_fst ( x , _ ) , do : x * 2 def double_snd ( _ , x ) , do : x * 2 def add_snd_thd ( _ , x , y ) , do : x + y test &quot;|&gt;&quot; do assert 4 == ( 2 |&gt; double ) assert 4 == ( 2 |&gt; double ( ) ) assert 4 == ( 2 |&gt; double ( ... ) ) assert 8 == ( 2 |&gt; double ( double ( ... ) ) ) assert 4 == ( 2 |&gt; double_fst ( 1 ) ) assert 4 == ( 2 |&gt; double_fst ( ... , 1 ) ) assert 8 == ( 2 |&gt; double_fst ( double ( ... ) , 1 ) ) assert 4 == ( 2 |&gt; double_snd ( 1 , ... ) ) assert 8 == ( 2 |&gt; double_snd ( 1 , double ( ... ) ) ) assert 3 == ( 2 |&gt; add_snd_thd ( 1 , ... , 1 ) ) assert 4 == ( 2 |&gt; add_snd_thd ( 1 , ... , ... ) ) assert 6 == ( 2 |&gt; add_snd_thd ( 1 , ... , double ( ... ) ) ) for x &lt;- [ :yes , 2 , nil , false ] do assert { :ok , x } == ( x |&gt; { :ok , ... } ) end end end A few little extra features you might notice here: You can move the parameter into a subexpression, as in 2 |&gt; double_fst(double(...), 1) where double will be called before the parameter is passed to double_fst . You can use ... multiple times, substituting it in multiple places. The right hand side need not even be a function call, you can use any expression with ... . Ok-pipe Arrows also provides an ok-pipe operator, ~&gt; , which only pipes into the next function if the result from the last one was considered a success. It's inspired by OK , but we have chosen to do things slightly differently so it better fits with our regular pipe. input result :----------------------- :-------------- {:ok, x} fun.(x) {:error, e} {:error, e} nil nil x when not is_nil(x) fun.(x) In the case of a function returning an ok/error tuple being on the left hand side, this is straightforward to determine. In the event of {:ok, x} , x will be passed into the right hand side to call. In the event of {:error, x} , the result will be {:error, x} . We also deal with a lot of functions that indicate failure by returning nil. ~&gt; tries to 'do what I mean' for both of these so you can have one pipe operator to rule them all. If nil is a valid result, you must thus be sure to wrap it in an ok tuple when it occurs on the left hand side of ~&gt; . |&gt; and ~&gt; compose in the way you'd expect; i.e. a ~&gt; receiving an error tuple or nil will stop executing the rest of the chain of (mixed) pipes.","ref":"bonfire-flavoured-elixir.html#arrows","title":"Bonfire-flavoured Elixir - Arrows","type":"extras"},{"doc":"Where provides replacements for the macros in Elixir's Logger module and the IO.inspect function to output code location information. The first argument will be inspect ed and the second (where provided) will be used as a label: iex(1)&gt; import Where Where iex(2)&gt; debug ( :no , &quot;the answer is&quot; ) # log at debug 11 : 19 : 09.915 [ debug ] [ iex : 2 ] the answer is : :no :no iex(3)&gt; dump ( %{ a : :map } , &quot;it&quot; ) # inspect something on stdout [ iex : 3 ] it : %{ a : :map } %{ a : :map } When used in a code file, the location information becomes slightly more useful, e.g.: [ lib / test_where . ex : 15 @ Test.Where . example / 2 ] Here &#39; s an empty list : [ ] You may also notice from the iex output that it returns its first argument. This makes it ideal for inserting into a pipeline for debugging purposes: do_something ( ) |&gt; debug ( &quot;output of do_something/0&quot; ) When you are done debugging something, the location of the debug statement is already in the output so you know where to remove it or comment it out! Bliss! You will find the codebase uses this a lot, though the debugs are frequently commented out. Just uncomment the ones that would help you with a particular debugging task and you're off.","ref":"bonfire-flavoured-elixir.html#where","title":"Bonfire-flavoured Elixir - Where","type":"extras"},{"doc":"Bonfire uses the excellent PostgreSQL database for most data storage. PostgreSQL allows us to make a wide range of queries and to make them relatively fast while upholding data integrity guarantees. Postgres is a relational schema-led database - it expects you to pre-define tables and the fields in each table (represented in tabular form, i.e. as a collection of tables with each table consisting of a set of rows and columns). Fields can contain data or a reference to a row in another table. This usually means that a field containing a reference has to be pre-defined with a foreign key pointing to a specific field (typically a primary key, like an ID column) in a specific table . A simple example would be a blogging app, which might have a post table with author field that references the user table. A social network, by contrast, is actually a graph of objects. Objects need to be able to refer to other objects by their ID without knowing their type. A simple example would be likes, you might have a likes table with liked_object field that references the post table. But you don't just have posts that can be liked, but also videos, images, polls, etc, each with their own table? We needed the flexibility to have a foreign key that can reference any referenceable object. We call our system Pointers . This guide is a brief introduction to Pointers. It assumes some foundational knowledge: Basic understanding of how relational databases like Postgresql work, in particular: Tables being made up of fields. What a primary key is and why it's useful. Foreign keys and relationships between tables (1 to 1, 1 to Many, Many to 1, Many to Many). Views as virtual tables backed by a SQL query. Basic understanding of Elixir (enough to follow the examples). Basic working knowledge of the Ecto database library (schema and migration definitions)","ref":"database.html","title":"Bonfire's Database - an intro","type":"extras"},{"doc":"All referenceable objects in the system have a unique ID (primary key) whose type is the ULID . It's a lot like a UUID in that you can generate unique ones independently of the database. It's also a little different, being made up of two parts: The current timestamp, to millisecond precision. Strong random padding for uniqueness. This means that it naturally sorts by time to the millisecond (close enough for us), giving us a performance advantage on queries ordered by a seperate creation datetime field (by contrast, UUIDv4 is randomly distributed). If you've only worked with integer primary keys before, you are probably used to letting the database dispense an ID for you. With ULID (or UUID ), IDs can be known before they are stored, greatly easing the process of storing a graph of data and allowing us to do more of the preparation work outside of a transaction for increased performance. In PostgreSQL, we actually store ULID s as UUID columns, thanks to both being the same size (and the lack of a ULID column type shipping with postgresql). You mostly will not notice this because it's handled for you, but there are a few places it can come up: Ecto debug and error output may show either binary values or UUID-formatted values. Hand-written SQL may need to convert table IDs to the UUID format before use.","ref":"database.html#identifying-objects-the-ulid-type","title":"Bonfire's Database - an intro - Identifying objects - the ULID type","type":"extras"},{"doc":"The pointers system is mostly based around a single table represented by the Pointers.Pointer schema with the following fields: id (ULID) - the database-wide unique id for the object, primary key. table_id (ULID) - identifies the type of the object, references Pointers.Table . deleted_at (timestamp, default: null ) - when the object was deleted. Every object that is stored in the system will have a record in this table. It may also have records in other tables (handy for storing more than 3 fields about the object!). Don't worry about Pointers.Table for now, just know that every object type will have a record there so Pointers.Pointer.table_id can reference it.","ref":"database.html#it-s-just-a-table","title":"Bonfire's Database - an intro - It's just a table","type":"extras"},{"doc":"Mixins are tables which contain extra information on behalf of objects. Each object can choose to record or not record information for each mixin. Sample mixins include: user profile (containing a name, location and summary) post content (containing the title, summary, and/or html body of a post or message) created (containing the id of the object creator) In this way, they are reusable across different object types. One mixin may (or may not) be used by any number of objects. This is mostly driven by the type of the object we are storing, but can also be driven by user input. Mixins are just tables too! The only requirement is they have a ULID primary key which references Pointers.Pointer . The developer of the mixin is free to put whatever other fields they want in the table, so long as they have that primary-key-as-reference (which will be automatically added for you by the mixin_schema macro). Here is a sample mixin definition for a user profile: defmodule Bonfire.Data.Social.Profile do use Pointers.Mixin , otp_app : :bonfire_data_social , source : &quot;bonfire_data_social_profile&quot; mixin_schema do field :name , :string field :summary , :string field :website , :string field :location , :string end end Aside from use ing Pointers.Mixin instead of Ecto.Schema and calling mixin_schema instead of schema , pretty similar to a standard Ecto schema, right? The arguments to use Pointers.Mixin are: otp_app : the OTP app name to use when loading dynamic configuration, e.g. the current extension or app (required) source : the underlying table name to use in the database We will cover dynamic configuration later. For now, you can use the OTP app that includes the module.","ref":"database.html#mixins-storing-data-about-objects","title":"Bonfire's Database - an intro - Mixins - storing data about objects","type":"extras"},{"doc":"Multimixins are like mixins, except that where an object may have 0 or 1 of a particular mixins, an object may have any number of a particular multimixin. For this to work, a multimixin must have a compound primary key which must contain an id column referencing Pointers.Pointer and at least one other field which will collectively be unique. An example multimixin is used for publishing an item to feeds: defmodule Bonfire.Data.Social.FeedPublish do use Pointers.Mixin , otp_app : :bonfire_data_social , source : &quot;bonfire_data_social_feed_publish&quot; alias Pointers.Pointer mixin_schema do belongs_to :feed , Pointer , primary_key : true end end Notice that this looks very similar to defining a mixin. Indeed, the only difference is the primary_key: true in this line, which adds a second field to the compound primary key. This results in ecto recording a compound primary key of (id, feed_id) for the schema (the id is added for you as with regular mixins).","ref":"database.html#multimixins","title":"Bonfire's Database - an intro - Multimixins","type":"extras"},{"doc":"Picking a table id The first step to declaring a type is picking a unique table ID in ULID format. You could just generate one at the terminal, but since these IDs are special, we tend to assign a synthetic ULID that are readable as words so they stand out in debug output. For example, the ID for the Feed table is: 1TFEEDS0NTHES0V1S0FM0RTA1S , which can be read as &quot;It feeds on the souls of mortals&quot;. Feel free to have a little fun coming up with them, it makes debug output a little more cheery! The rules are: The alphabet is Crockford's Base32 . They must be 26 characters in length. The first character must be a digit in the range 0-7. To help you with this, the Pointers.ULID.synthesise!/1 method takes an alphanumeric binary and tries to return you it transliterated into a valid ULID. Example usage: iex(1)&gt; Pointers.ULID . synthesise! ( &quot;itfeedsonthesouls&quot; ) 11 : 20 : 28.299 [ error ] Too short , need 9 chars . :ok iex(2)&gt; Pointers.ULID . synthesise! ( &quot;itfeedsonthesoulsofmortalsandothers&quot; ) 11 : 20 : 31.819 [ warn ] Too long , chopping off last 9 chars &quot;1TFEEDS0NTHES0V1S0FM0RTA1S&quot; iex(3)&gt; Pointers.ULID . synthesise! ( &quot;itfeedsonthesoulsofmortals&quot; ) &quot;1TFEEDS0NTHES0V1S0FM0RTA1S&quot; iex(4)&gt; Pointers.ULID . synthesise! ( &quot;gtfeedsonthesoulsofmortals&quot; ) 11 : 21 : 03.268 [ warn ] First character must be a digit in the range 0 - 7 , replacing with 7 &quot;7TFEEDS0NTHES0V1S0FM0RTA1S&quot; Virtuals Virtuals are the simplest and most common type of object. Here's a definition of block: defmodule Bonfire.Data.Social.Block do use Pointers.Virtual , otp_app : :bonfire_data_social , table_id : &quot;310CK1NGSTVFFAV01DSSEE1NG1&quot; , source : &quot;bonfire_data_social_block&quot; alias Bonfire.Data.Edges.Edge virtual_schema do has_one :edge , Edge , foreign_key : :id end end It should look quite similar to a mixin definition, except that we use Pointers.Virtual this time (passing an additional table_id argument) and we call the virtual_schema macro. The primary limitation of a virtual is that you cannot put extra fields into one. This also means that belongs_to is not generally permitted because it results in adding a field. has_one and has_many work just fine as they do not cause the creation of fields in the schema. This is not usually a problem, as extra fields can be put into mixins or multimixins as appropriate. Under the hood, a virtual has a view (in this example, called bonfire_data_social_block ). It looks like a table with just an id, but it's populated with all the ids of blocks that are not deleted. When the view is inserted into, a record is created in the pointers table for you transparently. When you delete from the view, the corresponding pointers entry is marked deleted for you. Pointables The other, lesser used, type of object is called the Pointable. The major difference is that unlike the simple case of virtuals, pointables are not backed by views, but by tables. When a record is inserted into a pointable table, a copy is made in the pointers table for you transparently. When you delete from the table, the the corresponding pointers entry is marked deleted for you. In these ways, they behave very much like virtuals. By having a table, however, we are free to add new fields. Pointables pay for this flexibility by being slightly more expensive than virtuals: Records must be inserted into/deleted from two tables (the pointable's table and the pointers table). The pointable table needs its own primary key index. Here is a definition of a pointable type (indicating an ActivityPub activity whose type we don't recognise, stored as a JSON blob): defmodule Bonfire.Data.Social.APActivity do use Pointers.Pointable , otp_app : :bonfire_data_social , table_id : &quot;30NF1REAPACTTAB1ENVMBER0NE&quot; , source : &quot;bonfire_data_social_apactivity&quot; pointable_schema do field :json , :map end end The choice of using a pointable instead of a virtual combined with one or more mixins is ultimately up to you.","ref":"database.html#declaring-object-types","title":"Bonfire's Database - an intro - Declaring Object Types","type":"extras"},{"doc":"Migrations are typically included along with the schemas as public APIs you can call within your project's migrations. Virtuals Most virtuals are incredibly simple to migrate for: defmodule Bonfire.Data.Social.Post.Migration do import Pointers.Migration alias Bonfire.Data.Social.Post def migrate_post ( ) , do : migrate_virtual ( Post ) end If you need to do more work, it can be a little trickier. Here's an example for block , which also creates a unique index on another table: defmodule Bonfire.Data.Social.Block.Migration do import Ecto.Migration import Pointers.Migration import Bonfire.Data.Edges.Edge.Migration alias Bonfire.Data.Social.Block def migrate_block_view ( ) , do : migrate_virtual ( Block ) def migrate_block_unique_index ( ) , do : migrate_type_unique_index ( Block ) def migrate_block ( dir \\\\ direction ( ) ) def migrate_block ( :up ) do migrate_block_view ( ) migrate_block_unique_index ( ) end def migrate_block ( :down ) do migrate_block_unique_index ( ) migrate_block_view ( ) end end Notice how we have to write our up and down versions separately to get the correct ordering of operations. Handling down migrations can be a bit awkward in ecto. Pointables As of now, pointables are a little trickier to define flexibly than virtuals because we want to preserve the ability for the user to define extra fields in config. There are some questions about how useful this is in practice, so we might go for a simpler option in future. Example: defmodule Bonfire.Data.Social.APActivity.Migration do use Ecto.Migration import Pointers.Migration alias Bonfire.Data.Social.APActivity defp make_apactivity_table ( exprs ) do quote do require Pointers.Migration Pointers.Migration . create_pointable_table ( Bonfire.Data.Social.APActivity ) do Ecto.Migration . add :json , :jsonb unquote_splicing ( exprs ) end end end defmacro create_apactivity_table , do : make_apactivity_table ( [ ] ) defmacro create_apactivity_table ( [ do : body ] ) , do : make_apactivity_table ( body ) def drop_apactivity_table ( ) , do : drop_pointable_table ( APActivity ) defp maa ( :up ) , do : make_apactivity_table ( [ ] ) defp maa ( :down ) do quote do : Bonfire.Data.Social.APActivity.Migration . drop_apactivity_table ( ) end defmacro migrate_apactivity ( ) do quote do if Ecto.Migration . direction ( ) == :up , do : unquote ( maa ( :up ) ) , else : unquote ( maa ( :down ) ) end end end Mixins Mixins look much like pointables: defmodule Bonfire.Data.Social.Profile.Migration do import Pointers.Migration alias Bonfire.Data.Social.Profile # create_profile_table/{0,1} defp make_profile_table ( exprs ) do quote do require Pointers.Migration Pointers.Migration . create_mixin_table ( Bonfire.Data.Social.Profile ) do Ecto.Migration . add :name , :text Ecto.Migration . add :summary , :text Ecto.Migration . add :website , :text Ecto.Migration . add :location , :text Ecto.Migration . add :icon_id , strong_pointer ( Bonfire.Files.Media ) Ecto.Migration . add :image_id , strong_pointer ( Bonfire.Files.Media ) unquote_splicing ( exprs ) end end end defmacro create_profile_table ( ) , do : make_profile_table ( [ ] ) defmacro create_profile_table ( [ do : { _ , _ , body } ] ) , do : make_profile_table ( body ) # drop_profile_table/0 def drop_profile_table ( ) , do : drop_mixin_table ( Profile ) # migrate_profile/{0,1} defp mp ( :up ) , do : make_profile_table ( [ ] ) defp mp ( :down ) do quote do Bonfire.Data.Social.Profile.Migration . drop_profile_table ( ) end end defmacro migrate_profile ( ) do quote do if Ecto.Migration . direction ( ) == :up , do : unquote ( mp ( :up ) ) , else : unquote ( mp ( :down ) ) end end end Multimixins Similar to mixins: defmodule Bonfire.Data.Social.FeedPublish.Migration do import Ecto.Migration import Pointers.Migration alias Bonfire.Data.Social.FeedPublish @feed_publish_table FeedPublish . __schema__ ( :source ) # create_feed_publish_table/{0,1} defp make_feed_publish_table ( exprs ) do quote do require Pointers.Migration Pointers.Migration . create_mixin_table ( Bonfire.Data.Social.FeedPublish ) do Ecto.Migration . add :feed_id , Pointers.Migration . strong_pointer ( ) , primary_key : true unquote_splicing ( exprs ) end end end defmacro create_feed_publish_table ( ) , do : make_feed_publish_table ( [ ] ) defmacro create_feed_publish_table ( [ do : { _ , _ , body } ] ) , do : make_feed_publish_table ( body ) def drop_feed_publish_table ( ) , do : drop_pointable_table ( FeedPublish ) def migrate_feed_publish_feed_index ( dir \\\\ direction ( ) , opts \\\\ [ ] ) def migrate_feed_publish_feed_index ( :up , opts ) , do : create_if_not_exists ( index ( @feed_publish_table , [ :feed_id ] , opts ) ) def migrate_feed_publish_feed_index ( :down , opts ) , do : drop_if_exists ( index ( @feed_publish_table , [ :feed_id ] , opts ) ) defp mf ( :up ) do quote do Bonfire.Data.Social.FeedPublish.Migration . create_feed_publish_table ( ) Bonfire.Data.Social.FeedPublish.Migration . migrate_feed_publish_feed_index ( ) end end defp mf ( :down ) do quote do Bonfire.Data.Social.FeedPublish.Migration . migrate_feed_publish_feed_index ( ) Bonfire.Data.Social.FeedPublish.Migration . drop_feed_publish_table ( ) end end defmacro migrate_feed_publish ( ) do quote do if Ecto.Migration . direction ( ) == :up , do : unquote ( mf ( :up ) ) , else : unquote ( mf ( :down ) ) end end defmacro migrate_feed_publish ( dir ) , do : mf ( dir ) end","ref":"database.html#writing-migrations","title":"Bonfire's Database - an intro - Writing Migrations","type":"extras"},{"doc":"Take a look at a few of the migrations in our data libraries. Between them, they cover most scenarios by now: bonfire_data_social bonfire_data_access_control bonfire_data_identity bonfire_data_edges (feat. bonus triggers) If you want to know exactly what's happening, I can only suggest reading the code for Pointers.Migration , it's surprisingly readable.","ref":"database.html#more-examples","title":"Bonfire's Database - an intro - More examples","type":"extras"},{"doc":"Boundaries is Bonfire's flexible framework for full per-user/per-object/per-action access control. It makes it easy to ensure that users may only see or do what they are supposed to.","ref":"boundaries.html","title":"Boundaries & Access Control","type":"extras"},{"doc":"Ignoring any future bot support, boundaries ultimately apply to users. Circles are a way of categorising users. Each user has their own set of circles that they can add to and categorise other users in as they please. Circles allow a user to categorise work colleagues differently from friends, for example. They can choose to allow different interactions from users in the two circles or limit which content each sees on a per-item basis.","ref":"boundaries.html#users-and-circles","title":"Boundaries & Access Control - Users and Circles","type":"extras"},{"doc":"Verbs represent actions that the user could perform, such as reading a post or replying to a message. Each verb has a unique ID, like the table IDs from pointers , which must be known to the system through configuration.","ref":"boundaries.html#verbs","title":"Boundaries & Access Control - Verbs","type":"extras"},{"doc":"Permissions can take one of three values: true false nil (or null to postgresql). true and false are easy enough to understand as yes and no, but what is nil ? nil represents no answer - in isolation, it is the same as false . Because a user could be in more than one circle and each circle may have a different permission, we need a way of combining permissions to produce a final result permission. nil is treated differently here: left right result nil nil nil nil true true nil false false true nil true true true true true false false false nil false false true false false false false To be considered granted, the result of combining the permissions must be true ( nil is as good as false again here). nil can thus be seen as a sort of weak false , being easily overridden by a true, but also not by itself granting anything. At first glance, this may seem a little odd, but it gives us a little additional flexibility which is useful for implementing features such as blocks (where false is really useful!). With a little practice, it feels quite natural to use.","ref":"boundaries.html#permissions","title":"Boundaries & Access Control - Permissions","type":"extras"},{"doc":"An ACL is &quot;just&quot; a collection of Grants. Grants combine the ID of the ACL they exist in with a verb id, a user or circle id and a permission, thus providing a decision about whether a particular action is permitted for a particular user (or all users in a particular circle). Conceptually, an ACL contains a grant for every user-or-circle/verb combination, but most of the permissions are nil . We do not record grants with nil permissions in the database, saving substantially on storage space and compute requirements.","ref":"boundaries.html#acls-and-grants","title":"Boundaries & Access Control - ACLs and Grants","type":"extras"},{"doc":"An object is linked to one or more ACL s by the Controlled multimixin, which pairs an object ID with an ACL ID. Because it is a multimixin, a given object can have multiple ACLs applied. In the case of overlap, permissions are combined in the manner described earlier.","ref":"boundaries.html#controlled-applying-boundaries-to-an-object","title":"Boundaries & Access Control - Controlled - Applying boundaries to an object","type":"extras"},{"doc":"","ref":"graphql.html","title":"GraphQL API","type":"extras"},{"doc":"Go to http://your-app-url/api/ to start playing with the GraphQL API. The GraphiQL UI should autocomplete types, queries and mutations for you, and you can also explore the schema there. Let's start with a simple GraphQL thoeretical query: query { greetings ( limit : 10 ) { greeting to { name } } } Let's break this apart: query {} is how you retrieve information from GraphQL. greetings is a field within the query. greetings takes a limit argument, a positive integer. greetings has two fields, greeting and to . to has one field , name . This query is asking for a list of (up to) 10 greetings and the people they are for. Notice that the result of both greetings and to are map/object structures with their own fields and that if the type has multiple fields, we can select more than one field. Here is some possible data we could get returned %{ greetings : [ %{ greeting : &quot;hello&quot; , to : %{ name : &quot;dear reader&quot; } } , # english %{ greeting : &quot;hallo&quot; , to : %{ name : &quot;beste lezer&quot; } } , # dutch ] } Where is the magic? Typically an object type will reside in its own table in the database, so this query is actually querying two tables in one go. In fact, given a supporting schema, you can nest queries arbitrarily and the backend will figure out how to run them. The fact that you can represent arbitrarily complex queries puts quite a lot of pressure on the backend to make it all efficient. This is still a work in progress at this time.","ref":"graphql.html#graphql-introduction","title":"GraphQL API - GraphQL Introduction","type":"extras"},{"doc":"Every field is filled by a resolver. Let's take our existing query and define a schema for it in Absinthe's query DSL: defmodule MyApp.Schema do # the schema macro language use Absinthe.Schema.Notation # where we will actually resolve the fields alias MyApp.Resolver # Our user object is pretty simple, just a name object :user do field :name , non_null ( :string ) end # This one is slightly more complicated, we have that nested `to` object :greeting do # the easy one field :greeting , non_null ( :string ) # the hard one. `edge` is the term for when we cross an object boundary. field :to , non_null ( :user ) , do : resolve ( &amp; Resolver . to_edge / 3 ) end # something to put our top level queries in, because they&#39;re just fields too! object :queries do field :greetings , non_null ( list_of ( non_null ( :string ) ) ) do arg :limit , :integer # optional resolve &amp; Resolver . greetings / 2 # we need to manually process this one end end end There are a couple of interesting things about this: Sprinklings of not_null to require that values be present (if you don't return them, absinthe will get upset). Only two fields have explicit resolvers. Anything else will default to a map key lookup (which is more often than not what you want). greeting.to_edge has a /3 resolver and queries.greetings a /2 resolver. To understand the last one (and partially the middle one), we must understand how resolution works and what a parent is. The best way of doing that is probably to look at the resolver code: defmodule MyApp.Resolver do # For purposes of this, we will just fake the data out defp greetings_data ( ) do [ %{ greeting : &quot;hello&quot; , to : %{ name : &quot;dear reader&quot; } } , # english %{ greeting : &quot;hallo&quot; , to : %{ name : &quot;beste lezer&quot; } } , # dutch ] end # the /2 resolver takes only arguments (which in this case is just limit) # and an info (which we&#39;ll explain later) def greetings ( %{ limit : limit } , _info ) when is_integer ( limit ) and limit &gt; 0 do { :ok , Enum . take ( greetings_data ( ) , limit ) } # absinthe expects an ok/error tuple end def greetings ( _args , _info ) , do : { :ok , greetings_data ( ) } # no limit # the /3 resolver takes an additional parent argument in first position. # `parent` here will be the `greeting` we are resolving `to` for. def to_edge ( parent , args , info ) , do : Map . get ( parent , :to ) end The keen-eyed amongst you may have noticed I said the default resolver is a map lookup and our to_edge/3 is a map lookup too, so technically we didn't need to write it. But then you wouldn't have an example of a /3 resolver! In most of the app, these will be querying from the database, not looking up in a constant. So for every field, a resolver function is run. It defaults to a map lookup, but you can override it with resolve/1 . It may or may not have arguments. And all absinthe resolvers return an ok/error tuple.","ref":"graphql.html#absinthe-introduction","title":"GraphQL API - Absinthe Introduction","type":"extras"},{"doc":"","ref":"graphql.html#patterns","title":"GraphQL API - Patterns","type":"extras"},{"doc":"WARNING: Due to how this app currently handles its configuration, MRF is only usable if you're building your own docker image. The Message Rewrite Facility (MRF) is a subsystem that is implemented as a series of hooks that allows the administrator to rewrite or discard messages. Possible uses include: marking incoming messages with media from a given account or instance as sensitive rejecting messages from a specific instance rejecting reports (flags) from a specific instance removing/unlisting messages from the public timelines removing media from messages sending only public messages to a specific instance The MRF provides user-configurable policies. The default policy is NoOpPolicy , which disables the MRF functionality. Bonfire also includes an easy to use policy called SimplePolicy which maps messages matching certain pre-defined criterion to actions built into the policy module. It is possible to use multiple, active MRF policies at the same time.","ref":"mrf.html","title":"Message Rewrite Facility","type":"extras"},{"doc":"SimplePolicy is capable of handling most common admin tasks. To use SimplePolicy , you must enable it. Do so by adding the following to your :instance config object, so that it looks like this: config :bonfire , :instance , [ ... ] rewrite_policy : ActivityPub.MRF.SimplePolicy Once SimplePolicy is enabled, you can configure various groups in the :mrf_simple config object. These groups are: media_removal : Servers in this group will have media stripped from incoming messages. media_nsfw : Servers in this group will have the #nsfw tag and sensitive setting injected into incoming messages which contain media. reject : Servers in this group will have their messages rejected. report_removal : Servers in this group will have their reports (flags) rejected. Servers should be configured as lists. Example This example will enable SimplePolicy , block media from illegalporn.biz , mark media as NSFW from porn.biz and porn.business , reject messages from spam.com and block reports (flags) from troll.mob : config :activity_pub , :instance , rewrite_policy : [ ActivityPub.MRF.SimplePolicy ] config :activity_pub , :mrf_simple , media_removal : [ &quot;illegalporn.biz&quot; ] , media_nsfw : [ &quot;porn.biz&quot; , &quot;porn.business&quot; ] , reject : [ &quot;spam.com&quot; ] , report_removal : [ &quot;troll.mob&quot; ] Use with Care The effects of MRF policies can be very drastic. It is important to use this functionality carefully. Always try to talk to an admin before writing an MRF policy concerning their instance.","ref":"mrf.html#using-simplepolicy","title":"Message Rewrite Facility - Using SimplePolicy","type":"extras"},{"doc":"As discussed above, the MRF system is a modular system that supports pluggable policies. This means that an admin may write a custom MRF policy in Elixir or any other language that runs on the Erlang VM, by specifying the module name in the rewrite_policy config setting. For example, here is a sample policy module which rewrites all messages to &quot;new message content&quot;: # This is a sample MRF policy which rewrites all Notes to have &quot;new message # content.&quot; defmodule Site.RewritePolicy do @behavior ActivityPub.MRF # Catch messages which contain Note objects with actual data to filter. # Capture the object as `object`, the message content as `content` and the # entire activity itself as `activity`. @impl true def filter ( %{ &quot;type&quot; =&gt; &quot;Create&quot; , &quot;object&quot; =&gt; %{ &quot;type&quot; =&gt; &quot;Note&quot; , &quot;content&quot; =&gt; content } = object } = message ) when is_binary ( content ) do # Subject / CW is stored as summary instead of `name` like other AS2 objects # because of Mastodon doing it that way. summary = object [ &quot;summary&quot; ] # edits go here. content = &quot;new message content&quot; # Assemble the mutated object. object = object |&gt; Map . put ( &quot;content&quot; , content ) |&gt; Map . put ( &quot;summary&quot; , summary ) # Assemble the mutated activity. { :ok , Map . put ( activity , &quot;object&quot; , object ) } end # Let all other messages through without modifying them. @impl true def filter ( message ) , do : { :ok , message } end If you save this file as lib/site/mrf/rewrite_policy.ex , it will be included when you next rebuild Bonfire. You can enable it in the configuration like so: config :activity_pub , :instance , rewrite_policy : [ ActivityPub.MRF.SimplePolicy , Site.RewritePolicy ]","ref":"mrf.html#writing-your-own-mrf-policy","title":"Message Rewrite Facility - Writing your own MRF Policy","type":"extras"},{"doc":"","ref":"changelog.html","title":"Bonfire Changelog","type":"extras"},{"doc":"Changed 3 options for smart input (sidebar, modal, floating) and improve responsive (modal on small screens) #443 Improve feeds async loading #437 by mayel Improve media/link attachments #440 Fixed Show and count only local users in user directory #438 by mayel","ref":"changelog.html#0-3-4-beta-5-2022-08-19","title":"Bonfire Changelog - [0.3.4-beta.5 (2022-08-19)]","type":"extras"},{"doc":"Added Define &amp; implement granular role &amp; permission system for instance administration and moderation #406","ref":"changelog.html#0-3-4-2022-08-09","title":"Bonfire Changelog - [0.3.4 (2022-08-09)]","type":"extras"},{"doc":"Added Define &amp; implement granular role &amp; permission system for instance administration and moderation #406","ref":"changelog.html#0-3-3-2022-08-02","title":"Bonfire Changelog - [0.3.3 (2022-08-02)]","type":"extras"},{"doc":"Added Pagination topics list &amp; feeds within topics #431 Check boundaries of a topic when tagging and if allowed auto-boost the tagged object in the topic's outbox #428 Show followed topics on a list #424 Topic settings #423 Topic activity preview #422 Browse topics #421 Tag something (eg. post/user) with a topic at any time (depending on boundaries) #416 Tag a post with a topic when writing a new post (or reply) #415 CRUD topics #410 Create a users directory #159 Changed Optimise LiveView rendering #426 Allow us to scroll from anywhere #391 Other Add unique key to encircle #248 Database Question #3 Being able to change activity type from the composer #429 use created and extra_info mixins on Category #433 check boundaries for edit and archive topic #434","ref":"changelog.html#0-3-2-2022-07-30","title":"Bonfire Changelog - [0.3.2 (2022-07-30)]","type":"extras"},{"doc":"Fixed BUG:Responsive, navigation goes under the mobile bottom tab #420 by ivanminutillo","ref":"changelog.html#0-3-1-beta-9-2022-07-22","title":"Bonfire Changelog - 0.3.1-beta.9 (2022-07-22)","type":"extras"},{"doc":"Added Circles &amp; flexible boundaries #223 by mayel &amp; ivanminutillo Compose box at the bottom of the screen as an alternative to the standard microblogging input box #419 &quot;Compact layout&quot; in user preferences #418 Fetch metadata of links included in a post and show previews (of images, videos, etc) in feeds #314 Changed Pasting images into the editor should upload them #411 Bug: When starting from the feed page, clicking back would exit the site #400 /write page was missing the boundary selector #398 Keep me logged in #395 Font size is too small in compose window #388 UI: moved topbar in the header to sidebar #362 Improved responsive UI for use on small screens Fixed Bug: some notifications / live feed updates were making all other activities in the feed disappear #383 by mayel Bug: followed/followers pages remained empty despite having followed people #373 by mayel Bug: followed activity missing the person (in main feeds) #372 by mayel Bug: follow notification clears the home feed except for the &quot;new follow&quot; post #366 by mayel Bug: images attached to a post should appear in the feed #364","ref":"changelog.html#0-3-1-beta-2022-07-19","title":"Bonfire Changelog - 0.3.1-beta (2022-07-19)","type":"extras"},{"doc":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog This project adheres to Semantic Versioning","ref":"changelog-autogenerated.html","title":"Changelog","type":"extras"},{"doc":"Changed 3 options for smart input (sidebar, modal, floating) and improve responsive (modal on small screens) #443 Improve feeds async loading #437 by mayel Fixed Show and count only local users in user directory #438 by mayel Other Investigate library to detect mime types of uploads #349 Improve media/link attachments #440","ref":"changelog-autogenerated.html#unreleased-2022-08-19","title":"Changelog - [Unreleased (2022-08-19)]","type":"extras"},{"doc":"This app is part of the Bonfire ecosystem and bundles the following extensions: Bonfire.Common - common utils Bonfire.Me - accounts, user profiles... Bonfire.Social - feeds, activities, posts, boosting, flagging, etc... Bonfire.UI.Social - interface for basic social activities Bonfire.Boundaries - define circles and associated privacy or permissions Bonfire.Federate.ActivityPub - federates activities with ActivityPub to participate in the fediverse Bonfire.Tag - @ mentions, hashtags, and tagging using topics/categories from Bonfire.Classify Bonfire.Classify - categories &amp; classifications in taxonomies Bonfire.Geolocate - places","ref":"classic.html","title":"Bonfire Classic","type":"extras"},{"doc":"See the main docs .","ref":"classic.html#more-information","title":"Bonfire Classic - More information","type":"extras"},{"doc":"This app is a flavour of Bonfire and bundles the following extensions: Bonfire.Common - common utils Bonfire.Me - accounts, user profiles... Bonfire.Social - feeds, activities, posts, boosting, flagging, etc... Bonfire.UI.Social - interface for basic social activities Bonfire.Boundaries - define circles and associated privacy or permissions Bonfire.Federate.ActivityPub - federates activities with ActivityPub to participate in the fediverse Bonfire.Tag - @ mentions, hashtags, and tagging using topics/categories from Bonfire.Classify Bonfire.Classify - categories &amp; classifications in taxonomies Bonfire.Geolocate - places Bonfire.Quantify - units &amp; measures Bonfire.ValueFlows - economic activities with ValueFlows Bonfire.ValueFlows.Observe - observation of economic resources Bonfire.API.GraphQL - a GraphQL client API Bonfire.UI.ValueFlows - reusable frontend components for economic activities Bonfire.UI.Coordination - basic coordination UI for projects and communities Bonfire.Kanban - coordination tools with drag-and-drop card UI Bonfire.Breadpub - needs &amp; offers for mutual aid","ref":"cooperation.html","title":"Bonfire Cooperation","type":"extras"},{"doc":"See the main docs .","ref":"cooperation.html#more-information","title":"Bonfire Cooperation - More information","type":"extras"},{"doc":"This app is part of the Bonfire ecosystem and bundles the following extensions: Bonfire.Common - common utils Bonfire.Me - accounts, user profiles... Bonfire.Social - feeds, activities, posts, boosting, flagging, etc... Bonfire.UI.Social - interface for basic social activities Bonfire.Boundaries - define circles and associated privacy or permissions Bonfire.Federate.ActivityPub - federates activities with ActivityPub to participate in the fediverse Bonfire.Tag - @ mentions, hashtags, and tagging using topics/categories from Bonfire.Classify Bonfire.Classify - categories &amp; classifications in taxonomies Bonfire.Geolocate - places","ref":"haha.html","title":"Haha Academy","type":"extras"},{"doc":"See the main docs .","ref":"haha.html#more-information","title":"Haha Academy - More information","type":"extras"},{"doc":"This app is part of the Bonfire and ValueFlows ecosystems and bundles the following extensions: Bonfire.Common - common utils Bonfire.Me - accounts, user profiles... Bonfire.Social - feeds, activities, posts, boosting, flagging, etc... Bonfire.UI.Social - interface for basic social activities Bonfire.Boundaries - define circles and associated privacy or permissions Bonfire.Federate.ActivityPub - federates activities with ActivityPub to participate in the fediverse Bonfire.Tag - @ mentions, hashtags, and tagging using topics/categories from Bonfire.Classify Bonfire.Classify - categories &amp; classifications in taxonomies Bonfire.Geolocate - places Bonfire.Quantify - units &amp; measures Bonfire.ValueFlows - economic activities with ValueFlows Bonfire.ValueFlows.Observe - observation of economic resources Bonfire.API.GraphQL - a GraphQL client API Bonfire.UI.ValueFlows - reusable frontend components for economic activities Bonfire.UI.Reflow - frontend for the Reflow project","ref":"reflow.html","title":"Reflow","type":"extras"},{"doc":"See the main docs .","ref":"reflow.html#more-information","title":"Reflow - More information","type":"extras"},{"doc":"This app is a flavour of Bonfire and bundles the following extensions: Bonfire:Common - common utils Bonfire:Me - accounts, user profiles... Bonfire:Social - feeds, activities, posts, boosting, flagging, etc... Bonfire:UI:Social - interface for basic social activities Bonfire:Boundaries - define circles and associated privacy or permissions Bonfire:Federate:ActivityPub - federates activities with ActivityPub to participate in the fediverse Bonfire:Tag - @ mentions, hashtags, and tagging using topics/categories from Bonfire:Classify Bonfire:Classify - categories &amp; classifications in taxonomies Bonfire:Geolocate - places Bonfire:Quantify - units &amp; measures Bonfire:ValueFlows - economic activities with ValueFlows Bonfire:ValueFlows:Observe - observation of economic resources Bonfire:API:GraphQL - a GraphQL client API Bonfire:UI:ValueFlows - reusable frontend components for economic activities Bonfire:UI:Coordination - basic coordination UI for projects and communities Bonfire:Kanban - coordination tools with drag-and-drop card UI Bonfire:Breadpub - needs &amp; offers for mutual aid Bonfire:Files - file management for bonfire apps Bonfire:Data:SharedUser - database models for shared users in the bonfire ecosystem Bonfire:Upcycle - Upcycle UI","ref":"upcycle.html","title":"Upcycle","type":"extras"},{"doc":"See the main docs .","ref":"upcycle.html#more-information","title":"Upcycle - More information","type":"extras"},{"doc":"Bonfire has a slightly unusual way of dealing with access control. It's not so different from role-based access control (RBAC), but we do a few things differently and there are quite a lot of pieces to get your head around. We'll start gently. Bonfire has a Verb table containing strings like &quot;comment&quot; and &quot;delete&quot; that represent actions a user might wish to perform. They are a basic part of the bonfire vocabulary within the codebase. A Permission is a decision about whether the action may be performed it not. There are 3 decisions we support: true (permitted) false (explicitly not permitted, never permit) null / nil (not explicitly permitted) It may seem odd to have the null here. We will come back to this after we've introduced a few more pieces of the puzzle. A Boundary is simply an unordered list or group of Permission s. Each Permission may only occur once. Any Permission s that are not specified are assumed to be null . This loosely corresponds to a role in RBAC. A Grant links a subject (user or circle) to a Boundary . It determines what permissions are considered for a given subject. A Acl is simply an unordered list or group of Grant s. Subjects may appear more than once in a list (with different boundaries) and the permissions will be merged according to the following truth table: input input output false false false false true false false null false true false false true true true true null true null false false null true true null null null Or in words: take the highest value where false &gt; true &gt; null . At the end of this combination process, the user is only permitted if the result is true. You can see this as requiring an affirmative answer to permit something, while always allowing you a bigger no to deny when things are combined. Null values are additionally not required to be present in the database, saving us resources. That is to say we default to null if there is no relevant record. Finally, the Controlled mixin is used to determine which Acl is considered when determining permissions.","ref":"extension-bonfire_data_access_control.html","title":"Bonfire.Data.AccessControl","type":"extras"},{"doc":"Copyright (c) 2020 James Laver, bonfire_data_access_control Contributors This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/ .","ref":"extension-bonfire_data_access_control.html#copyright-and-license","title":"Bonfire.Data.AccessControl - Copyright and License","type":"extras"},{"doc":"Actor schema.","ref":"extension-bonfire_data_activity_pub.html","title":"Bonfire.Data.ActivityPub","type":"extras"},{"doc":"Copyright ( c ) 2020 James Laver , bonfire_data_activity_pub Contributors This Source Code Form is subject to the terms of the Mozilla Public License , v . 2.0 . If a copy of the MPL was not distributed with this file , You can obtain one at http :// mozilla . org / MPL / 2.0 / .","ref":"extension-bonfire_data_activity_pub.html#copyright-and-license","title":"Bonfire.Data.ActivityPub - Copyright and License","type":"extras"},{"doc":"Schemas for accounts, users, etc.","ref":"extension-bonfire_data_identity.html","title":"Bonfire.Data.Identity","type":"extras"},{"doc":"Copyright ( c ) 2020 James Laver , bonfire_data_identity Contributors This Source Code Form is subject to the terms of the Mozilla Public License , v . 2.0 . If a copy of the MPL was not distributed with this file , You can obtain one at http :// mozilla . org / MPL / 2.0 / .","ref":"extension-bonfire_data_identity.html#copyright-and-license","title":"Bonfire.Data.Identity - Copyright and License","type":"extras"},{"doc":"","ref":"extension-bonfire_data_shared_user.html","title":"Bonfire.Data.SharedUser","type":"extras"},{"doc":"Copyright ( c ) 2020 Bonfire Contributors This Source Code Form is subject to the terms of the Mozilla Public License , v . 2.0 . If a copy of the MPL was not distributed with this file , You can obtain one at http :// mozilla . org / MPL / 2.0 / .","ref":"extension-bonfire_data_shared_user.html#copyright-and-license","title":"Bonfire.Data.SharedUser - Copyright and License","type":"extras"},{"doc":"Schemas for social activities, posts, feeds, etc","ref":"extension-bonfire_data_social.html","title":"Bonfire.Data.Social","type":"extras"},{"doc":"Copyright ( c ) 2020 James Laver , bonfire_data_social Contributors This Source Code Form is subject to the terms of the Mozilla Public License , v . 2.0 . If a copy of the MPL was not distributed with this file , You can obtain one at http :// mozilla . org / MPL / 2.0 / .","ref":"extension-bonfire_data_social.html#copyright-and-license","title":"Bonfire.Data.Social - Copyright and License","type":"extras"},{"doc":"Bonfire.UI.Common is an extension for Bonfire that contains: Many common functions for web UIs in Bonfire extensions Common and generic re-usable components Etc","ref":"extension-bonfire_ui_common.html","title":"Bonfire.UI.Common","type":"extras"},{"doc":"","ref":"extension-bonfire_ui_common.html#handy-commands","title":"Bonfire.UI.Common - Handy commands","type":"extras"},{"doc":"Copyright (c) 2022 Bonfire Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"extension-bonfire_ui_common.html#copyright-and-license","title":"Bonfire.UI.Common - Copyright and License","type":"extras"},{"doc":"Bonfire.UI.Social is an extension that includes the main User Interfaces (routes, pages and components) required to have a fully working federated social network app. This extension is meant to be used by other extensions like Bonfire.Social , which provides logic for the UI to work with/ You can customise it by forking, but we recommend creating an extension which uses this one as a dependency, and defines your custom components, views, and/or routes (you can then comment Bonfire.UI.Social.Routes from your top-level Router to use your custom routes and views instead). Stack So far, Bonfire UI extensions are built with the PETALS stack (note that is not a requirement), which means: Phoenix Elixir TailwindCSS Alpine.js LiveView Surface Surface is a server-side rendering component library (built on top of Phoenix and LiveView) that inherits a lot of design patterns from popular JS framework like Vue.js and React, while being almost JavaScript-free compared to common SPAs. Scaffolding The relevant folders are: Components : Surface stateless and stateful components. Views : The main pages that are rendered when navigating to a specific route Test : All the unit tests for the specific module. Other resources A blog post that introduces the concept of themeable bonfire apps","ref":"extension-bonfire_ui_social.html","title":"Bonfire.UI.Social","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire, and CommonsPub Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"extension-bonfire_ui_social.html#copyright-and-license","title":"Bonfire.UI.Social - Copyright and License","type":"extras"},{"doc":"Bonfire.UI.Me is an extension that includes the main User Interfaces (routes, pages and components) for functionality around accounts, users, profiles, authentication, etc. This extension is meant to be used by other extensions like Bonfire.Me , which provide logic for the UI to work with. You can customise it by forking, but we recommend creating an extension which uses this one as a dependency, and defines your custom components, views, and/or routes (you can then comment Bonfire.UI.Me.Routes from your top-level Router to use your custom routes and views instead). Stack So far, Bonfire UI extensions are built with the PETALS stack (note that is not a requirement), which means: Phoenix Elixir TailwindCSS Alpine.js LiveView Surface Surface is a server-side rendering component library (built on top of Phoenix and LiveView) that inherits a lot of design patterns from popular JS framework like Vue.js and React, while being almost JavaScript-free compared to common SPAs. Scaffolding The relevant folders are: Components : Surface stateless and stateful components. Views : The main pages that are rendered when navigating to a specific route Test : All the unit tests for the specific module. Other resources A blog post that introduces the concept of themeable bonfire apps","ref":"extension-bonfire_ui_me.html","title":"Bonfire.UI.Me","type":"extras"},{"doc":"Copyright (c) 2022 Bonfire Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"extension-bonfire_ui_me.html#copyright-and-license","title":"Bonfire.UI.Me - Copyright and License","type":"extras"},{"doc":"An library for Bonfire that contains: GraphQL API utilities","ref":"extension-bonfire_api_graphql.html","title":"Bonfire.API.GraphQL","type":"extras"},{"doc":"","ref":"extension-bonfire_api_graphql.html#handy-commands","title":"Bonfire.API.GraphQL - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"extension-bonfire_api_graphql.html#copyright-and-license","title":"Bonfire.API.GraphQL - Copyright and License","type":"extras"},{"doc":"An extension for Bonfire that handles: Circles Verbs Accesses ACLs Grants Queries with healthy boundaries","ref":"extension-bonfire_boundaries.html","title":"Bonfire.Boundaries","type":"extras"},{"doc":"","ref":"extension-bonfire_boundaries.html#handy-commands","title":"Bonfire.Boundaries - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire Contributors This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/ .","ref":"extension-bonfire_boundaries.html#copyright-and-license","title":"Bonfire.Boundaries - Copyright and License","type":"extras"},{"doc":"Bonfire.Common is an extension for Bonfire that contains: Many common functions in Bonfire.Common.Utils Path and URL generators in Bonfire.Common.URIs Date and time helpers in Bonfire.Common.DateTimes Etc","ref":"extension-bonfire_common.html","title":"Bonfire.Common","type":"extras"},{"doc":"","ref":"extension-bonfire_common.html#handy-commands","title":"Bonfire.Common - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"extension-bonfire_common.html#copyright-and-license","title":"Bonfire.Common - Copyright and License","type":"extras"},{"doc":"Bonfire.Ecto contains Ecto transactional support as acts for Bonfire.Epics","ref":"extension-bonfire_ecto.html","title":"Bonfire.Ecto","type":"extras"},{"doc":"Bonfire.Epics is a way of structuring tasks that is extension and customisability friendly.","ref":"extension-bonfire_epics.html","title":"Bonfire.Epics","type":"extras"},{"doc":"Copyright (c) 2022 Bonfire Contributors Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","ref":"extension-bonfire_epics.html#copyright-and-license","title":"Bonfire.Epics - Copyright and License","type":"extras"},{"doc":"File management for bonfire apps. Bonfire Files wraps waffle a file management library, adding support for media type checking using magic bytes inside of files, along with creating a pointable table for storage of file data.","ref":"extension-bonfire_files.html","title":"Bonfire.Files","type":"extras"},{"doc":"","ref":"extension-bonfire_files.html#configuration","title":"Bonfire.Files - Configuration","type":"extras"},{"doc":"Generate docs More tests","ref":"extension-bonfire_files.html#todo-s","title":"Bonfire.Files - TODO's","type":"extras"},{"doc":"An library for Bonfire that contains: Sending email (using Bamboo ) Checking hypothetical email or domain validity","ref":"extension-bonfire_mailer.html","title":"Bonfire.Mailer","type":"extras"},{"doc":"","ref":"extension-bonfire_mailer.html#handy-commands","title":"Bonfire.Mailer - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"extension-bonfire_mailer.html#copyright-and-license","title":"Bonfire.Mailer - Copyright and License","type":"extras"},{"doc":"Implements API schemas for ValueFlows for federated networks to conduct economic activities.","ref":"extension-bonfire_valueflows_api_schema.html","title":"Bonfire.ValueFlows.API.Schema","type":"extras"},{"doc":"","ref":"extension-bonfire_valueflows_api_schema.html#handy-commands","title":"Bonfire.ValueFlows.API.Schema - Handy commands","type":"extras"},{"doc":"Copyright (c) 2021 ValueFlows, CommonsPub, Reflow &amp; Bonfire Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"extension-bonfire_valueflows_api_schema.html#copyright-and-license","title":"Bonfire.ValueFlows.API.Schema - Copyright and License","type":"extras"},{"doc":"An extension for Bonfire that handles: Defining categories/topics Defining relationships (parent or related) between categories to create taxonomies Use Bonfire.Tag if you want to tag/classify posts or other objects with these categories/topics.","ref":"extension-bonfire_classify.html","title":"Bonfire.Classify","type":"extras"},{"doc":"","ref":"extension-bonfire_classify.html#handy-commands","title":"Bonfire.Classify - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire, Haha Academy, and CommonsPub Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"extension-bonfire_classify.html#copyright-and-license","title":"Bonfire.Classify - Copyright and License","type":"extras"},{"doc":"An extension for Bonfire that handles: Extensible/configurable tools for translating Bonfire data to/from ActivityStreams Bonfire Adapter for the ActivityPub federation library","ref":"extension-bonfire_federate_activitypub.html","title":"Bonfire.Federate.ActivityPub","type":"extras"},{"doc":"There are unit tests both in this repo, and in the activity_pub lib, but they can't cover every possible federation case, so manual testing with e.g. curl -H &quot;Accept: application/activity+json&quot; -v &quot;http://localhost:4001/pub/actors/my_username&quot; | jq '.' and by trying out federation flows between instances of Bonfire and other ActivityPub implementation is a must.","ref":"extension-bonfire_federate_activitypub.html#testing","title":"Bonfire.Federate.ActivityPub - Testing","type":"extras"},{"doc":"","ref":"extension-bonfire_federate_activitypub.html#handy-commands","title":"Bonfire.Federate.ActivityPub - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"extension-bonfire_federate_activitypub.html#copyright-and-license","title":"Bonfire.Federate.ActivityPub - Copyright and License","type":"extras"},{"doc":"An extension for Bonfire that handles: Geolocation schema Optional GraphQL API for geolocations Geocoding of addresses Reverse geocoding","ref":"extension-bonfire_geolocate.html","title":"Bonfire.Geolocate","type":"extras"},{"doc":"If you want to use the map LiveView component, you will need to npm add leaflet --save --prefix assets/ in your app, and import","ref":"extension-bonfire_geolocate.html#usage","title":"Bonfire.Geolocate - Usage","type":"extras"},{"doc":"","ref":"extension-bonfire_geolocate.html#handy-commands","title":"Bonfire.Geolocate - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"extension-bonfire_geolocate.html#copyright-and-license","title":"Bonfire.Geolocate - Copyright and License","type":"extras"},{"doc":"An extension for Bonfire that handles: Account creation Email verification Authentication User/Profile creation User/Profile switching User Profile Settings","ref":"extension-bonfire_me.html","title":"Bonfire.Me","type":"extras"},{"doc":"","ref":"extension-bonfire_me.html#handy-commands","title":"Bonfire.Me - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"extension-bonfire_me.html#copyright-and-license","title":"Bonfire.Me - Copyright and License","type":"extras"},{"doc":"An extension for Bonfire that handles: Units Measures","ref":"extension-bonfire_quantify.html","title":"Bonfire.Quantify","type":"extras"},{"doc":"","ref":"extension-bonfire_quantify.html#handy-commands","title":"Bonfire.Quantify - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"extension-bonfire_quantify.html#copyright-and-license","title":"Bonfire.Quantify - Copyright and License","type":"extras"},{"doc":"An extension for Bonfire to handle: Search indexing Ultra-fast search LiveView search UI You can implement adapters for your prefered search backend. Currently adapters are included for: Meili Search","ref":"extension-bonfire_search.html","title":"Bonfire.Search","type":"extras"},{"doc":"This extension is meant to be used inside of a Bonfire app, so please refer to the main repo at: https://github.com/bonfire-networks/bonfire-app","ref":"extension-bonfire_search.html#development-deployment-documentation","title":"Bonfire.Search - Development &amp; Deployment Documentation","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"extension-bonfire_search.html#copyright-and-license","title":"Bonfire.Search - Copyright and License","type":"extras"},{"doc":"An extension for Bonfire that handles: Posting Following Feeds / Timelines Discussions Boosting Liking Flagging etc","ref":"extension-bonfire_social.html","title":"Bonfire.Social","type":"extras"},{"doc":"","ref":"extension-bonfire_social.html#handy-commands","title":"Bonfire.Social - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"extension-bonfire_social.html#copyright-and-license","title":"Bonfire.Social - Copyright and License","type":"extras"},{"doc":"An extension for Bonfire that handles: Tagging posts or other things (i.e. with a Category from Bonfire.Classify or a location from Bonfire.Geolocate) @ mentions (WIP) Hashtags (WIP)","ref":"extension-bonfire_tag.html","title":"Bonfire.Tag","type":"extras"},{"doc":"","ref":"extension-bonfire_tag.html#handy-commands","title":"Bonfire.Tag - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire, Haha Academy, and CommonsPub Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"extension-bonfire_tag.html#copyright-and-license","title":"Bonfire.Tag - Copyright and License","type":"extras"},{"doc":"An extension for Bonfire to generate invite links","ref":"extension-bonfire_invite_links.html","title":"Bonfire.Invite.Links","type":"extras"},{"doc":"","ref":"extension-bonfire_invite_links.html#handy-commands","title":"Bonfire.Invite.Links - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"extension-bonfire_invite_links.html#copyright-and-license","title":"Bonfire.Invite.Links - Copyright and License","type":"extras"},{"doc":"An extension for Bonfire that handles: Entering/editing rich text using ckeditor","ref":"extension-bonfire_editor_ck.html","title":"Bonfire.Editor.Ck","type":"extras"},{"doc":"","ref":"extension-bonfire_editor_ck.html#handy-commands","title":"Bonfire.Editor.Ck - Handy commands","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire This program is free software: you can redistribute it and/or modify it under the terms of the MIT License. You should have received a copy of the License along with this program.","ref":"extension-bonfire_editor_ck.html#copyright-and-license","title":"Bonfire.Editor.Ck - Copyright and License","type":"extras"},{"doc":"A rich text editor for Bonfire based on https://quilljs.com","ref":"extension-bonfire_editor_quill.html","title":"Bonfire.Editor.Quill","type":"extras"},{"doc":"Copyright (c) 2020 Bonfire, VoxPublica, and CommonsPub Contributors This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see https://www.gnu.org/licenses/ .","ref":"extension-bonfire_editor_quill.html#copyright-and-license","title":"Bonfire.Editor.Quill - Copyright and License","type":"extras"},{"doc":"ActivityPub Library for elixir. WORK IN PROGRESS, TESTING FEDERATION WITH DIFFERENT IMPLEMENTATIONS IS UNDERWAY","ref":"extension-activity_pub.html","title":"ActivityPub","type":"extras"},{"doc":"Add this library to your dependencies in mix.exs defp deps do [ ... ] { :activity_pub , git : &quot;https://github.com/bonfire-networks/activity_pub.git&quot; , branch : &quot;stable&quot; } # branch can &quot;stable&quot;, or &quot;develop&quot; for the bleeding edge end Create an adapter module. To start, one created at lib/my_app/adapter.ex might look like defmodule MyApp.Adapter do @moduledoc &quot;&quot;&quot; Adapter functions delegated from the `ActivityPub` Library &quot;&quot;&quot; @behaviour ActivityPub.Adapter end Note that, due to the defined @behavior , Elixir will warn you that the required functions base_url/0 get_actor_by_id/1 get_actor_by_username/1 get_follower_local_ids/1 get_following_local_ids/1 get_redirect_url/1 handle_activity/1 maybe_create_remote_actor/1 maybe_publish_object/1 update_local_actor/2 update_remote_actor/1 have not yet been implemented though you will be able to start your app. Defining these allows ActivityPub to handle ActivityPub HTTP and database calls and operations. An example of an implemented adaptor can be found here . Then set it in config config :activity_pub , :adapter , MyApp.Adapter Set your application repo in config config :activity_pub , :repo , MyApp.Repo Create a new ecto migration and call ActivityPub.Migration.up/0 from it Inject AP routes to your router by adding use ActivityPubWeb.Router to your app's router module Copy the default AP config to your app's confix.exs config :activity_pub , :mrf_simple , media_removal : [ ] , media_nsfw : [ ] , report_removal : [ ] , accept : [ ] , avatar_removal : [ ] , banner_removal : [ ] config :activity_pub , :instance , hostname : &quot;example.com&quot; , federation_publisher_modules : [ ActivityPubWeb.Publisher ] , federation_reachability_timeout_days : 7 , federating : true , rewrite_policy : [ ] config :activity_pub , :http , proxy_url : nil , send_user_agent : true , adapter : [ ssl_options : [ # Workaround for remote server certificate chain issues partial_chain : &amp; :hackney_connect . partial_chain / 1 , # We don&#39;t support TLS v1.3 yet versions : [ :tlsv1 , :&quot;tlsv1.1&quot; , :&quot;tlsv1.2&quot; ] ] ] Change the hostname value in the instance config block to your instance's hostname If you don't already have Oban set up, follow the Oban installation intructions and add the AP queues: config :my_app , Oban , queues : [ federator_incoming : 50 , federator_outgoing : 50 ] Now you should be able to compile and run your app and move over to integration.","ref":"extension-activity_pub.html#installation","title":"ActivityPub - Installation","type":"extras"},{"doc":"A handful of (mostly) arrow macros.","ref":"extension-arrows.html","title":"Arrows","type":"extras"},{"doc":"def deps do [ { :arrows , git : &quot;https://github.com/bonfire-networks/arrows&quot; , branch : &quot;main&quot; } ] end","ref":"extension-arrows.html#installation","title":"Arrows - Installation","type":"extras"},{"doc":"The Elixir |&gt; (&quot;pipe&quot;) operator is one of the things that seems to get people excited about elixir. Probably in part because you then don't have to keep coming up with function names. Unfortunately it's kind of limiting. The moment you need to pipe a parameter into a position that isn't the first one, it breaks down and you have to drop out of the pipeline format or write a secondary function to handle it. Not any more! By simply inserting ... where you would like the value to be inserted, Arrows will override where it is placed. This allows you to keep on piping while accommodating that function with the annoying argument order. Arrows was inspired by an existing library . Here is part of the test suite in lieu of examples: defmodule ArrowsTest do use ExUnit.Case use Arrows def double ( x ) , do : x * 2 def double_fst ( x , _ ) , do : x * 2 def double_snd ( _ , x ) , do : x * 2 def add_snd_thd ( _ , x , y ) , do : x + y test &quot;|&gt;&quot; do assert 4 == ( 2 |&gt; double ) assert 4 == ( 2 |&gt; double ( ) ) assert 4 == ( 2 |&gt; double ( ... ) ) assert 8 == ( 2 |&gt; double ( double ( ... ) ) ) assert 4 == ( 2 |&gt; double_fst ( 1 ) ) assert 4 == ( 2 |&gt; double_fst ( ... , 1 ) ) assert 8 == ( 2 |&gt; double_fst ( double ( ... ) , 1 ) ) assert 4 == ( 2 |&gt; double_snd ( 1 , ... ) ) assert 8 == ( 2 |&gt; double_snd ( 1 , double ( ... ) ) ) assert 3 == ( 2 |&gt; add_snd_thd ( 1 , ... , 1 ) ) assert 4 == ( 2 |&gt; add_snd_thd ( 1 , ... , ... ) ) assert 6 == ( 2 |&gt; add_snd_thd ( 1 , ... , double ( ... ) ) ) for x &lt;- [ :yes , 2 , nil , false ] do assert { :ok , x } == ( x |&gt; { :ok , ... } ) end end end A few little extra features you might notice here: You can move the parameter into a subexpression, as in 2 |&gt; double_fst(double(...), 1) where double will be called before the parameter is passed to double_fst . You can use ... multiple times, substituting it in multiple places. The right hand side need not even be a function call, you can use any expression with ... . Ok-pipe Arrows also provides an ok-pipe operator, ~&gt; , which only pipes into the next function if the result from the last one was considered a success. It's inspired by OK , but we have chosen to do things slightly differently so it better fits with our regular pipe. input result :----------------------- :-------------- {:ok, x} fun.(x) {:error, e} {:error, e} nil nil x when not is_nil(x) fun.(x) In the case of a function returning an ok/error tuple being on the left hand side, this is straightforward to determine. In the event of {:ok, x} , x will be passed into the right hand side to call. In the event of {:error, x} , the result will be {:error, x} . We also deal with a lot of functions that indicate failure by returning nil. ~&gt; tries to 'do what I mean' for both of these so you can have one pipe operator to rule them all. If nil is a valid result, you must thus be sure to wrap it in an ok tuple when it occurs on the left hand side of ~&gt; . |&gt; and ~&gt; compose in the way you'd expect; i.e. a ~&gt; receiving an error tuple or nil will stop executing the rest of the chain of (mixed) pipes.","ref":"extension-arrows.html#documentation","title":"Arrows - Documentation","type":"extras"},{"doc":"Some helpers to sparkle on top of Ecto join_preload reusable_join EctoSparkles.Changesets with various changeset helpers and validators EctoSparkles.Changesets.Errors to better handle changeset errors EctoSparkles.Migrator to run migrations, rollbacks, etc in a release EctoSparkles.Log to log slow queries with telemetry NOTE: you need to put something like config :ecto_sparkles, :otp_app, :your_otp_app_name in your app's config.","ref":"extension-ecto_sparkles.html","title":"EctoSparkles","type":"extras"},{"doc":"A macro which tells Ecto to perform a join and preload of (up to 5 nested levels of) associations. By default, Ecto preloads associations using a separate query for each association, which can degrade performance. You could make it run faster by using a combination of join/preload, but that requires a bit of boilerplate (see examples below). Examples using just Ecto query |&gt; join ( :left , [ o , activity : activity ] , assoc ( :object ) , as : :object ) |&gt; preload ( [ l , activity : activity , object : object ] , activity : { activity , [ object : object ] } ) Ecto requires calling Query.join/4 , Query.assoc/3 and Query.preload/2 . Here's another example: Invoice |&gt; join ( :left , [ i ] , assoc ( i , :customer ) , as : :customer ) |&gt; join ( :left , [ i ] , assoc ( i , :lines ) , as : :lines ) |&gt; preload ( [ lines : v , customers : c ] , lines : v , customer : c ) |&gt; Repo . all ( )","ref":"extension-ecto_sparkles.html#join_preload-documentation","title":"EctoSparkles - join_preload Documentation","type":"extras"},{"doc":"With join_preload , you can accomplish this with just one line of code. query |&gt; join_preload ( [ :activity , :object ] ) Invoice |&gt; join_preload ( :customer ) |&gt; join_preload ( :lines ) |&gt; Repo . all ( ) As a bonus, join_preload automatically makes use of reusable_join so calling it multiple times for the same association has no ill effects.","ref":"extension-ecto_sparkles.html#example-using-join_preload","title":"EctoSparkles - Example using join_preload","type":"extras"},{"doc":"A macro is similar to Ecto.Query.join/{4,5} , but can be called multiple times with the same alias. Note that only the first join operation is performed, the subsequent ones that use the same alias are just ignored. Also note that because of this behaviour, its mandatory to specify an alias when using this function. This is helpful when you need to perform a join while building queries one filter at a time, because the same filter could be used multiple times or you could have multiple filters that require the same join, which poses a problem with how the filter/3 callback work, as you need to return a dynamic with the filtering, which means that the join must have an alias, and by default Ecto raises an error when you add multiple joins with the same alias. To solve this, it is recommended to use this macro instead of the default Ecto.Query.join/{4,5} , in which case there will be only one join in the query that can be reused by multiple filters. Creating reusable joins query |&gt; reusable_join ( :left , [ t1 ] , t2 in &quot;other_table&quot; , on : t1 . id == t2 . id , as : :other_a ) |&gt; reusable_join ( :left , [ t1 ] , t2 in &quot;other_table&quot; , on : t1 . id == t2 . id , as : :other_b )","ref":"extension-ecto_sparkles.html#reusable_join-documentation","title":"EctoSparkles - reusable_join Documentation","type":"extras"},{"doc":"Copyright (c) 2021 Bonfire developers Copyright (c) 2020 Up Learn Copyright (c) 2019 Joshua Nussbaum join_preload was originally forked from Ecto.Preloader , licensed under WTFPL) reusable_join was originally forked from QueryElf , licensed under Apache License Version 2.0","ref":"extension-ecto_sparkles.html#copyright","title":"EctoSparkles - Copyright","type":"extras"},{"doc":"Small lib for converting emoticons and emoji names to emoji characters: Emote . convert_text ( &quot;my emoji game is :fire: ;-)&quot; ) # &gt; &quot;my emoji game is 🔥 😉&quot; There's known limitations: Emojis combined together don't work, ex.: &quot;:woo:pile_of_poo:hoo:&quot; would not convert.","ref":"extension-emote.html","title":"Emote","type":"extras"},{"doc":"WTFPL, as originally forked from https://github.com/danigulyas/smile","ref":"extension-emote.html#license","title":"Emote - License","type":"extras"},{"doc":"hexdocs Flexto provides configuration-driven Ecto schema extensibility","ref":"extension-flexto.html","title":"Flexto","type":"extras"},{"doc":"Example Schema: defmodule My.Schema do use Ecto.Schema import Flexto , only : [ flex_schema : 1 ] schema &quot;my_table&quot; do field :name , :string # just normal schema things flex_schema ( :my_app ) # boom! give me the stuff end end Example configuration config :my_app , My.Schema , belongs_to : [ foo : Foo , # belongs_to :foo, Foo bar : { Bar , type : :integer } , # belongs_to :bar, Bar, type: :integer ] , field : [ foo : :string , # field :foo, :string bar : { :integer , default : 4 } , # field :foo, :integer, default: 4 ] , has_one : [ foo : Foo , # has_one :foo, Foo bar : { Bar , foreign_key : :the_bar_id } , # has_one :bar, Bar, foreign_key: :the_bar_id ] has_many : [ foo : Foo , # has_many :foo, Foo bar : { Bar , foreign_key : :the_bar_id } , # has_many :bar, Bar, foreign_key: :the_bar_id ] many_to_many : [ foo : Foo , # many_to_many :foo, Foo bar : { Bar , join_through : FooBar } , # many_to_many :bar, Bar, :join_through: FooBar ] This one won't work very well because we define foo and bar 5 times each, but I think you get the point. Reading of configuration is done during compile time. The relations will be baked in during compilation, thus: Do not expect this to work in release config. You will need to rebuild all dependencies which use this macro when you change their configuration.","ref":"extension-flexto.html#usage","title":"Flexto - Usage","type":"extras"},{"doc":"Copyright (c) 2020 Flexto Contributors Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","ref":"extension-flexto.html#copyright-and-license","title":"Flexto - Copyright and License","type":"extras"},{"doc":"Nodeinfo is a library for serving up instance information using the NodeInfo standard NodeInfo is an effort to create a standardized way of exposing metadata about a server running one of the distributed social networks. The two key goals are being able to get better insights into the user base of distributed social networking and the ability to build tools that allow users to choose the best fitting software and server for their needs.","ref":"extension-nodeinfo.html","title":"Node Info","type":"extras"},{"doc":"Paginator implements cursor-based pagination for Elixir Ecto . Documentation","ref":"extension-paginator.html","title":"Paginator","type":"extras"},{"doc":"There are several ways to implement pagination in a project and they all have pros and cons depending on your situation. Limit-offset This is the easiest method to use and implement: you just have to set LIMIT and OFFSET on your queries and the database will return records based on this two parameters. Unfortunately, it has two major drawbacks: Inconsistent results: if the dataset changes while you are querying, the results in the page will shift and your user might end seeing records they have already seen and missing new ones. Inefficiency: OFFSET N instructs the database to skip the first N results of a query. However, the database must still fetch these rows from disk and order them before it can returns the ones requested. If the dataset you are querying is large this will result in significant slowdowns. Cursor-based (a.k.a keyset pagination) This method relies on opaque cursor to figure out where to start selecting records. It is more performant than LIMIT-OFFSET because it can filter records without traversing all of them. It's also consistent, any insertions/deletions before the current page will leave results unaffected. It has some limitations though: for instance you can't jump directly to a specific page. This may not be an issue for an API or if you use infinite scrolling on your website. Learn more http://use-the-index-luke.com/no-offset http://use-the-index-luke.com/sql/partial-results/fetch-next-page https://www.citusdata.com/blog/2016/03/30/five-ways-to-paginate/ https://developer.twitter.com/en/docs/tweets/timelines/guides/working-with-timelines","ref":"extension-paginator.html#why","title":"Paginator - Why?","type":"extras"},{"doc":"defmodule MyApp.Repo do use Ecto.Repo , otp_app : :my_app , adapter : Ecto.Adapters.Postgres use Paginator end query = from ( p in Post , order_by : [ asc : p . inserted_at , asc : p . id ] ) page = MyApp.Repo . paginate ( query , cursor_fields : [ :inserted_at , :id ] , limit : 50 ) # `page.edges` contains all the entries for this page. # `page.page_info` contains the meta-data associated with this page (cursors, limit, total count)","ref":"extension-paginator.html#getting-started","title":"Paginator - Getting started","type":"extras"},{"doc":"Add paginator to your list of dependencies in mix.exs : def deps do [ { :paginator , &quot;~&gt; 1.0.4&quot; } ] end","ref":"extension-paginator.html#install","title":"Paginator - Install","type":"extras"},{"doc":"Add Paginator to your repo. defmodule MyApp.Repo do use Ecto.Repo , otp_app : :my_app , adapter : Ecto.Adapters.Postgres use Paginator end Use the paginate function to paginate your queries. query = from ( p in Post , order_by : [ asc : p . inserted_at , asc : p . id ] ) # return the first 50 posts %{ edges : edges , page_info : page_info } = Repo . paginate ( query , cursor_fields : [ :inserted_at , :id ] , limit : 50 ) # assign the `after` cursor to a variable cursor_after = page_info . end_cursor # return the next 50 posts %{ edges : edges , page_info : page_info } = Repo . paginate ( query , after : cursor_after , cursor_fields : [ { :inserted_at , :asc } , { :id , :asc } ] , limit : 50 ) # assign the `before` cursor to a variable cursor_before = page_info . start_cursor # return the previous 50 posts (if no post was created in between it should be the same list as in our first call to `paginate`) %{ edges : edges , page_info : page_info } = Repo . paginate ( query , before : cursor_before , cursor_fields : [ :inserted_at , :id ] , limit : 50 ) # return total count # NOTE: this will issue a separate `SELECT COUNT(*) FROM table` query to the database. %{ edges : edges , page_info : page_info } = Repo . paginate ( query , include_total_count : true , cursor_fields : [ :inserted_at , :id ] , limit : 50 ) IO . puts &quot;total count: \#{ page_info . total_count } &quot;","ref":"extension-paginator.html#usage","title":"Paginator - Usage","type":"extras"},{"doc":"Repo.paginate/4 will throw an ArgumentError should it detect an executable term in the cursor parameters passed to it ( before , after ). This is done to protect you from potential side-effects of malicious user input, see paginator_test.exs .","ref":"extension-paginator.html#security-considerations","title":"Paginator - Security Considerations","type":"extras"},{"doc":"If you want to reap all the benefits of this method it is better that you create indexes on the columns you are using as cursor fields. Example # If your cursor fields are: [:inserted_at, :id] # Add the following in a migration create index ( &quot;posts&quot; , [ :inserted_at , :id ] )","ref":"extension-paginator.html#indexes","title":"Paginator - Indexes","type":"extras"},{"doc":"This method requires a deterministic sort order. If the columns you are currently using for sorting don't match that definition, just add any unique column and extend your index accordingly. You need to add order_by clauses yourself before passing your query to paginate/2 . In the future we might do that for you automatically based on the fields specified in :cursor_fields . There is an outstanding issue where Postgrex fails to properly builds the query if it includes custom PostgreSQL types. This library has only be tested with PostgreSQL.","ref":"extension-paginator.html#caveats","title":"Paginator - Caveats","type":"extras"},{"doc":"Documentation is written into the library, you will find it in the source code, accessible from iex and of course, it all gets published to hexdocs .","ref":"extension-paginator.html#documentation","title":"Paginator - Documentation","type":"extras"},{"doc":"Running tests Clone the repo and fetch its dependencies: $ git clone https://github.com/duffelhq/paginator.git $ cd paginator $ mix deps.get $ mix test Building docs $ mix docs","ref":"extension-paginator.html#contributing","title":"Paginator - Contributing","type":"extras"},{"doc":"See LICENSE","ref":"extension-paginator.html#license","title":"Paginator - LICENSE","type":"extras"},{"doc":"hexdocs Ecto's missing universal foreign key One foreign key to rule them all and in the darkness, bind them. -- Gandalf, paraphrased. A means of foreign keying many tables in one field. Designed for highly interlinked data in highly dynamic schemata where tracking all the foreign keys is neither desired nor practical. Note: a universal foreign key is actually a hard problem. Many approaches are on offer with a variety of tradeoffs. You should carefully consider a variety of approaches rather than just blindly adopting the one that fitted our project's needs the best!","ref":"extension-pointers.html","title":"Pointers","type":"extras"},{"doc":"A Table is a record of a table that may be linked to by a pointer. A Pointer is a pointer id and a table id. With these two ingredients, we can construct a means of pointing to any table that has a Table entry. Pointer and Table IDs are both Pointers.ULID , a UUID-like type that combines a millisecond-precision timestamp and some randomness to reduce the likelihood of a clash. It naturally sorts both in binary and text form by time and as far as postgres is concerned, it's a UUID.","ref":"extension-pointers.html#background","title":"Pointers - Background","type":"extras"},{"doc":"Aside from the hex dependency, you will also need to write a simple migration to set up the database before you can start writing your regular migrations: defmodule MyApp.Repo.Migrations.InitPointers do use Ecto.Migration import Pointers.Migration def up ( ) , do : inits ( :up ) def down ( ) , do : inits ( :down ) defp inits ( dir ) do init_pointers_ulid_extra ( dir ) # this one is optional but recommended init_pointers ( dir ) # this one is not optional end end","ref":"extension-pointers.html#installation","title":"Pointers - Installation","type":"extras"},{"doc":"Pointable tables require a unique sentinel ULID to identify them. These must be 26 characters long and in the alphabet of Crockford's Base32 . They should be easy to identify in a printout and might be silly. There is a helper function, synthesise!/1 in Pointers.ULID to assist with this process - give it a 26-character long binary of ascii alphanumerics and it will give you the closest ULID that matches back. Let's look at a simple schema: defmodule MyApp.Greeting do use Pointers.Pointable , otp_app : :my_app , source : &quot;myapp_greeting&quot; , table_id : &quot;GREET1NGSFR0MD0CEXAMP1E000&quot; pointable_schema do field :greeting , :string end end To declare a pointable schema, we start by using Pointers.Pointable , providing the name of our otp application, the source table's name in the database and our chosen sentinel ULID. We then call pointable_schema and define any fields we wish to put directly in the table. For the most part, pointable_schema is like Ecto's schema macro, except you do not provide the table name and let it handle the primary key. If for some reason you wished to turn autogeneration off, you could pass autogenerate: false to the options provided when using Pointers.Pointable . Now let's define the migration for our schema: defmodule MyApp.Repo.Migrations.Greeting do use Ecto.Migration import Pointers.Migration def up ( ) do create_pointable_table ( :greeting , &quot;GREET1NGSFR0MD0CEXAMP1E000&quot; ) do add :greeting , :text , null : false end end def down ( ) do drop_pointable_table ( :greeting , &quot;GREET1NGSFR0MD0CEXAMP1E000&quot; ) end end As you can see, it's pretty similar to defining a regular migration, except you use create_pointable_table and drop_pointable_table . Notice that our sentinel ULID makes an appearance again here. It's very important that these match what we declared in the schema.","ref":"extension-pointers.html#defining-a-pointable-type","title":"Pointers - Defining a Pointable Type","type":"extras"},{"doc":"Ecto does not know anything about our scheme, so unless we specifically want something to reference one of the pointed tables, we typically belongs_to with Pointers.Pointer . The table in which we do this does not itself need to be pointable. defmodule MyApp.Foo do use Ecto.Schema alias Pointers.Pointer # regular ecto table, not pointable! schema &quot;hello&quot; do belongs_to :pointer , Pointer # who knows what it points to? end end You may choose to reference a specific schema rather than Pointer if it will only point to a single table. If you do this, you must ensure that the referenced record exists in that table in the normal way. There may be some performance benefit, we didn't benchmark it. The migration is slightly more complex, we have to decide what type of a pointer it is. Pointers come in three categories: A strong pointer is not nullable and is deleted when the object it points to is deleted. A weak pointer is nullable and is nilified when the object it points to is deleted. An unbreakable pointer will raise when you attempt to delete the object it points to. Type Nullable? On Delete Strong No Cascade Weak Yes Set Null Unbreakable No Raise In this case we will use a strong pointer, because we want it to be deleted if the pointed object is deleted. defmodule MyApp.Repo.Migrations.Hello do use Ecto.Migration import Pointers.Migration def change ( ) do create_if_not_exists table ( :hello ) do add :pointer , strong_pointer ( ) , null : false add :greeting , :text , null : false end end end If you are pointing to a specific table instead of pointer, strong_pointer/1 allows you to pass the name of that module ( strong_pointer/0 calls this with Pointers.Pointer ).","ref":"extension-pointers.html#referencing-pointers","title":"Pointers - Referencing Pointers","type":"extras"},{"doc":"It is common that even though you have a universal foreign key, you will want to issue different queries based upon the type that is being pointed to. For this reason, it is up to you to decide how to perform an onward query. Pointers.schema/1 turns a Pointer into an Ecto schema module name you can switch against. Pointers.plan breaks down a list of Pointers into a map of ids keyed by schema module. It is handy to define some functions in your (non-library) application that can load any type of pointer in given contexts.","ref":"extension-pointers.html#dereferencing-pointers","title":"Pointers - Dereferencing Pointers","type":"extras"},{"doc":"Since Pointer has a table, you can use its table_id field to filter by pointed type. Pointers.Tables.id!/1 (or ids!/1 for a list) can be used to obtain the IDs for a table or tables. Then you run into another problem, that even though you know all of the tables you're working with will have a certain field, you need to know which table they are to work with them! The solution to this is what we are calling 'mixin tables' for convenience. A mixin table has a Pointer primary key along with any other fields you wish to store in this mixin. By moving fields out to mixin tables, you gain knowledge of the table name to which you need to join. An example mixin schema: defmodule My.Creator do use Pointers.Mixin , otp_app : :my_app , source : &quot;creator&quot; mixin_schema do belongs_to :creator , My.User end end Mixin tables are not themselves pointable, so there is no need to specify a table id as when defining a pointable schema. The migration for this is slightly more complicated: defmodule My.Creator.Migration do import Ecto.Migration import Pointers.Migration defp creator_table ( ) , do : My.Creator . __schema__ ( :source ) defp user_table ( ) , do : My.User . __schema__ ( :source ) def migrate_creator ( index_opts \\\\ [ ] ) , do : migrate_creator ( index_opts , direction ( ) ) defp migrate_creator ( index_opts , :up ) do create_mixin_table ( creator_table ( ) ) do add :creator_id , strong_pointer ( user_table ( ) ) , null : false end create_if_not_exists ( unique_index ( creator_table ( ) , [ :creator_id ] , index_opts ) ) end defp migrate_creator ( index_opts , :down ) do drop_if_exists ( unique_index ( creator_table ( ) , [ :creator_id ] , index_opts ) ) drop_mixin_table ( creator_table ( ) ) end end","ref":"extension-pointers.html#querying-pointers","title":"Pointers - Querying Pointers","type":"extras"},{"doc":"Virtuals are a new addition in pointers 0.6.0. They behave like pointables that you have not added any fields to. We noticed it was very common in bonfire to create pointables with no extra fields just so we could use the pointers system. Virtuals are alternative for this case that requires less typing and provides a reduced overhead vs pointables. Virtuals are backed by a writable view onto the pointers table. This means that when we can save the cost of maintaining a primary key in that table and the associated disk space. In all other respects, they behave like pointables. You can have changesets over them and select and insert as usual.","ref":"extension-pointers.html#virtual-pointables-virtuals","title":"Pointers - Virtual pointables (&quot;virtuals&quot;)","type":"extras"},{"doc":"The practical result of pointers is that it pushes a certain amount of validation and consistency logic back into elixir land. It is therefore your elixir code's responsibility to ensure that data is inserted into the appropriate mixin tables when inserting a pointable object and to manage deletions as appropriate. When assembling queries with mixin tables, pay careful attention to the type of join you are performing. An inner join is explicitly asking not to be shown objects that do not have a record for that mixin. You quite possibly wanted to left join.","ref":"extension-pointers.html#elixir-based-logic","title":"Pointers - Elixir-based logic","type":"extras"},{"doc":"Every pointable or mixin schema is overrideable with configuration during compilation (this is why using them requires an :otp_app to be specified). For example, we could override Pointers.Table (which is a pointable table) thus: config :pointers , Pointers.Table , source : &quot;my_pointers_table&quot; The table_id is also configurable, but we don't recommend you change it. In addition, all pointable and mixin schemas permit extension with Flexto . See the Flexto docs for more information about how to extend schemas via configuration. You will probably at the very least want to insert some has_one for mixins off your pointables.","ref":"extension-pointers.html#configuration-and-overrides","title":"Pointers - Configuration and overrides","type":"extras"},{"doc":"All solutions to the universal primary key problem have tradeofs. Here are what we see as the deficiencies in our approach: It forces a ULID on you. This is great for us, but not everyone. ULID exposes a timestamp with millisecond precision. If the time of creation of a resource is sensitive information for your purposes, ULIDs are not going to be suitable for you. Ecto has no knowledge of the specialty of Pointer , e.g. Repo.preload does not work and you need to specify a join condition to join through a pointer. Use our functions or add extra associations with flexto configuration. Dereferencing a list of pointers requires a select query per table type that occurs in the input set. Reliance on user attention. You have to follow the instructions correctly to make the system work at all. There is likely some performance impact from postgres not understanding the relationships between the various tables properly. It's hard to gauge and we haven't even tried. These are not likely to change. If you're going to pick this library, do so in the full knowledge of the tradeoffs it makes. Alternatives include (I'm sure you can think of others): Storing the table name in a second column alongside every foreign key. A compound datatype of id and table name. Byte/String manipulation tricks. Evil SQL hacks based upon compile time configuration. While we have our gripes with this approach, once you've gotten the hang of using it, it works out pretty well for most purposes and it's one of the simpler options to work with.","ref":"extension-pointers.html#tradeoffs","title":"Pointers - Tradeoffs","type":"extras"},{"doc":"Copyright (c) 2020 pointers Contributors Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","ref":"extension-pointers.html#copyright-and-license","title":"Pointers - Copyright and License","type":"extras"},{"doc":"hexdocs A ULID datatype and some postgres support for ULID operations ( min and max functions and aggregates) Originally forked from ecto-ulid but the internals have been replaced with a dependency on ex_ulid","ref":"extension-pointers_ulid.html","title":"Pointers.ULID","type":"extras"},{"doc":"{ :pointers_ulid , git : &quot;https://github.com/bonfire-networks/pointers_ulid&quot; , branch : &quot;main&quot; }","ref":"extension-pointers_ulid.html#installation","title":"Pointers.ULID - Installation","type":"extras"},{"doc":"Copyright (c) 2018 The RealReal, Inc. Copyright (c) 2020 pointers_ulid contributors. Licensed under the terms of the MIT License. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","ref":"extension-pointers_ulid.html#copyright-and-license","title":"Pointers.ULID - Copyright and License","type":"extras"},{"doc":"Voodoo is a drop-in replacement for Phoenix path helpers which is more convenient to use.","ref":"extension-voodoo.html","title":"Voodoo","type":"extras"},{"doc":"Where provides logging and inspecting with location information","ref":"extension-where.html","title":"Where","type":"extras"},{"doc":"","ref":"extension-where.html#installation","title":"Where - Installation","type":"extras"},{"doc":"Copyright (c) 2022 James Laver Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","ref":"extension-where.html#copyright-and-license","title":"Where - Copyright and License","type":"extras"},{"doc":"Furlex is a structured data extraction tool written in Elixir. It currently supports unfurling oEmbed, Twitter Card, Facebook Open Graph, JSON-LD and plain ole' HTML &lt;meta /&gt; data out of any url you supply.","ref":"extension-furlex.html","title":"Furlex","type":"extras"},{"doc":"Add :furlex to your list of dependencies in mix.exs : def deps do [ { :furlex , &quot;~&gt; 0.5.0&quot; } ] end Then run $ mix deps.get . Also add :furlex to your applications list: def application do [ applications : [ :furlex ] ] end Jason is the default json library in Furlex. You can however configure Furlex to use another library. For example: config :furlex , :json_library , YourLibraryOfChoice","ref":"extension-furlex.html#installation","title":"Furlex - Installation","type":"extras"},{"doc":"To unfurl a url, simply pass it to Furlex.unfurl/1 iex(1)&gt; Furlex . unfurl &quot;https://www.youtube.com/watch?v=Gh6H7Md_L2k&quot; { :ok , % Furlex { canonical_url : &quot;https://www.youtube.com/watch?v=Gh6H7Md_L2k&quot; , facebook : %{ &quot;fb:app_id&quot; =&gt; &quot;87741124305&quot; , &quot;og:description&quot; =&gt; &quot;Watch the full episode: https://www.thisoldhouse.com/watch/ask-toh-future-house-offerman Ask This Old House host Kevin O’Connor visits Nick Offerman in Los A...&quot; , &quot;og:image&quot; =&gt; &quot;https://i.ytimg.com/vi/Gh6H7Md_L2k/maxresdefault.jpg&quot; , &quot;og:site_name&quot; =&gt; &quot;YouTube&quot; , &quot;og:title&quot; =&gt; &quot;Touring Nick Offerman’s Wood Shop&quot; , &quot;og:type&quot; =&gt; &quot;video&quot; , &quot;og:url&quot; =&gt; &quot;https://www.youtube.com/watch?v=Gh6H7Md_L2k&quot; , &quot;og:video:height&quot; =&gt; [ &quot;720&quot; , &quot;720&quot; ] , &quot;og:video:secure_url&quot; =&gt; [ &quot;https://www.youtube.com/embed/Gh6H7Md_L2k&quot; , &quot;https://www.youtube.com/v/Gh6H7Md_L2k?version=3&amp;autohide=1&quot; ] , &quot;og:video:type&quot; =&gt; [ &quot;text/html&quot; , &quot;application/x-shockwave-flash&quot; ] , &quot;og:video:url&quot; =&gt; [ &quot;https://www.youtube.com/embed/Gh6H7Md_L2k&quot; , &quot;http://www.youtube.com/v/Gh6H7Md_L2k?version=3&amp;autohide=1&quot; ] , &quot;og:video:width&quot; =&gt; [ &quot;1280&quot; , &quot;1280&quot; ] } , json_ld : [ %{ &quot;@context&quot; =&gt; &quot;http://schema.org&quot; , &quot;@type&quot; =&gt; &quot;BreadcrumbList&quot; , &quot;itemListElement&quot; =&gt; [ %{ &quot;@type&quot; =&gt; &quot;ListItem&quot; , &quot;item&quot; =&gt; %{ &quot;@id&quot; =&gt; &quot;http://www.youtube.com/user/thisoldhouse&quot; , &quot;name&quot; =&gt; &quot;This Old House&quot; } , &quot;position&quot; =&gt; 1 } ] } ] , oembed : %{ &quot;author_name&quot; =&gt; &quot;This Old House&quot; , &quot;author_url&quot; =&gt; &quot;https://www.youtube.com/user/thisoldhouse&quot; , &quot;height&quot; =&gt; 270 , &quot;html&quot; =&gt; &quot;&lt;iframe width= \\&quot; 480 \\&quot; height= \\&quot; 270 \\&quot; src= \\&quot; https://www.youtube.com/embed/Gh6H7Md_L2k?feature=oembed \\&quot; frameborder= \\&quot; 0 \\&quot; gesture= \\&quot; media \\&quot; allow= \\&quot; encrypted-media \\&quot; allowfullscreen&gt;&lt;/iframe&gt;&quot; , &quot;provider_name&quot; =&gt; &quot;YouTube&quot; , &quot;provider_url&quot; =&gt; &quot;https://www.youtube.com/&quot; , &quot;thumbnail_height&quot; =&gt; 360 , &quot;thumbnail_url&quot; =&gt; &quot;https://i.ytimg.com/vi/Gh6H7Md_L2k/hqdefault.jpg&quot; , &quot;thumbnail_width&quot; =&gt; 480 , &quot;title&quot; =&gt; &quot;Touring Nick Offerman’s Wood Shop&quot; , &quot;type&quot; =&gt; &quot;video&quot; , &quot;version&quot; =&gt; &quot;1.0&quot; , &quot;width&quot; =&gt; 480 } , other : %{ &quot;description&quot; =&gt; &quot;Watch the full episode: https://www.thisoldhouse.com/watch/ask-toh-future-house-offerman Ask This Old House host Kevin O’Connor visits Nick Offerman in Los A...&quot; , &quot;keywords&quot; =&gt; &quot;this old house, how-to, home improvement, Episode, TV Show, DIY, Ask This Old House, Nick Offerman, Kevin O&#39;Connor, woodworking, wood shop&quot; , &quot;theme-color&quot; =&gt; &quot;#ff0000&quot; , &quot;title&quot; =&gt; &quot;Touring Nick Offerman’s Wood Shop&quot; } , status_code : 200 , twitter : %{ &quot;twitter:app:id:googleplay&quot; =&gt; &quot;com.google.android.youtube&quot; , &quot;twitter:app:id:ipad&quot; =&gt; &quot;544007664&quot; , &quot;twitter:app:id:iphone&quot; =&gt; &quot;544007664&quot; , &quot;twitter:app:name:googleplay&quot; =&gt; &quot;YouTube&quot; , &quot;twitter:app:name:ipad&quot; =&gt; &quot;YouTube&quot; , &quot;twitter:app:name:iphone&quot; =&gt; &quot;YouTube&quot; , &quot;twitter:app:url:googleplay&quot; =&gt; &quot;https://www.youtube.com/watch?v=Gh6H7Md_L2k&quot; , &quot;twitter:app:url:ipad&quot; =&gt; &quot;vnd.youtube://www.youtube.com/watch?v=Gh6H7Md_L2k&amp;feature=applinks&quot; , &quot;twitter:app:url:iphone&quot; =&gt; &quot;vnd.youtube://www.youtube.com/watch?v=Gh6H7Md_L2k&amp;feature=applinks&quot; , &quot;twitter:card&quot; =&gt; &quot;player&quot; , &quot;twitter:description&quot; =&gt; &quot;Watch the full episode: https://www.thisoldhouse.com/watch/ask-toh-future-house-offerman Ask This Old House host Kevin O’Connor visits Nick Offerman in Los A...&quot; , &quot;twitter:image&quot; =&gt; &quot;https://i.ytimg.com/vi/Gh6H7Md_L2k/maxresdefault.jpg&quot; , &quot;twitter:player&quot; =&gt; &quot;https://www.youtube.com/embed/Gh6H7Md_L2k&quot; , &quot;twitter:player:height&quot; =&gt; &quot;720&quot; , &quot;twitter:player:width&quot; =&gt; &quot;1280&quot; , &quot;twitter:site&quot; =&gt; &quot;@youtube&quot; , &quot;twitter:title&quot; =&gt; &quot;Touring Nick Offerman’s Wood Shop&quot; , &quot;twitter:url&quot; =&gt; &quot;https://www.youtube.com/watch?v=Gh6H7Md_L2k&quot; } } }","ref":"extension-furlex.html#usage","title":"Furlex - Usage","type":"extras"},{"doc":"Furlex accepts a few optional configuration parameters. You may configure additional tags to capture under the Facebook OpenGraph and TwitterCard parsers. config :furlex , Furlex.Parser.Facebook , tags : ~w(my:custom:facebook:tag another:custom:facebook:tag) config :furlex , Furlex.Parser.Twitter , tags : ~w(my:custom:twitter:tag) You may also configure the depth of the resulting Furlex map with a :group_keys? boolean. config :furlex , group_keys? : true If this option is set to false or unconfigured, Furlex will return values mapped directly beneath OpenGraph and TwitterCard keys, i.e. % Furlex { twitter : %{ &quot;twitter:app:id:googleplay&quot; =&gt; &quot;com.google.android.youtube&quot; , &quot;twitter:app:id:ipad&quot; =&gt; &quot;544007664&quot; , &quot;twitter:app:id:iphone&quot; =&gt; &quot;544007664&quot; } } If true, Furlex will return values grouped into colon-delimited map structures, i.e. % Furlex { twitter : %{ &quot;twitter&quot; =&gt; %{ &quot;app&quot; =&gt; %{ &quot;id&quot; =&gt; %{ &quot;googleplay&quot; =&gt; &quot;com.google.android.youtube&quot; , &quot;ipad&quot; =&gt; &quot;544007664&quot; , &quot;iphone&quot; =&gt; &quot;544007664&quot; } } } } }","ref":"extension-furlex.html#configuration","title":"Furlex - Configuration","type":"extras"},{"doc":"Copyright 2017 Clayton Gentry Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at http :// www . apache . org / licenses / LICENSE - 2.0 ` Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","ref":"extension-furlex.html#license","title":"Furlex - License","type":"extras"},{"doc":"A flexible easy to use set of AWS APIs. Available Services: https://github.com/ex-aws?q=service&amp;type=&amp;language=","ref":"extension-ex_aws.html","title":"ExAws","type":"extras"},{"doc":"ExAws is now actively maintained again :). It's going to take me a while to work through all the outstanding issues and PRs, so please bear with me. Bernard","ref":"extension-ex_aws.html#un-deprecation-notice","title":"ExAws - Un-Deprecation Notice","type":"extras"},{"doc":"ExAws v2.0 breaks out every service into its own package. To use the S3 service, you need both the core :ex_aws package as well as the :ex_aws_s3 package. As with all ExAws services, you'll need a compatible HTTP client (defaults to :hackney ) and whatever JSON or XML codecs needed by the services you want to use. Consult individual service documentation for details on what each service needs. defp deps do [ { :ex_aws , &quot;~&gt; 2.1&quot; } , { :ex_aws_s3 , &quot;~&gt; 2.0&quot; } , { :hackney , &quot;~&gt; 1.9&quot; } , { :sweet_xml , &quot;~&gt; 0.6&quot; } , ] end With these deps you can use ExAws precisely as you're used to: # make a request (with the default region) ExAws.S3 . list_objects ( &quot;my-bucket&quot; ) |&gt; ExAws . request ( ) # or specify the region ExAws.S3 . list_objects ( &quot;my-bucket&quot; ) |&gt; ExAws . request ( region : &quot;us-west-1&quot; ) # some operations support streaming ExAws.S3 . list_objects ( &quot;my-bucket&quot; ) |&gt; ExAws . stream! ( ) |&gt; Enum . to_list ( ) AWS Key configuration ExAws requires valid AWS keys in order to work properly. ExAws by default does the equivalent of: config :ex_aws , access_key_id : [ { :system , &quot;AWS_ACCESS_KEY_ID&quot; } , :instance_role ] , secret_access_key : [ { :system , &quot;AWS_SECRET_ACCESS_KEY&quot; } , :instance_role ] This means it will try to resolve credentials in order: Look for the AWS standard AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY environment variables Resolve credentials with IAM If running inside ECS and a task role has been assigned it will use it Otherwise it will fall back to the instance role AWS CLI config files are supported, but require an additional dependency: { :configparser_ex , &quot;~&gt; 4.0&quot; } You can then add {:awscli, &quot;profile_name&quot;, timeout} to the above config and it will pull information from ~/.aws/config and ~/.aws/credentials Alternatively, if you already have a profile name set in the AWS_PROFILE environment variable, you can use that with {:awscli, :system, timeout} config :ex_aws , access_key_id : [ { :system , &quot;AWS_ACCESS_KEY_ID&quot; } , { :awscli , &quot;default&quot; , 30 } , :instance_role ] , secret_access_key : [ { :system , &quot;AWS_SECRET_ACCESS_KEY&quot; } , { :awscli , &quot;default&quot; , 30 } , :instance_role ] For role based authentication via role_arn and source_profile an additional dependency is required: { :ex_aws_sts , &quot;~&gt; 2.0&quot; } Further information on role based authentication is provided in said dependency. Session token configuration Alternatively, you can also provide AWS_SESSION_TOKEN to security_token to authenticate with session token: config :ex_aws , access_key_id : { :system , &quot;AWS_ACCESS_KEY_ID&quot; } , security_token : { :system , &quot;AWS_SESSION_TOKEN&quot; } , secret_access_key : { :system , &quot;AWS_SECRET_ACCESS_KEY&quot; } Hackney configuration ExAws by default uses hackney to make HTTP requests to AWS API. You can modify the options as such: config :ex_aws , :hackney_opts , follow_redirect : true , recv_timeout : 30_000 AWS Region Configuration. You can set the region used by default for requests. config :ex_aws , region : &quot;us-west-2&quot; , Alternatively, the region can be set in an environment variable: config :ex_aws , region : { :system , &quot;AWS_REGION&quot; } JSON Codec Configuration The default JSON codec is Jason. You can choose a different one: config :ex_aws , json_codec : Poison Path Normalization Paths that include multiple consecutive /'s will by default be normalized to a single slash. There are cases when paths need to be literal (S3) and this normalization behaviour can be turned off via configuration: config :ex_aws , normalize_path : false","ref":"extension-ex_aws.html#getting-started","title":"ExAws - Getting Started","type":"extras"},{"doc":"ExAws can also be used directly without any specific service module. You need to figure out how the API of the specific AWS service works, in particular: Protocol (JSON or query). Path (depends on the service and the specific operation, usually &quot;/&quot;). Service name (used to generate the request signature, as described here ). Request body, query params, HTTP method, and headers (depends on the service and specific operation). You can look for this information in the service's API reference at docs.aws.amazon.com or, for example, in the Go SDK API models at github.com/aws/aws-sdk-go (look for a api-*.json file). The protocol dictates which operation module to use for the request. If the protocol is JSON, use ExAws.Operation.JSON , if it's query, use ExAws.Operation.Query . Examples Redshift DescribeClusters action = :describe_clusters action_string = action |&gt; Atom . to_string |&gt; Macro . camelize operation = % ExAws.Operation.Query { path : &quot;/&quot; , params : %{ &quot;Action&quot; =&gt; action_string } , service : :redshift , action : action } ExAws . request ( operation ) ECS RunTask data = %{ taskDefinition : &quot;hello_world&quot; , launchType : &quot;FARGATE&quot; , networkConfiguration : %{ awsvpcConfiguration : %{ subnets : [ &quot;subnet-1a2b3c4d&quot; , &quot;subnet-4d3c2b1a&quot; ] , securityGroups : [ &quot;sg-1a2b3c4d&quot; ] , assignPublicIp : &quot;ENABLED&quot; } } } operation = % ExAws.Operation.JSON { http_method : :post , headers : [ { &quot;x-amz-target&quot; , &quot;AmazonEC2ContainerServiceV20141113.RunTask&quot; } , { &quot;content-type&quot; , &quot;application/x-amz-json-1.1&quot; } ] , path : &quot;/&quot; , data : data , service : :ecs } ExAws . request ( operation )","ref":"extension-ex_aws.html#direct-usage","title":"ExAws - Direct Usage","type":"extras"},{"doc":"Easy configuration. Minimal dependencies. Choose your favorite JSON codec and HTTP client. Elixir streams to automatically retrieve paginated resources. Elixir protocols allow easy customization of Dynamo encoding / decoding. Simple. ExAws aims to provide a clear and consistent elixir wrapping around AWS APIs, not abstract them away entirely. For every action in a given AWS API there is a corresponding function within the appropriate module. Higher level abstractions like the aforementioned streams are in addition to and not instead of basic API calls. That's it!","ref":"extension-ex_aws.html#highlighted-features","title":"ExAws - Highlighted Features","type":"extras"},{"doc":"ExAws will retry failed AWS API requests using exponential backoff per the &quot;Full Jitter&quot; formula described in https://www.awsarchitectureblog.com/2015/03/backoff.html The algorithm uses three values, which are configurable: # default values shown below config :ex_aws , :retries , max_attempts : 10 , base_backoff_in_ms : 10 , max_backoff_in_ms : 10_000 max_attempts is the maximum number of possible attempts with backoffs in between each one base_backoff_in_ms corresponds to the base value described in the blog post max_backoff_in_ms corresponds to the cap value described in the blog post","ref":"extension-ex_aws.html#retries","title":"ExAws - Retries","type":"extras"},{"doc":"If you want to run mix test , you'll need to have a local dynamodb running on port 8000. See Setting up DynamoDB Local . The redirect test will intentionally cause a warning to be issued.","ref":"extension-ex_aws.html#testing","title":"ExAws - Testing","type":"extras"},{"doc":"The MIT License (MIT) Copyright (c) 2014-2020 CargoSense, Inc. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","ref":"extension-ex_aws.html#license","title":"ExAws - License","type":"extras"},{"doc":"Creates Phoenix Components for the SVG of 100,000+ icons from 100+ icon sets from https://iconify.design Only creates a component on-the-fly at compilation time when a particular icon is first included in a view or component.","ref":"extension-iconify_ex.html","title":"Iconify for Phoenix","type":"extras"},{"doc":"def deps do [ { :iconify_ex , &quot;~&gt; 0.0.1&quot; } ] end You need to fetch the latest iconify icon sets by running: cd deps/iconify_ex/assets &amp;&amp; yarn","ref":"extension-iconify_ex.html#installation","title":"Iconify for Phoenix - Installation","type":"extras"},{"doc":"First add import Iconify in your Phoenix or LiveView module where you want to use it (or just once in the macros in your Web module). Embed an icon using default classes: &lt; .iconify icon = &quot;heroicons-solid:collection&quot; &gt; Specifying classes: &lt; .iconify icon = &quot;heroicons-solid:collection&quot; class = &quot;w-8 h-8 text-base-content&quot; /&gt;","ref":"extension-iconify_ex.html#usage","title":"Iconify for Phoenix - Usage","type":"extras"},{"doc":"A Gettext-compatible backend that adds support for pseudolocalization . Pseudolocalization can help you catch localization bugs earlier in the development process.","ref":"extension-pseudo_gettext.html","title":"PseudoGettext","type":"extras"},{"doc":"This package is available in Hex It can be installed by adding pseudo_gettext to your list of dependencies in mix.exs : def deps do [ { :pseudo_gettext , &quot;~&gt; 0.1.0&quot; } ] end Documentation is generated with ExDoc and published on HexDocs . The complete documentation can be found at https://hexdocs.pm/pseudo_gettext .","ref":"extension-pseudo_gettext.html#installation","title":"PseudoGettext - Installation","type":"extras"},{"doc":"From Wikipedia : Pseudolocalization (or pseudo-localization) is a software testing method used for testing internationalization aspects of software. Instead of translating the text of the software into a foreign language, as in the process of localization, the textual elements of an application are replaced with an altered version of the original language. These specific alterations make the original words appear readable, but include the most problematic characteristics of the world's languages: varying length of text or characters, language direction, fit into the interface and so on. Pseudolocalization usually does the following: Replace each latin character with a slightly modified version, which is still legible (for example, m → ɱ , j → ǰ ). This allows the programmer and users to visually distinguish text that has been internationalized (i.e. wrapped in a gettext call) from text that hasn't been internationalized. The fact that we convert characters into characters that are visually similar means that the text remains readable. Replace arabic numerals (i.e. latin digits) as we did above. The goal is the same: to have arabic numerals that are visually distinct but understandable. Add extra tilde ( ~ ) characters to words to make them ~35% longer. This allows us to identify UI elements that are too inflexible for languages that may take up more space than English. As a rule of thumb, one should assume that foreign language strings are 35% longer in other languages. Surround the string with &quot;⟪&quot; and &quot;⟫&quot; so that you can idenify messages that are to big for the containing element (those messages will be clipped and the text won't be surrounded by &quot;⟪&quot; and &quot;⟫&quot; on both sides). Other characters (non-latin characters, punctuation characters, etc.) are not touched by the localization process. This can (and should!) be used in development to identify internationalization problems before they hit production.","ref":"extension-pseudo_gettext.html#why-pseudolocalization","title":"PseudoGettext - Why Pseudolocalization?","type":"extras"},{"doc":"This is a drop-in replacement for Gettext . You can just replace: use Gettext , otp_app : :my_app by use PseudoGettext , otp_app : :my_app To activate pseudolocalization of plain text, you need to set the gettext locale to &quot;en-pseudo_text&quot; with Gettext.set_locale(&quot;en_pseudo_text&quot;) . To activate pseudolocalization of HTML (which respects HTML tags and attributes), you need to set the gettext locale to &quot;en-pseudo_html&quot; with Gettext.set_locale(&quot;en_pseudo_html&quot;) . These locales are hardcoded and can't be easily extended. Extending these locales or adding config options is on the (tenuous) roadmap. IF you want to set the locale globally for your application (which is what you often want in development), you can use the PseudoGettext.set_global_locale/1 function. If you start your application with IEx, you can simply use PseudoGettext.set_global_locale(&quot;en-pseudo_html&quot;) . Another approach is to set the global locale as a config option: # config/dev.exs config :pseudo_gettext , :locale , &quot;en-pseudo_html&quot; This is actually a very good option in development, becuase it allows you to detect internationalization issues earlier.","ref":"extension-pseudo_gettext.html#usage","title":"PseudoGettext - Usage","type":"extras"},{"doc":"In a normal Phoenix application, there is usually a MyAppWeb.Gettext module such as this one: defmodule CrabsWeb.Gettext do @moduledoc &quot;&quot;&quot; A module providing Internationalization with a gettext-based API. &quot;&quot;&quot; use Gettext , otp_app : :crabs end We can add support for pseudolocalization by replacing use Gettext, ... by use PseudoGettext, ... : defmodule CrabsWeb.Gettext do @moduledoc &quot;&quot;&quot; A module providing Internationalization with a gettext-based API. &quot;&quot;&quot; use PseudoGettext , otp_app : :crabs end The rest of the application requires no changes. Say we have a user registration form the application. It could look like this: By starting the application with the config option above ( config :pseudo_gettext, :locale, &quot;en-pseudo_html&quot; ) or using the IEx console ( PseudoGettext.set_global_locale(&quot;en-pseudo_html&quot;) ) we can activate pseudolocalization. The login form should now look like this: As you can see, most user-visible text has been replaced by unicode symbols similar to latin letters. The text remains quite readable throughout. You can see that on the top left corner, the application name is not properly internationalized. When we inspect the source code, we can see the reason: &lt;%# root.html.heex %&gt; ... &lt; a class = &quot;navbar-brand&quot; href = &quot;#&quot; &gt; CrabsWeb &lt;/ a &gt; ... The name of the application is a static string in the .heex template, which is not internationalized. To properly internationalize the application name, you must wrapp it in (d)gettext : &lt;%# root.html.heex %&gt; ... &lt; a class = &quot;navbar-brand&quot; href = &quot;#&quot; &gt; &lt;%= dgettext ( &quot;accounts&quot; , &quot;CrabsWeb&quot; ) %&gt; &lt;/ a &gt; ... If you reload the page, the app's branding will be properly internationalized: By setting the global locale to nil (i.e. PseudoGettext.set_global_locale(nil) ) you can deactivate pseudolocalization and revert to the default locale: This short demo illustrates the workflow one could follow to ensure the application is properly internationaluzed throughout development. If one develops with pseudolocalization active most of the time, these small errors are easy to find and correct.","ref":"extension-pseudo_gettext.html#demo","title":"PseudoGettext - Demo","type":"extras"},{"doc":"A fresh approach to testing.","ref":"extension-zest.html","title":"Zest","type":"extras"},{"doc":"Installation: { :zest , &quot;~&gt; 0.1.2&quot; } Example (taken from our test suite): defmodule MyTest do use ExUnit.Case import Zest test &quot;scope fails spectacularly&quot; do scope [ this : %{ is : :a } , test : :case ] do scope [ error : :this_should_not_show ] do end scope [ the : :order , must : :be_correct ] do scope [ to : :pass ] , assert ( true == false ) end end end end Output: Zest Context : * this : %{ is : :a } * test : :case * the : :order * must : :be_correct * to : :pass 1 ) test scope fails spectacularly ( ZestTest ) test / zest_test . exs : 7 Assertion with == failed code : assert true == false left : true right : false stacktrace : ( zest 0.1 . 0 ) lib / zest . ex : 52 : Zest . in_scope / 2 ( zest 0.1 . 0 ) lib / zest . ex : 47 : anonymous fn / 1 in Zest . in_scope / 2 ( zest 0.1 . 0 ) lib / zest . ex : 113 : Zest . intercept / 2 test / zest_test . exs : 8 : ( test )","ref":"extension-zest.html#usage","title":"Zest - Usage","type":"extras"},{"doc":"Contributions are welcome, even just doc fixes or suggestions. This project has adopted a Code of Conduct based on the Contributor Covenant. Please be nice when interacting with the community.","ref":"extension-zest.html#contributing","title":"Zest - Contributing","type":"extras"},{"doc":"Copyright (c) 2020 James Laver Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at http :// www . apache . org / licenses / LICENSE - 2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","ref":"extension-zest.html#copyright-and-license","title":"Zest - Copyright and License","type":"extras"},{"doc":"A DSL for generating GraphQL queries","ref":"extension-grumble.html","title":"Grumble","type":"extras"},{"doc":"We use this in our tests at work to generate all the queries (because we outgrew string concatenation). I'm not sure I'd want to depend on it in production yet because it's hard to feel like it's had a proper stress testing. Needs (better) tests and documentation. Missing support for some things we don't use.","ref":"extension-grumble.html#status-beta","title":"Grumble - Status: beta","type":"extras"},{"doc":"Add to your deps: { :grumble , &quot;~&gt; 0.1.0&quot; } Simple example: import Grumble alias Grumble.PP IO . puts ( PP . to_string ( query ( params : [ community_id : type! ( :string ) ] , fields : [ field ( :community , args : [ community_id : var ( :community_id ) ] , fields : [ :id , :name ] ) ] ) ) ) Output: query ( $ communityId : String ! ) { community ( communityId : $ communityId ) { name id } }","ref":"extension-grumble.html#usage","title":"Grumble - Usage","type":"extras"},{"doc":"Most of the useful functions are in the Grumble module. From there you can read which arguments are understood by the relevant new function. We apologise for the poor documentation, please feel free to contribute better docs!","ref":"extension-grumble.html#guide","title":"Grumble - Guide","type":"extras"},{"doc":"Contributions are welcome, even just doc fixes or suggestions. This project has adopted a Code of Conduct based on the Contributor Covenant. Please be nice when interacting with the community.","ref":"extension-grumble.html#contributing","title":"Grumble - Contributing","type":"extras"},{"doc":"Copyright (c) 2020 Grumble contributors. Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at http :// www . apache . org / licenses / LICENSE - 2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","ref":"extension-grumble.html#copyright-and-license","title":"Grumble - Copyright and License","type":"extras"},{"doc":"Notice: The upstream Licensir repository is now archived. This fork is being maintained at the moment. An Elixir mix task that list the license(s) of all installed packages in your project.","ref":"extension-licensir.html","title":"Licensir","type":"extras"},{"doc":"The package can be installed by adding :licensir to your list of dependencies in mix.exs : def deps do [ { :licensir , &quot;~&gt; 0.7&quot; , only : :dev , runtime : false } ] end This mix task in most cases only needs to be run on a development machine and independent from the runtime applications, hence the only: dev, runtime: false options. Install locally If you do not wish to include this tool as part of your dependencies, you may also install it locally by running: $ mix archive . install hex licensir 0.7 . 0 Now you can access this tool from any path on your local machine that has access to mix .","ref":"extension-licensir.html#installation","title":"Licensir - Installation","type":"extras"},{"doc":"Run mix licenses to get the list of packages and their licenses: $ mix licenses Notice: This is not a legal advice. Use the information below at your own risk. | Package | License | Version | Link | |---------------------|---------------------------|---------|---------------------------------------------| | certifi | BSD | | https://hex.pm/packages/certifi | | earmark | Apache 2.0 | 1.3.2 | https://hex.pm/packages/earmark | | ex_doc | Apache 2.0 | 0.20.2 | https://hex.pm/packages/ex_doc | | excoveralls | MIT | | https://hex.pm/packages/excoveralls | | hackney | Apache 2.0 | | https://hex.pm/packages/hackney | | idna | BSD; MIT | | https://hex.pm/packages/idna | | jason | Apache 2.0 | | https://hex.pm/packages/jason | | makeup | BSD; Unrecognized license | 0.8.0 | https://hex.pm/packages/makeup | | makeup_elixir | BSD | 0.13.0 | https://hex.pm/packages/makeup_elixir | | metrics | BSD | | https://hex.pm/packages/metrics | | mimerl | MIT | | https://hex.pm/packages/mimerl | | nimble_parsec | Apache 2.0 | 0.5.0 | https://hex.pm/packages/nimble_parsec | | ssl_verify_fun | MIT | | https://hex.pm/packages/ssl_verify_fun | | unicode_util_compat | Apache 2.0; BSD | | https://hex.pm/packages/unicode_util_compat | |---------------------|---------------------------|---------|---------------------------------------------| Run mix licenses --csv to output in csv format: Package,Version,License certifi,,BSD earmark,1.3.2,Apache 2.0 ex_doc,0.20.2,Apache 2.0 excoveralls,,&quot;Unsure (found: MIT, Unrecognized license file content)&quot; hackney,,Apache 2.0 idna,,&quot;Unsure (found: BSD, MIT)&quot; jason,,Apache 2.0 makeup,0.8.0,&quot;Unsure (found: BSD, Unrecognized license file content)&quot; makeup_elixir,0.13.0,BSD metrics,,BSD mimerl,,MIT nimble_parsec,0.5.0,Apache 2.0 ssl_verify_fun,,MIT unicode_util_compat,,&quot;Unsure (found: Apache 2.0, BSD)&quot; Flags --top-level-only - Only fetch license information from top level dependencies (e.g. packages that are directly listed in your application's mix.exs ). Excludes transitive dependencies.","ref":"extension-licensir.html#usage","title":"Licensir - Usage","type":"extras"},{"doc":"You may call the function Licensir.Scanner.scan() from your Elixir application to get a list of license data per dependency. iex&gt; Licensir.Scanner . scan ( [ ] ) [ % Licensir.License { app : :jason , dep : % Mix.Dep { app : :jason , deps : ... } , file : &quot;Apache 2&quot; , hex_metadata : [ &quot;Apache 2.0&quot; ] , license : &quot;Apache 2.0&quot; , mix : nil , name : &quot;jason&quot; , version : nil } , % Licensir.License { ... } , ... ]","ref":"extension-licensir.html#usage-as-a-library","title":"Licensir - Usage as a library","type":"extras"},{"doc":"Copyright (c) 2017, Unnawut Leepaisalsuwanna. This library is released under the MIT License. See the LICENSE.md file for further details. This project contains 3rd party work as follow: ASCII table rendering: a partial copy of djm/table_rex . CSV rendering: a partial copy of beatrichartz/csv .","ref":"extension-licensir.html#copyright-and-license","title":"Licensir - Copyright and License","type":"extras"},{"doc":"Package License Version Link absinthe MIT 1.7.0 https://hex.pm/packages/absinthe absinthe_error_payload BSD-3; Unrecognized license 1.1.4 https://hex.pm/packages/absinthe_error_payload absinthe_phoenix MIT 2.0.2 https://hex.pm/packages/absinthe_phoenix absinthe_plug MIT 1.5.8 https://hex.pm/packages/absinthe_plug activity_pub AGPL v3 0.1.0 https://github.com/bonfire-networks/activity_pub argon2_elixir Apache 2.0 ~&gt; 3.0 https://hex.pm/packages/argon2_elixir arrows Undefined 0.1.0 https://github.com/bonfire-networks/arrows bamboo MIT 2.2.0 https://hex.pm/packages/bamboo bamboo_smtp MIT 4.2.1 https://hex.pm/packages/bamboo_smtp benchee MIT 1.1.0 https://hex.pm/packages/benchee benchee_html MIT 1.0.0 https://hex.pm/packages/benchee_html benchee_json MIT 1.0.0 https://hex.pm/packages/benchee_json bonfire_api_graphql MPL 2.0 https://github.com/bonfire-networks/bonfire_api_graphql bonfire_boundaries MPL 2.0 0.1.0 https://github.com/bonfire-networks/bonfire_boundaries bonfire_classify AGPL v3 0.1.0 https://github.com/bonfire-networks/bonfire_classify bonfire_common MPL 2.0 0.1.0 https://github.com/bonfire-networks/bonfire_common bonfire_data_access_control MPL 2.0 0.1.0 https://github.com/bonfire-networks/bonfire_data_access_control bonfire_data_activity_pub MPL 2.0 0.1.0 https://github.com/bonfire-networks/bonfire_data_activity_pub bonfire_data_edges Undefined 0.1.0 https://github.com/bonfire-networks/bonfire_data_edges bonfire_data_identity MPL 2.0 0.1.0 https://github.com/bonfire-networks/bonfire_data_identity bonfire_data_shared_user MPL 2.0 0.1.0 https://github.com/bonfire-networks/bonfire_data_shared_user bonfire_data_social MPL 2.0 0.1.0 https://github.com/bonfire-networks/bonfire_data_social bonfire_ecto Undefined 0.1.0 https://github.com/bonfire-networks/bonfire_ecto bonfire_editor_ck MIT 0.1.0 https://github.com/bonfire-networks/bonfire_editor_ck bonfire_editor_quill AGPL v3 0.0.1 https://github.com/bonfire-networks/bonfire_editor_quill bonfire_epics Apache 2.0 0.1.0 https://github.com/bonfire-networks/bonfire_epics bonfire_fail MPL 2.0 https://github.com/bonfire-networks/bonfire_fail bonfire_federate_activitypub AGPL v3 0.1.0 https://github.com/bonfire-networks/bonfire_federate_activitypub bonfire_files AGPL v3 0.1.0 https://github.com/bonfire-networks/bonfire_files bonfire_invite_links AGPL v3 0.0.1 https://github.com/bonfire-networks/bonfire_invite_links bonfire_mailer MPL 2.0 0.1.0 https://github.com/bonfire-networks/bonfire_mailer bonfire_me AGPL v3 0.1.0 https://github.com/bonfire-networks/bonfire_me bonfire_search AGPL v3 0.1.0 https://github.com/bonfire-networks/bonfire_search bonfire_social AGPL v3 0.1.0 https://github.com/bonfire-networks/bonfire_social bonfire_tag AGPL v3 0.1.0 https://github.com/bonfire-networks/bonfire_tag bonfire_ui_common MPL 2.0 0.1.0 https://github.com/bonfire-networks/bonfire_ui_common bonfire_ui_me AGPL v3 0.1.0 https://github.com/bonfire-networks/bonfire_ui_me bonfire_ui_social AGPL v3 0.1.0 https://github.com/bonfire-networks/bonfire_ui_social cachex MIT 3.4.0 https://hex.pm/packages/cachex certifi BSD 2.9.0 https://hex.pm/packages/certifi cldr_utils Apache 2.0 2.17.2 https://hex.pm/packages/cldr_utils combine MIT 0.10.0 https://hex.pm/packages/combine comeonin BSD-3-Clause; Unrecognized license 5.3.3 https://hex.pm/packages/comeonin connection Apache 2.0 1.1.0 https://hex.pm/packages/connection cowboy ISC 2.9.0 https://hex.pm/packages/cowboy cowboy_telemetry Apache 2.0 0.4.0 https://hex.pm/packages/cowboy_telemetry cowlib ISC 2.11.0 https://hex.pm/packages/cowlib dataloader MIT 1.0.10 https://hex.pm/packages/dataloader db_connection Apache 2.0 2.4.2 https://hex.pm/packages/db_connection decimal Apache 2.0 2.0.0 https://hex.pm/packages/decimal deep_merge MIT 1.0.0 https://hex.pm/packages/deep_merge earmark Apache 2.0 1.5.0-pre1 https://hex.pm/packages/earmark earmark_parser Apache 2.0 1.4.26 https://hex.pm/packages/earmark_parser ecto Apache 2.0 3.8.4 https://hex.pm/packages/ecto ecto_erd Apache 2.0 0.4.2 https://hex.pm/packages/ecto_erd ecto_materialized_path Apache 2.0 0.3.0 https://github.com/bonfire-networks/ecto_materialized_path ecto_psql_extras MIT 0.7.4 https://hex.pm/packages/ecto_psql_extras ecto_shorts MIT 1.1.1 https://github.com/bonfire-networks/ecto_shorts ecto_sparkles Undefined 0.1.0 https://github.com/bonfire-networks/ecto_sparkles ecto_sql Apache 2.0 3.8.3 https://hex.pm/packages/ecto_sql elixir_make Apache 2.0 ~&gt; 0.6 https://hex.pm/packages/elixir_make email_checker MIT 0.2.4 https://hex.pm/packages/email_checker emote Undefined 0.1.0 https://github.com/bonfire-networks/emote eqrcode MIT 0.1.10 https://hex.pm/packages/eqrcode eternal MIT 1.2.2 https://hex.pm/packages/eternal ex_aws MIT 2.3.2 https://hex.pm/packages/ex_aws ex_aws_s3 MIT 2.3.2 https://hex.pm/packages/ex_aws_s3 ex_cldr Apache 2.0 2.30.0 https://hex.pm/packages/ex_cldr ex_cldr_languages Apache 2.0 0.3.3 https://hex.pm/packages/ex_cldr_languages ex_cldr_plugs Apache 2.0 1.0.0 https://hex.pm/packages/ex_cldr_plugs ex_doc Apache 2.0 0.28.4 https://hex.pm/packages/ex_doc ex_machina MIT ~&gt; 2.4 https://hex.pm/packages/ex_machina ex_ulid Apache 2.0 0.1.0 https://hex.pm/packages/ex_ulid ex_unit_notifier MIT ~&gt; 1.0 https://hex.pm/packages/ex_unit_notifier exsync BSD 3-Clause; Unrecognized license 0.2.4 https://hex.pm/packages/exsync faker MIT 0.17.0 https://hex.pm/packages/faker fast_ngram MIT 1.2.0 https://hex.pm/packages/fast_ngram fetch_favicon MIT 0.1.3 https://hex.pm/packages/fetch_favicon file_info MIT 0.0.4 https://hex.pm/packages/file_info file_system WTFPL 0.2.10 https://hex.pm/packages/file_system flame_on MIT 0.5.0 https://hex.pm/packages/flame_on flexto Apache 2.0 0.2.3 https://github.com/bonfire-networks/flexto floki MIT 0.32.1 https://hex.pm/packages/floki gen_smtp BSD-2-Clause; Unrecognized license 1.2.0 https://hex.pm/packages/gen_smtp geo MIT 3.4.3 https://hex.pm/packages/geo gettext Apache 2.0 0.19.1 https://hex.pm/packages/gettext grumble Apache 2.0 ~&gt; 0.1.3 https://hex.pm/packages/grumble hackney Apache 2.0 1.18.1 https://hex.pm/packages/hackney html_entities MIT 0.5.2 https://hex.pm/packages/html_entities html_sanitize_ex MIT 1.4.2 https://hex.pm/packages/html_sanitize_ex http_signatures GPL v3 0.1.0 https://git.pleroma.social/pleroma/http_signatures.git httpoison MIT 1.8.1 https://hex.pm/packages/httpoison idna MIT 6.1.1 https://hex.pm/packages/idna inflex Apache 2.0 2.1.0 https://hex.pm/packages/inflex jason Apache 2.0 1.3.0 https://hex.pm/packages/jason jumper MIT 1.0.1 https://hex.pm/packages/jumper libgraph MIT 0.13.3 https://hex.pm/packages/libgraph licensir MIT 0.7.0 https://github.com/bonfire-networks/licensir linkify MIT 0.2.0 https://github.com/bonfire-networks/linkify makeup BSD; Unrecognized license 1.1.0 https://hex.pm/packages/makeup makeup_diff MIT 0.1.0 https://hex.pm/packages/makeup_diff makeup_eex BSD; Unrecognized license 0.1.1 https://hex.pm/packages/makeup_eex makeup_elixir BSD; Unrecognized license 0.16.0 https://hex.pm/packages/makeup_elixir makeup_erlang BSD 0.1.1 https://hex.pm/packages/makeup_erlang makeup_graphql BSD 0.1.2 https://hex.pm/packages/makeup_graphql makeup_html MIT 0.1.0 https://hex.pm/packages/makeup_html makeup_js MIT 0.1.0 https://hex.pm/packages/makeup_js makeup_sql BSD 0.1.0 https://hex.pm/packages/makeup_sql meck Apache 2.0 0.9.2 https://hex.pm/packages/meck metrics BSD 1.0.1 https://hex.pm/packages/metrics mime Apache 2.0 1.6.0 https://hex.pm/packages/mime mimerl MIT 1.2.0 https://hex.pm/packages/mimerl mimetype_parser MIT 0.1.3 https://hex.pm/packages/mimetype_parser mix_test_interactive MIT ~&gt; 1.2 https://hex.pm/packages/mix_test_interactive mix_test_watch MIT ~&gt; 1.0 https://hex.pm/packages/mix_test_watch mix_unused MIT; Unrecognized license 0.4.0 https://hex.pm/packages/mix_unused mochiweb MIT 2.22.0 https://hex.pm/packages/mochiweb mock MIT ~&gt; 0.3 https://hex.pm/packages/mock mogrify MIT 0.9.1 https://hex.pm/packages/mogrify mox Apache 2.0 ~&gt; 1.0 https://hex.pm/packages/mox nimble_parsec Apache 2.0 1.2.3 https://hex.pm/packages/nimble_parsec nimble_totp Apache 2.0 0.2.0 https://hex.pm/packages/nimble_totp nodeinfo AGPL v3 0.1.0 https://github.com/bonfire-networks/nodeinfo oban Apache 2.0 2.8.0 https://hex.pm/packages/oban paginator MIT 1.0.4 https://github.com/bonfire-networks/paginator pane MIT 0.4.1 https://hex.pm/packages/pane parse_trans Apache 2.0 3.3.1 https://hex.pm/packages/parse_trans pbkdf2_elixir BSD-3-Clause; Unrecognized license 2.0.0 https://hex.pm/packages/pbkdf2_elixir periscope Apache 2.0 0.4.6 https://hex.pm/packages/periscope phoenix MIT 1.6.10 https://hex.pm/packages/phoenix phoenix_ecto MIT 4.4.0 https://hex.pm/packages/phoenix_ecto phoenix_gon MIT 0.4.1 https://github.com/bonfire-networks/phoenix_gon phoenix_html MIT 3.2.0 https://hex.pm/packages/phoenix_html phoenix_live_dashboard MIT 0.6.5 https://hex.pm/packages/phoenix_live_dashboard phoenix_live_reload MIT 1.3.3 https://hex.pm/packages/phoenix_live_reload phoenix_live_view MIT 0.17.10 https://hex.pm/packages/phoenix_live_view phoenix_pubsub MIT 2.1.1 https://hex.pm/packages/phoenix_pubsub phoenix_view MIT 1.1.2 https://hex.pm/packages/phoenix_view plug Apache 2.0 1.13.6 https://hex.pm/packages/plug plug_cowboy Apache 2.0 2.5.2 https://hex.pm/packages/plug_cowboy plug_crypto Apache 2.0 1.2.2 https://hex.pm/packages/plug_crypto pointers Apache 2.0 0.6.0 https://github.com/bonfire-networks/pointers pointers_ulid MIT 0.2.2 https://github.com/bonfire-networks/pointers_ulid postgrex Apache 2.0 0.16.3 https://hex.pm/packages/postgrex pseudo_gettext Undefined 0.1.0 https://github.com/tmbb/pseudo_gettext ranch ISC 1.8.0 https://hex.pm/packages/ranch recase MIT 0.7.0 https://hex.pm/packages/recase redirect Apache 2.0 0.3.0 https://hex.pm/packages/redirect scribe MIT 0.10.0 https://hex.pm/packages/scribe sentry MIT 8.0.6 https://hex.pm/packages/sentry sleeplocks MIT 1.1.1 https://hex.pm/packages/sleeplocks sobelow Apache 2.0 0.11.1 https://hex.pm/packages/sobelow solid MIT 0.12.0 https://hex.pm/packages/solid sourceror Apache 2.0 0.11.1 https://hex.pm/packages/sourceror ssl_verify_fun MIT 1.1.6 https://hex.pm/packages/ssl_verify_fun statistex MIT 1.0.0 https://hex.pm/packages/statistex surface MIT 0.7.4 https://hex.pm/packages/surface surface_heroicons Undefined 0.5.3 https://github.com/rocketinsights/surface_heroicons sweet_xml MIT 0.7.3 https://hex.pm/packages/sweet_xml table_rex MIT 3.1.1 https://hex.pm/packages/table_rex telemetry Apache 2.0 1.1.0 https://hex.pm/packages/telemetry telemetry_metrics Apache 2.0 0.6.1 https://hex.pm/packages/telemetry_metrics telemetry_poller Apache 2.0 1.0.0 https://hex.pm/packages/telemetry_poller tesla MIT 1.4.4 https://hex.pm/packages/tesla timex MIT 3.7.8 https://hex.pm/packages/timex twinkle_star GPL v3 0.1.0 https://github.com/bonfire-networks/twinkle_star typed_struct MIT ~&gt; 0.3.0 https://hex.pm/packages/typed_struct tzdata MIT 1.1.1 https://hex.pm/packages/tzdata unicode_util_compat Apache 2.0 0.7.0 https://hex.pm/packages/unicode_util_compat unsafe MIT 1.0.1 https://hex.pm/packages/unsafe verbs MIT 0.6.1 https://github.com/shannonwells/verbs_ex voodoo Undefined 0.1.0 https://github.com/bonfire-networks/voodoo waffle Apache 2.0 1.1.6 https://hex.pm/packages/waffle wallaby MIT ~&gt; 0.29.1 https://hex.pm/packages/wallaby web_driver_client MIT ~&gt; 0.2.0 https://hex.pm/packages/web_driver_client where Apache 2.0 0.1.0 https://github.com/bonfire-networks/where zest Apache 2.0 0.1.2 https://hex.pm/packages/zest ------------------------------ ------------------------------------ ------------ ------------------------------------------------------------------","ref":"deps-classic.html","title":"Classic","type":"extras"},{"doc":"Package License Version Link absinthe MIT 1.7.0 https://hex.pm/packages/absinthe absinthe_client MIT 2.0.0 https://github.com/bonfire-networks/absinthe_client.git absinthe_error_payload BSD-3; Unrecognized license 1.1.4 https://hex.pm/packages/absinthe_error_payload absinthe_phoenix MIT 2.0.2 https://hex.pm/packages/absinthe_phoenix absinthe_plug MIT 1.5.8 https://hex.pm/packages/absinthe_plug activity_pub AGPL v3 0.1.0 https://github.com/bonfire-networks/activity_pub argon2_elixir Apache 2.0 ~&gt; 2.4 https://hex.pm/packages/argon2_elixir arrows Undefined 0.1.0 https://github.com/bonfire-networks/arrows bamboo MIT 2.2.0 https://hex.pm/packages/bamboo bamboo_smtp MIT 4.1.0 https://hex.pm/packages/bamboo_smtp bonfire_api_graphql MPL 2.0 0.1.0 https://github.com/bonfire-networks/bonfire_api_graphql bonfire_boundaries MPL 2.0 0.1.0 https://github.com/bonfire-networks/bonfire_boundaries bonfire_breadpub AGPL v3 0.1.0 https://github.com/bonfire-networks/bonfire_breadpub bonfire_classify AGPL v3 0.1.0 https://github.com/bonfire-networks/bonfire_classify bonfire_common MPL 2.0 0.1.0 https://github.com/bonfire-networks/bonfire_common bonfire_data_access_control MPL 2.0 0.1.0 https://github.com/bonfire-networks/bonfire_data_access_control bonfire_data_activity_pub MPL 2.0 0.1.0 https://github.com/bonfire-networks/bonfire_data_activity_pub bonfire_data_assort MPL 2.0 0.1.0 https://github.com/bonfire-networks/bonfire_data_assort bonfire_data_edges Undefined 0.1.0 https://github.com/bonfire-networks/bonfire_data_edges bonfire_data_identity MPL 2.0 0.1.0 https://github.com/bonfire-networks/bonfire_data_identity bonfire_data_shared_user MPL 2.0 0.1.0 https://github.com/bonfire-networks/bonfire_data_shared_user bonfire_data_social MPL 2.0 0.1.0 https://github.com/bonfire-networks/bonfire_data_social bonfire_editor_ck MIT 0.1.0 https://github.com/bonfire-networks/bonfire_editor_ck bonfire_epics Apache 2.0 0.1.0 https://github.com/bonfire-networks/bonfire_epics bonfire_fail MPL 2.0 0.1.0 https://github.com/bonfire-networks/bonfire_fail bonfire_federate_activitypub AGPL v3 0.1.0 https://github.com/bonfire-networks/bonfire_federate_activitypub bonfire_files AGPL v3 0.1.0 https://github.com/bonfire-networks/bonfire_files bonfire_geolocate AGPL v3 0.1.0 https://github.com/bonfire-networks/bonfire_geolocate bonfire_invite_links AGPL v3 0.0.1 https://github.com/bonfire-networks/bonfire_invite_links bonfire_mailer MPL 2.0 0.1.0 https://github.com/bonfire-networks/bonfire_mailer bonfire_me AGPL v3 0.1.0 https://github.com/bonfire-networks/bonfire_me bonfire_quantify AGPL v3 0.1.0 https://github.com/bonfire-networks/bonfire_quantify bonfire_search AGPL v3 0.1.0 https://github.com/bonfire-networks/bonfire_search bonfire_social AGPL v3 0.1.0 https://github.com/bonfire-networks/bonfire_social bonfire_tag AGPL v3 0.1.0 https://github.com/bonfire-networks/bonfire_tag bonfire_ui_coordination AGPL v3 0.1.0 https://github.com/bonfire-networks/bonfire_ui_coordination bonfire_ui_kanban AGPL v3 0.1.0 https://github.com/bonfire-networks/bonfire_ui_kanban bonfire_ui_social AGPL v3 0.1.0 https://github.com/bonfire-networks/bonfire_ui_social bonfire_ui_valueflows AGPL v3 0.1.0 https://github.com/bonfire-networks/bonfire_ui_valueflows bonfire_valueflows AGPL v3 0.1.0 https://github.com/bonfire-networks/bonfire_valueflows bonfire_valueflows_observe AGPL v3 0.1.0 https://github.com/bonfire-networks/bonfire_valueflows_observe bonfire_website AGPL v3 0.1.0 https://github.com/bonfire-networks/bonfire_website cachex MIT 3.4.0 https://hex.pm/packages/cachex certifi BSD 2.9.0 https://hex.pm/packages/certifi cldr_utils Apache 2.0 2.17.1 https://hex.pm/packages/cldr_utils combine MIT 0.10.0 https://hex.pm/packages/combine comeonin BSD-3-Clause; Unrecognized license 5.3.3 https://hex.pm/packages/comeonin connection Apache 2.0 1.1.0 https://hex.pm/packages/connection cowboy ISC 2.9.0 https://hex.pm/packages/cowboy cowboy_telemetry Apache 2.0 0.4.0 https://hex.pm/packages/cowboy_telemetry cowlib ISC 2.11.0 https://hex.pm/packages/cowlib dataloader MIT 1.0.10 https://hex.pm/packages/dataloader db_connection Apache 2.0 2.4.1 https://hex.pm/packages/db_connection decimal Apache 2.0 2.0.0 https://hex.pm/packages/decimal earmark Apache 2.0 1.4.20 https://hex.pm/packages/earmark earmark_parser Apache 2.0 1.4.18 https://hex.pm/packages/earmark_parser ecto Apache 2.0 3.7.1 https://hex.pm/packages/ecto ecto_erd Apache 2.0 0.4.1 https://hex.pm/packages/ecto_erd ecto_materialized_path Apache 2.0 0.3.0 https://github.com/bonfire-networks/ecto_materialized_path ecto_psql_extras MIT 0.7.4 https://hex.pm/packages/ecto_psql_extras ecto_ranked MIT 0.5.0 https://hex.pm/packages/ecto_ranked ecto_shorts MIT 1.1.1 https://github.com/bonfire-networks/ecto_shorts ecto_sparkles Undefined 0.1.0 https://github.com/bonfire-networks/ecto_sparkles ecto_sql Apache 2.0 3.7.2 https://hex.pm/packages/ecto_sql eflambe Apache 2.0 0.2.2 https://hex.pm/packages/eflambe elixir_make Apache 2.0 ~&gt; 0.6 https://hex.pm/packages/elixir_make email_checker MIT 0.2.4 https://hex.pm/packages/email_checker emote Undefined 0.1.0 https://github.com/bonfire-networks/emote eternal MIT 1.2.2 https://hex.pm/packages/eternal ex_cldr Apache 2.0 2.26.1 https://hex.pm/packages/ex_cldr ex_doc Apache 2.0 0.28.1 https://hex.pm/packages/ex_doc ex_machina MIT ~&gt; 2.4 https://hex.pm/packages/ex_machina ex_unit_notifier MIT ~&gt; 1.0 https://hex.pm/packages/ex_unit_notifier exsync BSD 3-Clause; Unrecognized license 0.2.4 https://hex.pm/packages/exsync faker MIT 0.17.0 https://hex.pm/packages/faker fast_ngram MIT 1.2.0 https://hex.pm/packages/fast_ngram file_info MIT 0.0.4 https://hex.pm/packages/file_info file_system WTFPL 0.2.10 https://hex.pm/packages/file_system flame_on MIT 0.2.1 https://hex.pm/packages/flame_on flexto Apache 2.0 0.2.3 https://github.com/bonfire-networks/flexto floki MIT 0.32.0 https://hex.pm/packages/floki gen_smtp BSD 2-clause; Unrecognized license 1.1.1 https://hex.pm/packages/gen_smtp geo MIT 3.4.3 https://hex.pm/packages/geo geo_postgis MIT 3.4.1 https://hex.pm/packages/geo_postgis geocoder MIT 1.1.4 https://hex.pm/packages/geocoder geohash Apache 2.0 1.2.2 https://hex.pm/packages/geohash gettext Apache 2.0 0.19.1 https://hex.pm/packages/gettext git_diff MIT 0.6.3 https://hex.pm/packages/git_diff grumble Apache 2.0 ~&gt; 0.1.3 https://hex.pm/packages/grumble hackney Apache 2.0 1.18.1 https://hex.pm/packages/hackney html_entities MIT 0.5.2 https://hex.pm/packages/html_entities html_sanitize_ex MIT 1.4.2 https://hex.pm/packages/html_sanitize_ex http_signatures GPL v3 0.1.0 https://git.pleroma.social/pleroma/http_signatures.git httpoison MIT 1.8.0 https://hex.pm/packages/httpoison hut MIT 1.3.0 https://hex.pm/packages/hut idna MIT 6.1.1 https://hex.pm/packages/idna inflex Apache 2.0 2.1.0 https://hex.pm/packages/inflex jason Apache 2.0 1.3.0 https://hex.pm/packages/jason jumper MIT 1.0.1 https://hex.pm/packages/jumper licensir MIT 0.7.0 https://github.com/bonfire-networks/licensir linkify MIT 0.2.0 https://github.com/bonfire-networks/linkify makeup BSD; Unrecognized license 1.0.5 https://hex.pm/packages/makeup makeup_elixir BSD; Unrecognized license 0.15.2 https://hex.pm/packages/makeup_elixir makeup_erlang BSD 0.1.1 https://hex.pm/packages/makeup_erlang mappable New BSD 0.2.4 https://hex.pm/packages/mappable meck Apache 2.0 0.9.2 https://hex.pm/packages/meck metrics BSD 1.0.1 https://hex.pm/packages/metrics mime Apache 2.0 1.6.0 https://hex.pm/packages/mime mimerl MIT 1.2.0 https://hex.pm/packages/mimerl mimetype_parser MIT 0.1.3 https://hex.pm/packages/mimetype_parser mix_test_interactive MIT ~&gt; 1.0 https://hex.pm/packages/mix_test_interactive mix_test_watch MIT ~&gt; 1.0 https://hex.pm/packages/mix_test_watch mix_unused MIT; Unrecognized license 0.3.0 https://hex.pm/packages/mix_unused mochiweb MIT 2.22.0 https://hex.pm/packages/mochiweb mock MIT ~&gt; 0.3 https://hex.pm/packages/mock neuron ISC 5.0.0 https://hex.pm/packages/neuron nimble_parsec Apache 2.0 1.2.2 https://hex.pm/packages/nimble_parsec nodeinfo AGPL v3 0.1.0 https://github.com/bonfire-networks/nodeinfo oban Apache 2.0 2.8.0 https://hex.pm/packages/oban ok Apache 2.0 2.3.0 https://hex.pm/packages/ok paginator MIT 1.0.4 https://github.com/bonfire-networks/paginator pane MIT 0.4.1 https://hex.pm/packages/pane parse_trans Apache 2.0 3.3.1 https://hex.pm/packages/parse_trans pbkdf2_elixir BSD-3-Clause; Unrecognized license 1.4.2 https://hex.pm/packages/pbkdf2_elixir phil_columns MIT 3.1.0 https://hex.pm/packages/phil_columns phoenix MIT 1.6.6 https://hex.pm/packages/phoenix phoenix_ecto MIT 4.4.0 https://hex.pm/packages/phoenix_ecto phoenix_gon MIT 0.4.1 https://github.com/bonfire-networks/phoenix_gon phoenix_html MIT 3.2.0 https://hex.pm/packages/phoenix_html phoenix_live_dashboard MIT 0.6.5 https://hex.pm/packages/phoenix_live_dashboard phoenix_live_reload MIT 1.3.3 https://hex.pm/packages/phoenix_live_reload phoenix_live_view MIT 0.17.7 https://hex.pm/packages/phoenix_live_view phoenix_pubsub MIT 2.0.0 https://hex.pm/packages/phoenix_pubsub phoenix_view MIT 1.1.2 https://hex.pm/packages/phoenix_view plug Apache 2.0 1.13.3 https://hex.pm/packages/plug plug_cowboy Apache 2.0 2.5.2 https://hex.pm/packages/plug_cowboy plug_crypto Apache 2.0 1.2.2 https://hex.pm/packages/plug_crypto pointers Apache 2.0 0.6.0 https://github.com/bonfire-networks/pointers pointers_ulid MIT 0.2.2 https://github.com/bonfire-networks/pointers_ulid poolboy Unlicense; Apache 2.0; ISC 1.5.2 https://hex.pm/packages/poolboy postgrex Apache 2.0 0.16.2 https://hex.pm/packages/postgrex ranch ISC 1.8.0 https://hex.pm/packages/ranch recase MIT 0.7.0 https://hex.pm/packages/recase redirect Apache 2.0 0.3.0 https://hex.pm/packages/redirect scribe MIT 0.10.0 https://hex.pm/packages/scribe sentry MIT 8.0.6 https://hex.pm/packages/sentry sleeplocks MIT 1.1.1 https://hex.pm/packages/sleeplocks sobelow Apache 2.0 0.11.1 https://hex.pm/packages/sobelow sourceror Apache 2.0 0.10.0 https://hex.pm/packages/sourceror ssl_verify_fun MIT 1.1.6 https://hex.pm/packages/ssl_verify_fun stream_data Apache 2.0 0.5.0 https://hex.pm/packages/stream_data surface MIT 0.7.1 https://hex.pm/packages/surface surface_heroicons Undefined 0.5.3 https://github.com/rocketinsights/surface_heroicons table_rex MIT 3.1.1 https://hex.pm/packages/table_rex telemetry Apache 2.0 1.0.0 https://hex.pm/packages/telemetry telemetry_metrics Apache 2.0 0.6.1 https://hex.pm/packages/telemetry_metrics telemetry_poller Apache 2.0 1.0.0 https://hex.pm/packages/telemetry_poller tesla MIT 1.4.4 https://hex.pm/packages/tesla timex MIT 3.7.6 https://hex.pm/packages/timex towel MIT 0.2.1 https://hex.pm/packages/towel twinkle_star GPL v3 0.1.0 https://github.com/bonfire-networks/twinkle_star typed_struct MIT ~&gt; 0.2.1 https://hex.pm/packages/typed_struct tzdata MIT 1.1.1 https://hex.pm/packages/tzdata unicode_util_compat Apache 2.0 0.7.0 https://hex.pm/packages/unicode_util_compat unsafe MIT 1.0.1 https://hex.pm/packages/unsafe verbs MIT 0.6.1 https://github.com/shannonwells/verbs_ex voodoo Undefined 0.1.0 https://github.com/bonfire-networks/voodoo waffle Apache 2.0 1.1.6 https://hex.pm/packages/waffle where Apache 2.0 0.1.0 https://github.com/bonfire-networks/where zest Apache 2.0 0.1.2 https://hex.pm/packages/zest ------------------------------ ------------------------------------ ---------- ------------------------------------------------------------------","ref":"deps-cooperation.html","title":"Cooperation","type":"extras"}]